
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000144  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000023  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000354  00000000  00000000  000001db  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000146  00000000  00000000  0000052f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000215  00000000  00000000  00000675  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000103  00000000  00000000  000008bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000118  00000000  00000000  000009bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000078  00000000  00000000  00000ad7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 43 00 	call	0x86	; 0x86 <main>
  64:	0c 94 a0 00 	jmp	0x140	; 0x140 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <pwm>:
#include<avr/io.h>
#include<util/delay.h>
#include<sfr_defs.h>

void pwm(int time)
{int i;
  6c:	20 e0       	ldi	r18, 0x00	; 0
  6e:	30 e0       	ldi	r19, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
  70:	5a e1       	ldi	r21, 0x1A	; 26
  72:	05 c0       	rjmp	.+10     	; 0x7e <pwm+0x12>
  74:	45 2f       	mov	r20, r21
  76:	4a 95       	dec	r20
  78:	f1 f7       	brne	.-4      	; 0x76 <pwm+0xa>
for(i=0;i<time;i++)
  7a:	2f 5f       	subi	r18, 0xFF	; 255
  7c:	3f 4f       	sbci	r19, 0xFF	; 255
  7e:	28 17       	cp	r18, r24
  80:	39 07       	cpc	r19, r25
  82:	c4 f3       	brlt	.-16     	; 0x74 <pwm+0x8>
_delay_us(10);
}
  84:	08 95       	ret

00000086 <main>:

int main(void)
{unsigned int i,j;
  86:	ff 92       	push	r15
  88:	0f 93       	push	r16
  8a:	1f 93       	push	r17
DDRA=0xF0;
  8c:	80 ef       	ldi	r24, 0xF0	; 240
  8e:	8a bb       	out	0x1a, r24	; 26
PORTA=0x00;
  90:	1b ba       	out	0x1b, r1	; 27
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	50 e0       	ldi	r21, 0x00	; 0
{
for(i=1;i<100;i++)
{
 for(j=0;j<10;j++)
 {
 PORTA=0x50;
  96:	10 e5       	ldi	r17, 0x50	; 80
  98:	3a e1       	ldi	r19, 0x1A	; 26
 pwm(i);
 PORTA=0xA0;
  9a:	80 ea       	ldi	r24, 0xA0	; 160
  9c:	f8 2e       	mov	r15, r24
 pwm(100-i);
  9e:	a4 e6       	ldi	r26, 0x64	; 100
  a0:	b0 e0       	ldi	r27, 0x00	; 0
{
 for(j=0;j<10;j++)
 {
 PORTA=0x50;
 pwm(i);
 PORTA=0xA0;
  a2:	00 ea       	ldi	r16, 0xA0	; 160
  a4:	20 c0       	rjmp	.+64     	; 0xe6 <main+0x60>
}

int main(void)
{unsigned int i,j;
DDRA=0xF0;
PORTA=0x00;
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
 for(j=0;j<10;j++)
 {
 PORTA=0x50;
 pwm(i);
 PORTA=0xA0;
 pwm(100-i);
  aa:	fd 01       	movw	r30, r26
  ac:	e4 1b       	sub	r30, r20
  ae:	f5 0b       	sbc	r31, r21
{
for(i=1;i<100;i++)
{
 for(j=0;j<10;j++)
 {
 PORTA=0x50;
  b0:	1b bb       	out	0x1b, r17	; 27
 pwm(i);
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	23 2f       	mov	r18, r19
  b8:	2a 95       	dec	r18
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x32>
#include<util/delay.h>
#include<sfr_defs.h>

void pwm(int time)
{int i;
for(i=0;i<time;i++)
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	84 17       	cp	r24, r20
  c0:	95 07       	cpc	r25, r21
  c2:	cc f3       	brlt	.-14     	; 0xb6 <main+0x30>
{
 for(j=0;j<10;j++)
 {
 PORTA=0x50;
 pwm(i);
 PORTA=0xA0;
  c4:	fb ba       	out	0x1b, r15	; 27
 pwm(100-i);
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	23 2f       	mov	r18, r19
  cc:	2a 95       	dec	r18
  ce:	f1 f7       	brne	.-4      	; 0xcc <main+0x46>
#include<util/delay.h>
#include<sfr_defs.h>

void pwm(int time)
{int i;
for(i=0;i<time;i++)
  d0:	01 96       	adiw	r24, 0x01	; 1
  d2:	8e 17       	cp	r24, r30
  d4:	9f 07       	cpc	r25, r31
  d6:	cc f3       	brlt	.-14     	; 0xca <main+0x44>
PORTA=0x00;
while(1)
{
for(i=1;i<100;i++)
{
 for(j=0;j<10;j++)
  d8:	6f 5f       	subi	r22, 0xFF	; 255
  da:	7f 4f       	sbci	r23, 0xFF	; 255
  dc:	6a 30       	cpi	r22, 0x0A	; 10
  de:	71 05       	cpc	r23, r1
  e0:	39 f7       	brne	.-50     	; 0xb0 <main+0x2a>
{unsigned int i,j;
DDRA=0xF0;
PORTA=0x00;
while(1)
{
for(i=1;i<100;i++)
  e2:	4f 5f       	subi	r20, 0xFF	; 255
  e4:	5f 4f       	sbci	r21, 0xFF	; 255
  e6:	44 36       	cpi	r20, 0x64	; 100
  e8:	51 05       	cpc	r21, r1
  ea:	e8 f2       	brcs	.-70     	; 0xa6 <main+0x20>
  ec:	21 c0       	rjmp	.+66     	; 0x130 <main+0xaa>
}
for(i=1;i<100;i++)
{
 for(j=0;j<10;j++)
 {
 PORTA=0xA0;
  ee:	0b bb       	out	0x1b, r16	; 27
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	23 2f       	mov	r18, r19
  f6:	2a 95       	dec	r18
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x70>
#include<util/delay.h>
#include<sfr_defs.h>

void pwm(int time)
{int i;
for(i=0;i<time;i++)
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	84 17       	cp	r24, r20
  fe:	95 07       	cpc	r25, r21
 100:	cc f3       	brlt	.-14     	; 0xf4 <main+0x6e>
{
 for(j=0;j<10;j++)
 {
 PORTA=0xA0;
 pwm(i);
 PORTA=0x50;
 102:	1b bb       	out	0x1b, r17	; 27
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	23 2f       	mov	r18, r19
 10a:	2a 95       	dec	r18
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x84>
#include<util/delay.h>
#include<sfr_defs.h>

void pwm(int time)
{int i;
for(i=0;i<time;i++)
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	8e 17       	cp	r24, r30
 112:	9f 07       	cpc	r25, r31
 114:	cc f3       	brlt	.-14     	; 0x108 <main+0x82>
 pwm(100-i);
 }
}
for(i=1;i<100;i++)
{
 for(j=0;j<10;j++)
 116:	6f 5f       	subi	r22, 0xFF	; 255
 118:	7f 4f       	sbci	r23, 0xFF	; 255
 11a:	6a 30       	cpi	r22, 0x0A	; 10
 11c:	71 05       	cpc	r23, r1
 11e:	39 f7       	brne	.-50     	; 0xee <main+0x68>
 pwm(i);
 PORTA=0xA0;
 pwm(100-i);
 }
}
for(i=1;i<100;i++)
 120:	4f 5f       	subi	r20, 0xFF	; 255
 122:	5f 4f       	sbci	r21, 0xFF	; 255
 124:	44 36       	cpi	r20, 0x64	; 100
 126:	51 05       	cpc	r21, r1
 128:	29 f4       	brne	.+10     	; 0x134 <main+0xae>
 12a:	41 e0       	ldi	r20, 0x01	; 1
 12c:	50 e0       	ldi	r21, 0x00	; 0
 12e:	db cf       	rjmp	.-74     	; 0xe6 <main+0x60>
 130:	41 e0       	ldi	r20, 0x01	; 1
 132:	50 e0       	ldi	r21, 0x00	; 0
 134:	60 e0       	ldi	r22, 0x00	; 0
 136:	70 e0       	ldi	r23, 0x00	; 0
{
 for(j=0;j<10;j++)
 {
 PORTA=0xA0;
 pwm(i);
 PORTA=0x50;
 138:	fd 01       	movw	r30, r26
 13a:	e4 1b       	sub	r30, r20
 13c:	f5 0b       	sbc	r31, r21
 13e:	d7 cf       	rjmp	.-82     	; 0xee <main+0x68>

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>
