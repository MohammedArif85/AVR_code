
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000173c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  0000173c  000017d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000007a  0080007c  0080007c  000017ec  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000017ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001cb  00000000  00000000  0000180c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d87  00000000  00000000  000019d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000259  00000000  00000000  0000275e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000093a  00000000  00000000  000029b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  000032f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000217  00000000  00000000  00003434  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004cf  00000000  00000000  0000364b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__vector_11>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__c.1778>:
      54:	6e 61 6e 00                                         nan.

00000058 <__c.1776>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d4 e0       	ldi	r29, 0x04	; 4
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ec e3       	ldi	r30, 0x3C	; 60
     16a:	f7 e1       	ldi	r31, 0x17	; 23
     16c:	02 c0       	rjmp	.+4      	; 0x172 <.do_copy_data_start>

0000016e <.do_copy_data_loop>:
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0

00000172 <.do_copy_data_start>:
     172:	ac 37       	cpi	r26, 0x7C	; 124
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <.do_copy_data_loop>

00000178 <__do_clear_bss>:
     178:	10 e0       	ldi	r17, 0x00	; 0
     17a:	ac e7       	ldi	r26, 0x7C	; 124
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a6 3f       	cpi	r26, 0xF6	; 246
     184:	b1 07       	cpc	r27, r17
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 cd 04 	call	0x99a	; 0x99a <main>
     18c:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <USART_INIT>:
/*
===================================================================
SET BAUD RATE
===================================================================
*/
	UBRRL=UBRRVAL;
     194:	8f ec       	ldi	r24, 0xCF	; 207
     196:	89 b9       	out	0x09, r24	; 9
	UBRRH=(UBRRVAL>>8);
     198:	10 bc       	out	0x20, r1	; 32
/*===================================================================
SET DATAFRAME FORMAT : ASYNCHRONOUS MODE, NO PARITY, 1 START BIT, 8BIT
                       SIZE DATA	
===================================================================
*/
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(0<<UCSZ2)|(1<<UCSZ1)|(1<<UCSZ0);
     19a:	86 e8       	ldi	r24, 0x86	; 134
     19c:	80 bd       	out	0x20, r24	; 32
*/
	//UCSRB=(1<<RXEN)|(1<<TXEN);
	
		//Enable Transmitter and Receiver and Interrupt on receive complete

	UCSRB=(1<<RXEN)|(1<<TXEN)|(1<<RXCIE);
     19e:	88 e9       	ldi	r24, 0x98	; 152
     1a0:	8a b9       	out	0x0a, r24	; 10

	//enable global interrupts

	set_sleep_mode(SLEEP_MODE_IDLE);
     1a2:	85 b7       	in	r24, 0x35	; 53
     1a4:	8f 74       	andi	r24, 0x4F	; 79
     1a6:	85 bf       	out	0x35, r24	; 53
	sei();
     1a8:	78 94       	sei

	
}
     1aa:	08 95       	ret

000001ac <rswritechar>:
/*
===================================================================
WAIT FOR EMPTY TRANSMIT BUFFER
===================================================================
*/
	while(!(UCSRA&(1<<UDRE)));
     1ac:	5d 9b       	sbis	0x0b, 5	; 11
     1ae:	fe cf       	rjmp	.-4      	; 0x1ac <rswritechar>
	UDR=c; //SEND RECEIVED DATA BACK
     1b0:	8c b9       	out	0x0c, r24	; 12
}
     1b2:	08 95       	ret

000001b4 <rsreadchar>:
/*
===================================================================
WAIT UNTIL DATA IS AVAILABLE
===================================================================
*/
	while(!(UCSRA&(1<<RXC)))
     1b4:	5f 9b       	sbis	0x0b, 7	; 11
     1b6:	fe cf       	rjmp	.-4      	; 0x1b4 <rsreadchar>
	{	}
	return UDR;
     1b8:	8c b1       	in	r24, 0x0c	; 12
}
     1ba:	08 95       	ret

000001bc <rsstr>:
===================================================================
FUNCTION TO PRINT STRING
===================================================================
*/
void rsstr(char *s)
{
     1bc:	fc 01       	movw	r30, r24
     1be:	04 c0       	rjmp	.+8      	; 0x1c8 <rsstr+0xc>
/*
===================================================================
WAIT FOR EMPTY TRANSMIT BUFFER
===================================================================
*/
	while(!(UCSRA&(1<<UDRE)));
     1c0:	5d 9b       	sbis	0x0b, 5	; 11
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <rsstr+0x4>
	UDR=c; //SEND RECEIVED DATA BACK
     1c4:	8c b9       	out	0x0c, r24	; 12
void rsstr(char *s)
{
	while(*s)
	{
		rswritechar(*s);
		s++;
     1c6:	31 96       	adiw	r30, 0x01	; 1
FUNCTION TO PRINT STRING
===================================================================
*/
void rsstr(char *s)
{
	while(*s)
     1c8:	80 81       	ld	r24, Z
     1ca:	88 23       	and	r24, r24
     1cc:	c9 f7       	brne	.-14     	; 0x1c0 <rsstr+0x4>
	{
		rswritechar(*s);
		s++;
	}
}
     1ce:	08 95       	ret

000001d0 <lcd_reset>:
#define LCD_RW      0x02
#define LCD_EN      0x04

void lcd_reset(void)
{
        lcd_port = 0xFF;
     1d0:	8f ef       	ldi	r24, 0xFF	; 255
     1d2:	88 bb       	out	0x18, r24	; 24
     1d4:	88 ec       	ldi	r24, 0xC8	; 200
     1d6:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1d8:	20 e9       	ldi	r18, 0x90	; 144
     1da:	31 e0       	ldi	r19, 0x01	; 1
     1dc:	f9 01       	movw	r30, r18
     1de:	31 97       	sbiw	r30, 0x01	; 1
     1e0:	f1 f7       	brne	.-4      	; 0x1de <lcd_reset+0xe>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1e4:	d9 f7       	brne	.-10     	; 0x1dc <lcd_reset+0xc>
        _delay_ms(20);
        lcd_port = 0x30+LCD_EN;
     1e6:	94 e3       	ldi	r25, 0x34	; 52
     1e8:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
     1ea:	80 e3       	ldi	r24, 0x30	; 48
     1ec:	88 bb       	out	0x18, r24	; 24
     1ee:	e0 e4       	ldi	r30, 0x40	; 64
     1f0:	fc e9       	ldi	r31, 0x9C	; 156
     1f2:	31 97       	sbiw	r30, 0x01	; 1
     1f4:	f1 f7       	brne	.-4      	; 0x1f2 <lcd_reset+0x22>
        _delay_ms(10);
        lcd_port = 0x30+LCD_EN;
     1f6:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
     1f8:	88 bb       	out	0x18, r24	; 24
     1fa:	20 ea       	ldi	r18, 0xA0	; 160
     1fc:	3f e0       	ldi	r19, 0x0F	; 15
     1fe:	f9 01       	movw	r30, r18
     200:	31 97       	sbiw	r30, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <lcd_reset+0x30>
        _delay_ms(1);
        lcd_port = 0x30+LCD_EN;
     204:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
     206:	88 bb       	out	0x18, r24	; 24
     208:	c9 01       	movw	r24, r18
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f1 f7       	brne	.-4      	; 0x20a <lcd_reset+0x3a>
        _delay_ms(1);
        lcd_port = 0x20+LCD_EN;
     20e:	84 e2       	ldi	r24, 0x24	; 36
     210:	88 bb       	out	0x18, r24	; 24
        lcd_port = 0x20;
     212:	80 e2       	ldi	r24, 0x20	; 32
     214:	88 bb       	out	0x18, r24	; 24
     216:	c9 01       	movw	r24, r18
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <lcd_reset+0x48>
        _delay_ms(1);
}
     21c:	08 95       	ret

0000021e <lcd_cmd>:
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     21e:	38 2f       	mov	r19, r24
     220:	30 7f       	andi	r19, 0xF0	; 240
     222:	23 2f       	mov	r18, r19
     224:	24 60       	ori	r18, 0x04	; 4
     226:	28 bb       	out	0x18, r18	; 24
        lcd_port = (cmd & 0xF0);
     228:	38 bb       	out	0x18, r19	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	24 e0       	ldi	r18, 0x04	; 4
     22e:	88 0f       	add	r24, r24
     230:	99 1f       	adc	r25, r25
     232:	2a 95       	dec	r18
     234:	e1 f7       	brne	.-8      	; 0x22e <lcd_cmd+0x10>
     236:	28 2f       	mov	r18, r24
     238:	24 60       	ori	r18, 0x04	; 4
     23a:	28 bb       	out	0x18, r18	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     23c:	88 bb       	out	0x18, r24	; 24
     23e:	80 e4       	ldi	r24, 0x40	; 64
     240:	9f e1       	ldi	r25, 0x1F	; 31
     242:	fc 01       	movw	r30, r24
     244:	31 97       	sbiw	r30, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <lcd_cmd+0x26>

      

        _delay_ms(2);
        _delay_ms(2);
}
     248:	01 97       	sbiw	r24, 0x01	; 1
     24a:	f1 f7       	brne	.-4      	; 0x248 <lcd_cmd+0x2a>
     24c:	08 95       	ret

0000024e <lcd_init>:

void lcd_init (void)
{       DDRB=0xFF;
     24e:	8f ef       	ldi	r24, 0xFF	; 255
     250:	87 bb       	out	0x17, r24	; 23
        PORTB=0x00; 
     252:	18 ba       	out	0x18, r1	; 24
        lcd_reset();         // Call LCD reset
     254:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_reset>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     258:	84 e2       	ldi	r24, 0x24	; 36
     25a:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
     25c:	80 e2       	ldi	r24, 0x20	; 32
     25e:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     260:	54 e8       	ldi	r21, 0x84	; 132
     262:	58 bb       	out	0x18, r21	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     264:	40 e8       	ldi	r20, 0x80	; 128
     266:	48 bb       	out	0x18, r20	; 24
     268:	20 e4       	ldi	r18, 0x40	; 64
     26a:	3f e1       	ldi	r19, 0x1F	; 31
     26c:	c9 01       	movw	r24, r18
     26e:	01 97       	sbiw	r24, 0x01	; 1
     270:	f1 f7       	brne	.-4      	; 0x26e <lcd_init+0x20>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     272:	c9 01       	movw	r24, r18
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <lcd_init+0x26>
     278:	94 e0       	ldi	r25, 0x04	; 4
     27a:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
     27c:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     27e:	84 ec       	ldi	r24, 0xC4	; 196
     280:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     282:	80 ec       	ldi	r24, 0xC0	; 192
     284:	88 bb       	out	0x18, r24	; 24
     286:	f9 01       	movw	r30, r18
     288:	31 97       	sbiw	r30, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <lcd_init+0x3a>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     28c:	f9 01       	movw	r30, r18
     28e:	31 97       	sbiw	r30, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <lcd_init+0x40>
     292:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
     294:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     296:	84 e6       	ldi	r24, 0x64	; 100
     298:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     29a:	80 e6       	ldi	r24, 0x60	; 96
     29c:	88 bb       	out	0x18, r24	; 24
     29e:	f9 01       	movw	r30, r18
     2a0:	31 97       	sbiw	r30, 0x01	; 1
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcd_init+0x52>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     2a4:	f9 01       	movw	r30, r18
     2a6:	31 97       	sbiw	r30, 0x01	; 1
     2a8:	f1 f7       	brne	.-4      	; 0x2a6 <lcd_init+0x58>
     2aa:	58 bb       	out	0x18, r21	; 24
        lcd_port = (cmd & 0xF0);
     2ac:	48 bb       	out	0x18, r20	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     2ae:	98 bb       	out	0x18, r25	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     2b0:	18 ba       	out	0x18, r1	; 24
     2b2:	c9 01       	movw	r24, r18
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <lcd_init+0x66>
        lcd_reset();         // Call LCD reset
        lcd_cmd(0x28);       // 4-bit mode - 2 line - 5x7 font.
        lcd_cmd(0x0C);       // Display on cursor - off .
        lcd_cmd(0x06);       // Automatic Increment - No Display shift.
        lcd_cmd(0x80);       // Address DDRAM with 0 offset 80h.
 }
     2b8:	c9 01       	movw	r24, r18
     2ba:	01 97       	sbiw	r24, 0x01	; 1
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <lcd_init+0x6c>
     2be:	08 95       	ret

000002c0 <lcd_data>:


void lcd_data (unsigned char dat)
{
        lcd_port = ((dat & 0xF0)|LCD_EN|LCD_RS);
     2c0:	98 2f       	mov	r25, r24
     2c2:	90 7f       	andi	r25, 0xF0	; 240
     2c4:	29 2f       	mov	r18, r25
     2c6:	25 60       	ori	r18, 0x05	; 5
     2c8:	28 bb       	out	0x18, r18	; 24
        lcd_port = ((dat & 0xF0)|LCD_RS);
     2ca:	91 60       	ori	r25, 0x01	; 1
     2cc:	98 bb       	out	0x18, r25	; 24
		
		lcd_port = (((dat << 4) & 0xF0)|LCD_EN|LCD_RS);
     2ce:	82 95       	swap	r24
     2d0:	80 7f       	andi	r24, 0xF0	; 240
     2d2:	98 2f       	mov	r25, r24
     2d4:	95 60       	ori	r25, 0x05	; 5
     2d6:	98 bb       	out	0x18, r25	; 24
        lcd_port = (((dat << 4) & 0xF0)|LCD_RS);
     2d8:	81 60       	ori	r24, 0x01	; 1
     2da:	88 bb       	out	0x18, r24	; 24
     2dc:	80 e4       	ldi	r24, 0x40	; 64
     2de:	9f e1       	ldi	r25, 0x1F	; 31
     2e0:	fc 01       	movw	r30, r24
     2e2:	31 97       	sbiw	r30, 0x01	; 1
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <lcd_data+0x22>
       
      

       _delay_ms(2);
       _delay_ms(2);
}
     2e6:	01 97       	sbiw	r24, 0x01	; 1
     2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_data+0x26>
     2ea:	08 95       	ret

000002ec <lcd_puts>:
void lcd_puts(char *aaa)
{
     2ec:	cf 93       	push	r28
     2ee:	df 93       	push	r29
     2f0:	ec 01       	movw	r28, r24
     2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <lcd_puts+0xc>
unsigned int i;
for(i=0;aaa[i]!=0;i++)
lcd_data(aaa[i]);
     2f4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
       _delay_ms(2);
}
void lcd_puts(char *aaa)
{
unsigned int i;
for(i=0;aaa[i]!=0;i++)
     2f8:	89 91       	ld	r24, Y+
     2fa:	88 23       	and	r24, r24
     2fc:	d9 f7       	brne	.-10     	; 0x2f4 <lcd_puts+0x8>
lcd_data(aaa[i]);

}
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	08 95       	ret

00000304 <itoa>:
void itoa(unsigned char num)
{
     304:	1f 93       	push	r17
     306:	18 2f       	mov	r17, r24
 unsigned char a,b;
 a=num%10;
 num=num/10;
 b=num%10;
 lcd_data(0x30+b); 
     308:	6a e0       	ldi	r22, 0x0A	; 10
     30a:	0e 94 23 0b 	call	0x1646	; 0x1646 <__udivmodqi4>
     30e:	0e 94 23 0b 	call	0x1646	; 0x1646 <__udivmodqi4>
     312:	89 2f       	mov	r24, r25
     314:	80 5d       	subi	r24, 0xD0	; 208
     316:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
 lcd_data(0x30+a); 
     31a:	81 2f       	mov	r24, r17
     31c:	6a e0       	ldi	r22, 0x0A	; 10
     31e:	0e 94 23 0b 	call	0x1646	; 0x1646 <__udivmodqi4>
     322:	89 2f       	mov	r24, r25
     324:	80 5d       	subi	r24, 0xD0	; 208
     326:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
}
     32a:	1f 91       	pop	r17
     32c:	08 95       	ret

0000032e <itoal>:
void itoal(unsigned int num)
{
     32e:	cf 92       	push	r12
     330:	df 92       	push	r13
     332:	ef 92       	push	r14
     334:	ff 92       	push	r15
     336:	0f 93       	push	r16
     338:	1f 93       	push	r17
     33a:	7c 01       	movw	r14, r24
 unsigned char a,b,c,d;
 a=num%10;
 num=num/10;
     33c:	6a e0       	ldi	r22, 0x0A	; 10
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     344:	d6 2e       	mov	r13, r22
     346:	c7 2e       	mov	r12, r23
 b=num%10;
 num=num/10;
     348:	86 2f       	mov	r24, r22
     34a:	97 2f       	mov	r25, r23
     34c:	6a e0       	ldi	r22, 0x0A	; 10
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     354:	16 2f       	mov	r17, r22
     356:	07 2f       	mov	r16, r23
 c=num%10;
 num=num/10;
 d=num%10;
 lcd_data(0x30+d); 
     358:	86 2f       	mov	r24, r22
     35a:	97 2f       	mov	r25, r23
     35c:	6a e0       	ldi	r22, 0x0A	; 10
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     364:	cb 01       	movw	r24, r22
     366:	6a e0       	ldi	r22, 0x0A	; 10
     368:	70 e0       	ldi	r23, 0x00	; 0
     36a:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     36e:	80 5d       	subi	r24, 0xD0	; 208
     370:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
 lcd_data(0x30+c); 
     374:	81 2f       	mov	r24, r17
     376:	90 2f       	mov	r25, r16
     378:	6a e0       	ldi	r22, 0x0A	; 10
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     380:	80 5d       	subi	r24, 0xD0	; 208
     382:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
 
 lcd_data(0x30+b); 
     386:	8d 2d       	mov	r24, r13
     388:	9c 2d       	mov	r25, r12
     38a:	6a e0       	ldi	r22, 0x0A	; 10
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     392:	80 5d       	subi	r24, 0xD0	; 208
     394:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
 lcd_data(0x30+a); 
     398:	c7 01       	movw	r24, r14
     39a:	6a e0       	ldi	r22, 0x0A	; 10
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	0e 94 2f 0b 	call	0x165e	; 0x165e <__udivmodhi4>
     3a2:	80 5d       	subi	r24, 0xD0	; 208
     3a4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
     3a8:	1f 91       	pop	r17
     3aa:	0f 91       	pop	r16
     3ac:	ff 90       	pop	r15
     3ae:	ef 90       	pop	r14
     3b0:	df 90       	pop	r13
     3b2:	cf 90       	pop	r12
     3b4:	08 95       	ret

000003b6 <__vector_11>:
volatile unsigned char charRead,GPScap=0,Latcard,Lngcard;  
volatile unsigned char   i,hour,min,sec,deg,mm,latdeg,latmin,lngdeg,lngmin;
volatile float latdsec,lngdsec;	

ISR(USART_RXC_vect)
{
     3b6:	1f 92       	push	r1
     3b8:	0f 92       	push	r0
     3ba:	0f b6       	in	r0, 0x3f	; 63
     3bc:	0f 92       	push	r0
     3be:	11 24       	eor	r1, r1
     3c0:	8f 93       	push	r24
     3c2:	ef 93       	push	r30
     3c4:	ff 93       	push	r31

	charRead=UDR;
     3c6:	8c b1       	in	r24, 0x0c	; 12
     3c8:	80 93 7d 00 	sts	0x007D, r24
	if(charRead == '$' && GPScap==0) 
     3cc:	80 91 7d 00 	lds	r24, 0x007D
     3d0:	84 32       	cpi	r24, 0x24	; 36
     3d2:	91 f4       	brne	.+36     	; 0x3f8 <__vector_11+0x42>
     3d4:	80 91 7c 00 	lds	r24, 0x007C
     3d8:	88 23       	and	r24, r24
     3da:	71 f4       	brne	.+28     	; 0x3f8 <__vector_11+0x42>
	{  
   /* GPS messages start with $ char */
	  i = 0;
     3dc:	10 92 8b 00 	sts	0x008B, r1
	  stringRead[i] = charRead;
     3e0:	e0 91 8b 00 	lds	r30, 0x008B
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 91 7d 00 	lds	r24, 0x007D
     3ea:	ee 56       	subi	r30, 0x6E	; 110
     3ec:	ff 4f       	sbci	r31, 0xFF	; 255
     3ee:	80 83       	st	Z, r24
	  GPScap=1;
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	80 93 7c 00 	sts	0x007C, r24
     3f6:	10 c0       	rjmp	.+32     	; 0x418 <__vector_11+0x62>
	  i++;
	 }
	 else if(GPScap==1 && charRead !=0x0d)
     3f8:	80 91 7c 00 	lds	r24, 0x007C
     3fc:	81 30       	cpi	r24, 0x01	; 1
     3fe:	91 f4       	brne	.+36     	; 0x424 <__vector_11+0x6e>
     400:	80 91 7d 00 	lds	r24, 0x007D
     404:	8d 30       	cpi	r24, 0x0D	; 13
     406:	71 f0       	breq	.+28     	; 0x424 <__vector_11+0x6e>
	 {
	  stringRead[i] = charRead;
     408:	e0 91 8b 00 	lds	r30, 0x008B
     40c:	f0 e0       	ldi	r31, 0x00	; 0
     40e:	80 91 7d 00 	lds	r24, 0x007D
     412:	ee 56       	subi	r30, 0x6E	; 110
     414:	ff 4f       	sbci	r31, 0xFF	; 255
     416:	80 83       	st	Z, r24
	  i++;  
     418:	80 91 8b 00 	lds	r24, 0x008B
     41c:	8f 5f       	subi	r24, 0xFF	; 255
     41e:	80 93 8b 00 	sts	0x008B, r24
     422:	0d c0       	rjmp	.+26     	; 0x43e <__vector_11+0x88>
	 
	 }
	   /* By this point, a complete GPS string has been read*/
	  /* Append the null terminator to the string read */
     else if(charRead ==0x0d)
     424:	80 91 7d 00 	lds	r24, 0x007D
     428:	8d 30       	cpi	r24, 0x0D	; 13
     42a:	49 f4       	brne	.+18     	; 0x43e <__vector_11+0x88>
	 {
	  stringRead[i] = '\0';
     42c:	e0 91 8b 00 	lds	r30, 0x008B
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	ee 56       	subi	r30, 0x6E	; 110
     434:	ff 4f       	sbci	r31, 0xFF	; 255
     436:	10 82       	st	Z, r1
	  GPScap=3;	 
     438:	83 e0       	ldi	r24, 0x03	; 3
     43a:	80 93 7c 00 	sts	0x007C, r24
	 }
     
}
     43e:	ff 91       	pop	r31
     440:	ef 91       	pop	r30
     442:	8f 91       	pop	r24
     444:	0f 90       	pop	r0
     446:	0f be       	out	0x3f, r0	; 63
     448:	0f 90       	pop	r0
     44a:	1f 90       	pop	r1
     44c:	18 95       	reti

0000044e <gpsatol>:
long gpsatol(const char *str)
{
     44e:	1f 93       	push	r17
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	ec 01       	movw	r28, r24
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	40 e0       	ldi	r20, 0x00	; 0
     45c:	50 e0       	ldi	r21, 0x00	; 0
     45e:	15 c0       	rjmp	.+42     	; 0x48a <__stack+0x2b>
  long ret = 0;
  while (*str >= '0' && *str <= '9')
    ret = 10 * ret + *str++ - '0';
     460:	ca 01       	movw	r24, r20
     462:	b9 01       	movw	r22, r18
     464:	2a e0       	ldi	r18, 0x0A	; 10
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	40 e0       	ldi	r20, 0x00	; 0
     46a:	50 e0       	ldi	r21, 0x00	; 0
     46c:	0e 94 04 0b 	call	0x1608	; 0x1608 <__mulsi3>
     470:	21 2f       	mov	r18, r17
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e0       	ldi	r20, 0x00	; 0
     476:	50 e0       	ldi	r21, 0x00	; 0
     478:	20 53       	subi	r18, 0x30	; 48
     47a:	30 40       	sbci	r19, 0x00	; 0
     47c:	40 40       	sbci	r20, 0x00	; 0
     47e:	50 40       	sbci	r21, 0x00	; 0
     480:	26 0f       	add	r18, r22
     482:	37 1f       	adc	r19, r23
     484:	48 1f       	adc	r20, r24
     486:	59 1f       	adc	r21, r25
     488:	21 96       	adiw	r28, 0x01	; 1
     
}
long gpsatol(const char *str)
{
  long ret = 0;
  while (*str >= '0' && *str <= '9')
     48a:	18 81       	ld	r17, Y
     48c:	81 2f       	mov	r24, r17
     48e:	80 53       	subi	r24, 0x30	; 48
     490:	8a 30       	cpi	r24, 0x0A	; 10
     492:	30 f3       	brcs	.-52     	; 0x460 <__stack+0x1>
    ret = 10 * ret + *str++ - '0';
  return ret;
}
     494:	b9 01       	movw	r22, r18
     496:	ca 01       	movw	r24, r20
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	1f 91       	pop	r17
     49e:	08 95       	ret

000004a0 <gpstime>:
void gpstime()
{     hour=(timeString[0]-'0')*10+(timeString[1]-'0')*1;    
     4a0:	80 91 71 00 	lds	r24, 0x0071
     4a4:	20 91 72 00 	lds	r18, 0x0072
     4a8:	20 51       	subi	r18, 0x10	; 16
     4aa:	3a e0       	ldi	r19, 0x0A	; 10
     4ac:	83 9f       	mul	r24, r19
     4ae:	c0 01       	movw	r24, r0
     4b0:	11 24       	eor	r1, r1
     4b2:	28 0f       	add	r18, r24
     4b4:	20 93 8c 00 	sts	0x008C, r18
      min=(timeString[2]-'0')*10+(timeString[3]-'0')*1;    
     4b8:	80 91 73 00 	lds	r24, 0x0073
     4bc:	20 91 74 00 	lds	r18, 0x0074
     4c0:	20 51       	subi	r18, 0x10	; 16
     4c2:	83 9f       	mul	r24, r19
     4c4:	c0 01       	movw	r24, r0
     4c6:	11 24       	eor	r1, r1
     4c8:	28 0f       	add	r18, r24
     4ca:	20 93 8d 00 	sts	0x008D, r18
      sec=(timeString[4]-'0')*10+(timeString[5]-'0')*1;    
     4ce:	80 91 75 00 	lds	r24, 0x0075
     4d2:	20 91 76 00 	lds	r18, 0x0076
     4d6:	20 51       	subi	r18, 0x10	; 16
     4d8:	83 9f       	mul	r24, r19
     4da:	c0 01       	movw	r24, r0
     4dc:	11 24       	eor	r1, r1
     4de:	28 0f       	add	r18, r24
     4e0:	20 93 8e 00 	sts	0x008E, r18
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     4e4:	84 e8       	ldi	r24, 0x84	; 132
     4e6:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
     4e8:	80 e8       	ldi	r24, 0x80	; 128
     4ea:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     4ec:	84 e2       	ldi	r24, 0x24	; 36
     4ee:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     4f0:	80 e2       	ldi	r24, 0x20	; 32
     4f2:	88 bb       	out	0x18, r24	; 24
     4f4:	80 e4       	ldi	r24, 0x40	; 64
     4f6:	9f e1       	ldi	r25, 0x1F	; 31
     4f8:	fc 01       	movw	r30, r24
     4fa:	31 97       	sbiw	r30, 0x01	; 1
     4fc:	f1 f7       	brne	.-4      	; 0x4fa <gpstime+0x5a>

          lcd_cmd(0x82);
		  itoa(hour);
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <gpstime+0x5e>
     502:	80 91 8c 00 	lds	r24, 0x008C
     506:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data(':');
     50a:	8a e3       	ldi	r24, 0x3A	; 58
     50c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoa(min);
     510:	80 91 8d 00 	lds	r24, 0x008D
     514:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data(':');
     518:	8a e3       	ldi	r24, 0x3A	; 58
     51a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoa(sec);
     51e:	80 91 8e 00 	lds	r24, 0x008E
     522:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		 
}
     526:	08 95       	ret

00000528 <gpsposlat>:
void gpsposlat()
{     latdeg=(timeString[0]-'0')*10+(timeString[1]-'0')*1;    
     528:	80 91 71 00 	lds	r24, 0x0071
     52c:	20 91 72 00 	lds	r18, 0x0072
     530:	20 51       	subi	r18, 0x10	; 16
     532:	fa e0       	ldi	r31, 0x0A	; 10
     534:	8f 9f       	mul	r24, r31
     536:	c0 01       	movw	r24, r0
     538:	11 24       	eor	r1, r1
     53a:	28 0f       	add	r18, r24
     53c:	20 93 8a 00 	sts	0x008A, r18
      latmin=(timeString[2]-'0')*10+(timeString[3]-'0')*1;    
     540:	80 91 73 00 	lds	r24, 0x0073
     544:	20 91 74 00 	lds	r18, 0x0074
     548:	20 51       	subi	r18, 0x10	; 16
     54a:	8f 9f       	mul	r24, r31
     54c:	c0 01       	movw	r24, r0
     54e:	11 24       	eor	r1, r1
     550:	28 0f       	add	r18, r24
     552:	20 93 91 00 	sts	0x0091, r18
      latdsec=(timeString[5]-'0')*1000+(timeString[6]-'0')*100+(timeString[7]-'0')*10+(timeString[8]-'0')*1;    
     556:	20 91 77 00 	lds	r18, 0x0077
     55a:	a0 91 76 00 	lds	r26, 0x0076
     55e:	40 91 78 00 	lds	r20, 0x0078
     562:	60 91 79 00 	lds	r22, 0x0079
     566:	70 e0       	ldi	r23, 0x00	; 0
     568:	60 5d       	subi	r22, 0xD0	; 208
     56a:	74 41       	sbci	r23, 0x14	; 20
     56c:	e4 e6       	ldi	r30, 0x64	; 100
     56e:	2e 9f       	mul	r18, r30
     570:	90 01       	movw	r18, r0
     572:	11 24       	eor	r1, r1
     574:	62 0f       	add	r22, r18
     576:	73 1f       	adc	r23, r19
     578:	4f 9f       	mul	r20, r31
     57a:	a0 01       	movw	r20, r0
     57c:	11 24       	eor	r1, r1
     57e:	64 0f       	add	r22, r20
     580:	75 1f       	adc	r23, r21
     582:	b0 e0       	ldi	r27, 0x00	; 0
     584:	d0 97       	sbiw	r26, 0x30	; 48
     586:	28 ee       	ldi	r18, 0xE8	; 232
     588:	33 e0       	ldi	r19, 0x03	; 3
     58a:	c9 01       	movw	r24, r18
     58c:	a8 9f       	mul	r26, r24
     58e:	90 01       	movw	r18, r0
     590:	a9 9f       	mul	r26, r25
     592:	30 0d       	add	r19, r0
     594:	b8 9f       	mul	r27, r24
     596:	30 0d       	add	r19, r0
     598:	11 24       	eor	r1, r1
     59a:	62 0f       	add	r22, r18
     59c:	73 1f       	adc	r23, r19
     59e:	88 27       	eor	r24, r24
     5a0:	77 fd       	sbrc	r23, 7
     5a2:	80 95       	com	r24
     5a4:	98 2f       	mov	r25, r24
     5a6:	0e 94 a0 0a 	call	0x1540	; 0x1540 <__floatsisf>
     5aa:	60 93 82 00 	sts	0x0082, r22
     5ae:	70 93 83 00 	sts	0x0083, r23
     5b2:	80 93 84 00 	sts	0x0084, r24
     5b6:	90 93 85 00 	sts	0x0085, r25
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     5ba:	84 ec       	ldi	r24, 0xC4	; 196
     5bc:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
     5be:	80 ec       	ldi	r24, 0xC0	; 192
     5c0:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     5c2:	84 e5       	ldi	r24, 0x54	; 84
     5c4:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     5c6:	80 e5       	ldi	r24, 0x50	; 80
     5c8:	88 bb       	out	0x18, r24	; 24
     5ca:	80 e4       	ldi	r24, 0x40	; 64
     5cc:	9f e1       	ldi	r25, 0x1F	; 31
     5ce:	fc 01       	movw	r30, r24
     5d0:	31 97       	sbiw	r30, 0x01	; 1
     5d2:	f1 f7       	brne	.-4      	; 0x5d0 <gpsposlat+0xa8>
        
          lcd_cmd(0xc5);
		  itoa(latdeg);
     5d4:	01 97       	sbiw	r24, 0x01	; 1
     5d6:	f1 f7       	brne	.-4      	; 0x5d4 <gpsposlat+0xac>
     5d8:	80 91 8a 00 	lds	r24, 0x008A
     5dc:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data(',');
     5e0:	8c e2       	ldi	r24, 0x2C	; 44
     5e2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoa(latmin);
     5e6:	80 91 91 00 	lds	r24, 0x0091
     5ea:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data('.');
     5ee:	8e e2       	ldi	r24, 0x2E	; 46
     5f0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoal(latdsec);
     5f4:	60 91 82 00 	lds	r22, 0x0082
     5f8:	70 91 83 00 	lds	r23, 0x0083
     5fc:	80 91 84 00 	lds	r24, 0x0084
     600:	90 91 85 00 	lds	r25, 0x0085
     604:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__fixunssfsi>
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	0e 94 97 01 	call	0x32e	; 0x32e <itoal>
		 
}
     610:	08 95       	ret

00000612 <gpsposlong>:
void gpsposlong()
{     lngdeg=(timeString[0]-'0')*100+(timeString[1]-'0')*10+(timeString[2]-'0')*1;    
     612:	20 91 71 00 	lds	r18, 0x0071
     616:	40 91 72 00 	lds	r20, 0x0072
     61a:	80 91 73 00 	lds	r24, 0x0073
     61e:	80 5d       	subi	r24, 0xD0	; 208
     620:	b4 e6       	ldi	r27, 0x64	; 100
     622:	2b 9f       	mul	r18, r27
     624:	90 01       	movw	r18, r0
     626:	11 24       	eor	r1, r1
     628:	82 0f       	add	r24, r18
     62a:	aa e0       	ldi	r26, 0x0A	; 10
     62c:	4a 9f       	mul	r20, r26
     62e:	a0 01       	movw	r20, r0
     630:	11 24       	eor	r1, r1
     632:	84 0f       	add	r24, r20
     634:	80 93 90 00 	sts	0x0090, r24
      lngmin=(timeString[3]-'0')*10+(timeString[4]-'0')*1;    
     638:	80 91 74 00 	lds	r24, 0x0074
     63c:	20 91 75 00 	lds	r18, 0x0075
     640:	20 51       	subi	r18, 0x10	; 16
     642:	8a 9f       	mul	r24, r26
     644:	c0 01       	movw	r24, r0
     646:	11 24       	eor	r1, r1
     648:	28 0f       	add	r18, r24
     64a:	20 93 8f 00 	sts	0x008F, r18
      lngdsec=(timeString[6]-'0')*1000+(timeString[7]-'0')*100+(timeString[8]-'0')*10+(timeString[9]-'0')*1;    
     64e:	20 91 78 00 	lds	r18, 0x0078
     652:	e0 91 77 00 	lds	r30, 0x0077
     656:	40 91 79 00 	lds	r20, 0x0079
     65a:	60 91 7a 00 	lds	r22, 0x007A
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	60 5d       	subi	r22, 0xD0	; 208
     662:	74 41       	sbci	r23, 0x14	; 20
     664:	2b 9f       	mul	r18, r27
     666:	90 01       	movw	r18, r0
     668:	11 24       	eor	r1, r1
     66a:	62 0f       	add	r22, r18
     66c:	73 1f       	adc	r23, r19
     66e:	4a 9f       	mul	r20, r26
     670:	a0 01       	movw	r20, r0
     672:	11 24       	eor	r1, r1
     674:	64 0f       	add	r22, r20
     676:	75 1f       	adc	r23, r21
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	f0 97       	sbiw	r30, 0x30	; 48
     67c:	28 ee       	ldi	r18, 0xE8	; 232
     67e:	33 e0       	ldi	r19, 0x03	; 3
     680:	c9 01       	movw	r24, r18
     682:	e8 9f       	mul	r30, r24
     684:	90 01       	movw	r18, r0
     686:	e9 9f       	mul	r30, r25
     688:	30 0d       	add	r19, r0
     68a:	f8 9f       	mul	r31, r24
     68c:	30 0d       	add	r19, r0
     68e:	11 24       	eor	r1, r1
     690:	62 0f       	add	r22, r18
     692:	73 1f       	adc	r23, r19
     694:	88 27       	eor	r24, r24
     696:	77 fd       	sbrc	r23, 7
     698:	80 95       	com	r24
     69a:	98 2f       	mov	r25, r24
     69c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <__floatsisf>
     6a0:	60 93 86 00 	sts	0x0086, r22
     6a4:	70 93 87 00 	sts	0x0087, r23
     6a8:	80 93 88 00 	sts	0x0088, r24
     6ac:	90 93 89 00 	sts	0x0089, r25
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     6b0:	84 e8       	ldi	r24, 0x84	; 132
     6b2:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
     6b4:	80 e8       	ldi	r24, 0x80	; 128
     6b6:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     6b8:	84 e5       	ldi	r24, 0x54	; 84
     6ba:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     6bc:	80 e5       	ldi	r24, 0x50	; 80
     6be:	88 bb       	out	0x18, r24	; 24
     6c0:	80 e4       	ldi	r24, 0x40	; 64
     6c2:	9f e1       	ldi	r25, 0x1F	; 31
     6c4:	fc 01       	movw	r30, r24
     6c6:	31 97       	sbiw	r30, 0x01	; 1
     6c8:	f1 f7       	brne	.-4      	; 0x6c6 <gpsposlong+0xb4>
       
          lcd_cmd(0x85);
		  itoa(lngdeg);
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <gpsposlong+0xb8>
     6ce:	80 91 90 00 	lds	r24, 0x0090
     6d2:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data(',');
     6d6:	8c e2       	ldi	r24, 0x2C	; 44
     6d8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoa(lngmin);
     6dc:	80 91 8f 00 	lds	r24, 0x008F
     6e0:	0e 94 82 01 	call	0x304	; 0x304 <itoa>
		  lcd_data('.');
     6e4:	8e e2       	ldi	r24, 0x2E	; 46
     6e6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		  itoal(lngdsec);
     6ea:	60 91 86 00 	lds	r22, 0x0086
     6ee:	70 91 87 00 	lds	r23, 0x0087
     6f2:	80 91 88 00 	lds	r24, 0x0088
     6f6:	90 91 89 00 	lds	r25, 0x0089
     6fa:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__fixunssfsi>
     6fe:	dc 01       	movw	r26, r24
     700:	cb 01       	movw	r24, r22
     702:	0e 94 97 01 	call	0x32e	; 0x32e <itoal>
		 
}
     706:	08 95       	ret

00000708 <parseGPS>:

void parseGPS()
{
     708:	1f 93       	push	r17
unsigned char  *pChar,j,k,lastcommaPosition;
while(GPScap!=3);
     70a:	80 91 7c 00 	lds	r24, 0x007C
     70e:	83 30       	cpi	r24, 0x03	; 3
     710:	e1 f7       	brne	.-8      	; 0x70a <parseGPS+0x2>
 
if(stringRead[3] == 'G' && stringRead[4] == 'G' && stringRead[5] == 'A')
     712:	80 91 95 00 	lds	r24, 0x0095
     716:	87 34       	cpi	r24, 0x47	; 71
     718:	09 f0       	breq	.+2      	; 0x71c <parseGPS+0x14>
     71a:	8c c0       	rjmp	.+280    	; 0x834 <parseGPS+0x12c>
     71c:	80 91 96 00 	lds	r24, 0x0096
     720:	87 34       	cpi	r24, 0x47	; 71
     722:	09 f0       	breq	.+2      	; 0x726 <parseGPS+0x1e>
     724:	87 c0       	rjmp	.+270    	; 0x834 <parseGPS+0x12c>
     726:	80 91 97 00 	lds	r24, 0x0097
     72a:	81 34       	cpi	r24, 0x41	; 65
     72c:	09 f0       	breq	.+2      	; 0x730 <parseGPS+0x28>
     72e:	82 c0       	rjmp	.+260    	; 0x834 <parseGPS+0x12c>
 {  PORTA=(PORTA^0x10)&0x10;
     730:	8b b3       	in	r24, 0x1b	; 27
     732:	80 95       	com	r24
     734:	80 71       	andi	r24, 0x10	; 16
     736:	8b bb       	out	0x1b, r24	; 27
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	04 c0       	rjmp	.+8      	; 0x744 <parseGPS+0x3c>
	      /* Get UTC time */
	      j = 7;  /* start of time field */
	      k = 0;
	      while(*(pChar+j) != ',') 
		  {
		   timeString[k] = *(pChar+j);
     73c:	af 58       	subi	r26, 0x8F	; 143
     73e:	bf 4f       	sbci	r27, 0xFF	; 255
     740:	ec 93       	st	X, r30
		   j++;
		   k++;
     742:	8f 5f       	subi	r24, 0xFF	; 255
     744:	89 5f       	subi	r24, 0xF9	; 249
	      */
          pChar = stringRead;
	      /* Get UTC time */
	      j = 7;  /* start of time field */
	      k = 0;
	      while(*(pChar+j) != ',') 
     746:	e8 2f       	mov	r30, r24
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	87 50       	subi	r24, 0x07	; 7
     74c:	ee 56       	subi	r30, 0x6E	; 110
     74e:	ff 4f       	sbci	r31, 0xFF	; 255
     750:	e0 81       	ld	r30, Z
     752:	a8 2f       	mov	r26, r24
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ec 32       	cpi	r30, 0x2C	; 44
     758:	89 f7       	brne	.-30     	; 0x73c <parseGPS+0x34>
		  {
		   timeString[k] = *(pChar+j);
		   j++;
		   k++;
	      }
	      timeString[k] = '\0';
     75a:	af 58       	subi	r26, 0x8F	; 143
     75c:	bf 4f       	sbci	r27, 0xFF	; 255
     75e:	1c 92       	st	X, r1
		//  gpstime(); 
		lastcommaPosition = j;
         pChar = stringRead;
	      j = lastcommaPosition + 1;
     760:	88 5f       	subi	r24, 0xF8	; 248
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	05 c0       	rjmp	.+10     	; 0x770 <parseGPS+0x68>
	      k = 0;
	      while(*(pChar+j) != ',') 
		  {
		   timeString[k] = *(pChar+j);
     766:	af 58       	subi	r26, 0x8F	; 143
     768:	bf 4f       	sbci	r27, 0xFF	; 255
     76a:	ec 93       	st	X, r30
		   j++;
     76c:	81 2f       	mov	r24, r17
		   k++;
     76e:	9f 5f       	subi	r25, 0xFF	; 255
		//  gpstime(); 
		lastcommaPosition = j;
         pChar = stringRead;
	      j = lastcommaPosition + 1;
	      k = 0;
	      while(*(pChar+j) != ',') 
     770:	e8 2f       	mov	r30, r24
     772:	f0 e0       	ldi	r31, 0x00	; 0
     774:	ee 56       	subi	r30, 0x6E	; 110
     776:	ff 4f       	sbci	r31, 0xFF	; 255
     778:	e0 81       	ld	r30, Z
     77a:	a9 2f       	mov	r26, r25
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	18 2f       	mov	r17, r24
     780:	1f 5f       	subi	r17, 0xFF	; 255
     782:	ec 32       	cpi	r30, 0x2C	; 44
     784:	81 f7       	brne	.-32     	; 0x766 <parseGPS+0x5e>
		   timeString[k] = *(pChar+j);
		   j++;
		   k++;
	      }
	      lastcommaPosition = j;
	      timeString[k] = '\0';
     786:	af 58       	subi	r26, 0x8F	; 143
     788:	bf 4f       	sbci	r27, 0xFF	; 255
     78a:	1c 92       	st	X, r1
          gpsposlat();
     78c:	0e 94 94 02 	call	0x528	; 0x528 <gpsposlat>
		lastcommaPosition = j;
         pChar = stringRead;
	      j = lastcommaPosition + 1;
     790:	81 2f       	mov	r24, r17
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	05 c0       	rjmp	.+10     	; 0x7a0 <parseGPS+0x98>
	      k = 0;
	      while(*(pChar+j) != ',') 
		  {
		   timeString[k] = *(pChar+j);
     796:	af 58       	subi	r26, 0x8F	; 143
     798:	bf 4f       	sbci	r27, 0xFF	; 255
     79a:	ec 93       	st	X, r30
		   j++;
     79c:	81 2f       	mov	r24, r17
		   k++;
     79e:	9f 5f       	subi	r25, 0xFF	; 255
          gpsposlat();
		lastcommaPosition = j;
         pChar = stringRead;
	      j = lastcommaPosition + 1;
	      k = 0;
	      while(*(pChar+j) != ',') 
     7a0:	e8 2f       	mov	r30, r24
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	ee 56       	subi	r30, 0x6E	; 110
     7a6:	ff 4f       	sbci	r31, 0xFF	; 255
     7a8:	e0 81       	ld	r30, Z
     7aa:	a9 2f       	mov	r26, r25
     7ac:	b0 e0       	ldi	r27, 0x00	; 0
     7ae:	18 2f       	mov	r17, r24
     7b0:	1f 5f       	subi	r17, 0xFF	; 255
     7b2:	ec 32       	cpi	r30, 0x2C	; 44
     7b4:	81 f7       	brne	.-32     	; 0x796 <parseGPS+0x8e>
		   timeString[k] = *(pChar+j);
		   j++;
		   k++;
	      }
	      lastcommaPosition = j;
	      timeString[k] = '\0';
     7b6:	af 58       	subi	r26, 0x8F	; 143
     7b8:	bf 4f       	sbci	r27, 0xFF	; 255
     7ba:	1c 92       	st	X, r1
          Latcard=timeString[0];
     7bc:	80 91 71 00 	lds	r24, 0x0071
     7c0:	80 93 7f 00 	sts	0x007F, r24
          lcd_data(Latcard); 
     7c4:	80 91 7f 00 	lds	r24, 0x007F
     7c8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
		   pChar = stringRead;
	      j = lastcommaPosition + 1;
     7cc:	81 2f       	mov	r24, r17
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	05 c0       	rjmp	.+10     	; 0x7dc <parseGPS+0xd4>
	      k = 0;
	      while(*(pChar+j) != ',') 
		  {
		   timeString[k] = *(pChar+j);
     7d2:	af 58       	subi	r26, 0x8F	; 143
     7d4:	bf 4f       	sbci	r27, 0xFF	; 255
     7d6:	ec 93       	st	X, r30
		   j++;
     7d8:	81 2f       	mov	r24, r17
		   k++;
     7da:	9f 5f       	subi	r25, 0xFF	; 255
          Latcard=timeString[0];
          lcd_data(Latcard); 
		   pChar = stringRead;
	      j = lastcommaPosition + 1;
	      k = 0;
	      while(*(pChar+j) != ',') 
     7dc:	e8 2f       	mov	r30, r24
     7de:	f0 e0       	ldi	r31, 0x00	; 0
     7e0:	ee 56       	subi	r30, 0x6E	; 110
     7e2:	ff 4f       	sbci	r31, 0xFF	; 255
     7e4:	e0 81       	ld	r30, Z
     7e6:	a9 2f       	mov	r26, r25
     7e8:	b0 e0       	ldi	r27, 0x00	; 0
     7ea:	18 2f       	mov	r17, r24
     7ec:	1f 5f       	subi	r17, 0xFF	; 255
     7ee:	ec 32       	cpi	r30, 0x2C	; 44
     7f0:	81 f7       	brne	.-32     	; 0x7d2 <parseGPS+0xca>
		   timeString[k] = *(pChar+j);
		   j++;
		   k++;
	      }
	      lastcommaPosition = j;
	      timeString[k] = '\0';
     7f2:	af 58       	subi	r26, 0x8F	; 143
     7f4:	bf 4f       	sbci	r27, 0xFF	; 255
     7f6:	1c 92       	st	X, r1
          gpsposlong();
     7f8:	0e 94 09 03 	call	0x612	; 0x612 <gpsposlong>
		  pChar = stringRead;
	      j = lastcommaPosition + 1;
     7fc:	91 2f       	mov	r25, r17
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	05 c0       	rjmp	.+10     	; 0x80c <parseGPS+0x104>
	      k = 0;
	      while(*(pChar+j) != ',') 
		  {
		   timeString[k] = *(pChar+j);
     802:	af 58       	subi	r26, 0x8F	; 143
     804:	bf 4f       	sbci	r27, 0xFF	; 255
     806:	ec 93       	st	X, r30
		   j++;
     808:	9f 5f       	subi	r25, 0xFF	; 255
		   k++;
     80a:	8f 5f       	subi	r24, 0xFF	; 255
	      timeString[k] = '\0';
          gpsposlong();
		  pChar = stringRead;
	      j = lastcommaPosition + 1;
	      k = 0;
	      while(*(pChar+j) != ',') 
     80c:	e9 2f       	mov	r30, r25
     80e:	f0 e0       	ldi	r31, 0x00	; 0
     810:	ee 56       	subi	r30, 0x6E	; 110
     812:	ff 4f       	sbci	r31, 0xFF	; 255
     814:	e0 81       	ld	r30, Z
     816:	a8 2f       	mov	r26, r24
     818:	b0 e0       	ldi	r27, 0x00	; 0
     81a:	ec 32       	cpi	r30, 0x2C	; 44
     81c:	91 f7       	brne	.-28     	; 0x802 <parseGPS+0xfa>
		   timeString[k] = *(pChar+j);
		   j++;
		   k++;
	      }
	      lastcommaPosition = j;
	      timeString[k] = '\0';
     81e:	af 58       	subi	r26, 0x8F	; 143
     820:	bf 4f       	sbci	r27, 0xFF	; 255
     822:	1c 92       	st	X, r1
          Lngcard=timeString[0];
     824:	80 91 71 00 	lds	r24, 0x0071
     828:	80 93 80 00 	sts	0x0080, r24
          lcd_data(Lngcard); 
     82c:	80 91 80 00 	lds	r24, 0x0080
     830:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_data>
 }

GPScap=0;
     834:	10 92 7c 00 	sts	0x007C, r1


}
     838:	1f 91       	pop	r17
     83a:	08 95       	ret

0000083c <parse_degrees>:

unsigned long parse_degrees()
{ 
     83c:	6f 92       	push	r6
     83e:	7f 92       	push	r7
     840:	8f 92       	push	r8
     842:	9f 92       	push	r9
     844:	af 92       	push	r10
     846:	bf 92       	push	r11
     848:	cf 92       	push	r12
     84a:	df 92       	push	r13
     84c:	ef 92       	push	r14
     84e:	ff 92       	push	r15
     850:	0f 93       	push	r16
     852:	1f 93       	push	r17
     854:	cf 93       	push	r28
     856:	df 93       	push	r29
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	00 e0       	ldi	r16, 0x00	; 0
     862:	10 e0       	ldi	r17, 0x00	; 0
     864:	14 c0       	rjmp	.+40     	; 0x88e <parse_degrees+0x52>
}
long gpsatol(const char *str)
{
  long ret = 0;
  while (*str >= '0' && *str <= '9')
    ret = 10 * ret + *str++ - '0';
     866:	ca 01       	movw	r24, r20
     868:	b9 01       	movw	r22, r18
     86a:	2a e0       	ldi	r18, 0x0A	; 10
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	0e 94 04 0b 	call	0x1608	; 0x1608 <__mulsi3>
     876:	2f 2d       	mov	r18, r15
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	40 e0       	ldi	r20, 0x00	; 0
     87c:	50 e0       	ldi	r21, 0x00	; 0
     87e:	20 53       	subi	r18, 0x30	; 48
     880:	30 40       	sbci	r19, 0x00	; 0
     882:	40 40       	sbci	r20, 0x00	; 0
     884:	50 40       	sbci	r21, 0x00	; 0
     886:	26 0f       	add	r18, r22
     888:	37 1f       	adc	r19, r23
     88a:	48 1f       	adc	r20, r24
     88c:	59 1f       	adc	r21, r25
     
}
long gpsatol(const char *str)
{
  long ret = 0;
  while (*str >= '0' && *str <= '9')
     88e:	f8 01       	movw	r30, r16
     890:	ef 58       	subi	r30, 0x8F	; 143
     892:	ff 4f       	sbci	r31, 0xFF	; 255
     894:	f0 80       	ld	r15, Z
     896:	0f 5f       	subi	r16, 0xFF	; 255
     898:	1f 4f       	sbci	r17, 0xFF	; 255
     89a:	8f 2d       	mov	r24, r15
     89c:	80 53       	subi	r24, 0x30	; 48
     89e:	8a 30       	cpi	r24, 0x0A	; 10
     8a0:	10 f3       	brcs	.-60     	; 0x866 <parse_degrees+0x2a>
}

unsigned long parse_degrees()
{ 
  char *p;
  unsigned long left = gpsatol(timeString);
     8a2:	92 2e       	mov	r9, r18
     8a4:	83 2e       	mov	r8, r19
     8a6:	74 2e       	mov	r7, r20
     8a8:	65 2e       	mov	r6, r21
  unsigned long tenk_minutes = (left % 100UL) * 10000UL;
     8aa:	b9 01       	movw	r22, r18
     8ac:	ca 01       	movw	r24, r20
     8ae:	24 e6       	ldi	r18, 0x64	; 100
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	40 e0       	ldi	r20, 0x00	; 0
     8b4:	50 e0       	ldi	r21, 0x00	; 0
     8b6:	0e 94 43 0b 	call	0x1686	; 0x1686 <__udivmodsi4>
     8ba:	20 e1       	ldi	r18, 0x10	; 16
     8bc:	37 e2       	ldi	r19, 0x27	; 39
     8be:	40 e0       	ldi	r20, 0x00	; 0
     8c0:	50 e0       	ldi	r21, 0x00	; 0
     8c2:	0e 94 04 0b 	call	0x1608	; 0x1608 <__mulsi3>
     8c6:	5b 01       	movw	r10, r22
     8c8:	6c 01       	movw	r12, r24
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	e9 01       	movw	r28, r18
     8d0:	cf 58       	subi	r28, 0x8F	; 143
     8d2:	df 4f       	sbci	r29, 0xFF	; 255
  for (p=timeString; (*p) >= '0' && (*p) <= '9'; ++p);
     8d4:	98 81       	ld	r25, Y
     8d6:	2f 5f       	subi	r18, 0xFF	; 255
     8d8:	3f 4f       	sbci	r19, 0xFF	; 255
     8da:	89 2f       	mov	r24, r25
     8dc:	80 53       	subi	r24, 0x30	; 48
     8de:	8a 30       	cpi	r24, 0x0A	; 10
     8e0:	b0 f3       	brcs	.-20     	; 0x8ce <parse_degrees+0x92>
  if (*p == '.')
     8e2:	9e 32       	cpi	r25, 0x2E	; 46
     8e4:	49 f5       	brne	.+82     	; 0x938 <parse_degrees+0xfc>
     8e6:	38 ee       	ldi	r19, 0xE8	; 232
     8e8:	e3 2e       	mov	r14, r19
     8ea:	33 e0       	ldi	r19, 0x03	; 3
     8ec:	f3 2e       	mov	r15, r19
     8ee:	01 2d       	mov	r16, r1
     8f0:	11 2d       	mov	r17, r1
     8f2:	1b c0       	rjmp	.+54     	; 0x92a <parse_degrees+0xee>
  {
    unsigned long mult = 1000;
    while ((*++p) >= '0' && (*++p) <= '9')
    {
      tenk_minutes += mult * (*p - '0');
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	20 53       	subi	r18, 0x30	; 48
     8f8:	30 40       	sbci	r19, 0x00	; 0
     8fa:	44 27       	eor	r20, r20
     8fc:	37 fd       	sbrc	r19, 7
     8fe:	40 95       	com	r20
     900:	54 2f       	mov	r21, r20
     902:	c8 01       	movw	r24, r16
     904:	b7 01       	movw	r22, r14
     906:	0e 94 04 0b 	call	0x1608	; 0x1608 <__mulsi3>
     90a:	a6 0e       	add	r10, r22
     90c:	b7 1e       	adc	r11, r23
     90e:	c8 1e       	adc	r12, r24
     910:	d9 1e       	adc	r13, r25
      mult /= 10;
     912:	c8 01       	movw	r24, r16
     914:	b7 01       	movw	r22, r14
     916:	2a e0       	ldi	r18, 0x0A	; 10
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	40 e0       	ldi	r20, 0x00	; 0
     91c:	50 e0       	ldi	r21, 0x00	; 0
     91e:	0e 94 43 0b 	call	0x1686	; 0x1686 <__udivmodsi4>
     922:	c9 01       	movw	r24, r18
     924:	da 01       	movw	r26, r20
     926:	7c 01       	movw	r14, r24
     928:	8d 01       	movw	r16, r26
  unsigned long tenk_minutes = (left % 100UL) * 10000UL;
  for (p=timeString; (*p) >= '0' && (*p) <= '9'; ++p);
  if (*p == '.')
  {
    unsigned long mult = 1000;
    while ((*++p) >= '0' && (*++p) <= '9')
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	80 33       	cpi	r24, 0x30	; 48
     92e:	20 f0       	brcs	.+8      	; 0x938 <parse_degrees+0xfc>


}

unsigned long parse_degrees()
{ 
     930:	22 96       	adiw	r28, 0x02	; 2
  unsigned long tenk_minutes = (left % 100UL) * 10000UL;
  for (p=timeString; (*p) >= '0' && (*p) <= '9'; ++p);
  if (*p == '.')
  {
    unsigned long mult = 1000;
    while ((*++p) >= '0' && (*++p) <= '9')
     932:	28 81       	ld	r18, Y
     934:	2a 33       	cpi	r18, 0x3A	; 58
     936:	f0 f2       	brcs	.-68     	; 0x8f4 <parse_degrees+0xb8>
     938:	c6 01       	movw	r24, r12
     93a:	b5 01       	movw	r22, r10
     93c:	26 e0       	ldi	r18, 0x06	; 6
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e0       	ldi	r20, 0x00	; 0
     942:	50 e0       	ldi	r21, 0x00	; 0
     944:	0e 94 43 0b 	call	0x1686	; 0x1686 <__udivmodsi4>
     948:	79 01       	movw	r14, r18
     94a:	8a 01       	movw	r16, r20
     94c:	69 2d       	mov	r22, r9
     94e:	78 2d       	mov	r23, r8
     950:	87 2d       	mov	r24, r7
     952:	96 2d       	mov	r25, r6
     954:	24 e6       	ldi	r18, 0x64	; 100
     956:	30 e0       	ldi	r19, 0x00	; 0
     958:	40 e0       	ldi	r20, 0x00	; 0
     95a:	50 e0       	ldi	r21, 0x00	; 0
     95c:	0e 94 43 0b 	call	0x1686	; 0x1686 <__udivmodsi4>
     960:	ca 01       	movw	r24, r20
     962:	b9 01       	movw	r22, r18
     964:	20 ea       	ldi	r18, 0xA0	; 160
     966:	36 e8       	ldi	r19, 0x86	; 134
     968:	41 e0       	ldi	r20, 0x01	; 1
     96a:	50 e0       	ldi	r21, 0x00	; 0
     96c:	0e 94 04 0b 	call	0x1608	; 0x1608 <__mulsi3>
     970:	e6 0e       	add	r14, r22
     972:	f7 1e       	adc	r15, r23
     974:	08 1f       	adc	r16, r24
     976:	19 1f       	adc	r17, r25
      tenk_minutes += mult * (*p - '0');
      mult /= 10;
    }
  }
  return (left / 100) * 100000 + tenk_minutes / 6;
}
     978:	b7 01       	movw	r22, r14
     97a:	c8 01       	movw	r24, r16
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	ef 90       	pop	r14
     988:	df 90       	pop	r13
     98a:	cf 90       	pop	r12
     98c:	bf 90       	pop	r11
     98e:	af 90       	pop	r10
     990:	9f 90       	pop	r9
     992:	8f 90       	pop	r8
     994:	7f 90       	pop	r7
     996:	6f 90       	pop	r6
     998:	08 95       	ret

0000099a <main>:

int main(void)
{   unsigned char buf[16];
     99a:	0f 93       	push	r16
     99c:	1f 93       	push	r17
     99e:	df 93       	push	r29
     9a0:	cf 93       	push	r28
     9a2:	cd b7       	in	r28, 0x3d	; 61
     9a4:	de b7       	in	r29, 0x3e	; 62
     9a6:	60 97       	sbiw	r28, 0x10	; 16
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	f8 94       	cli
     9ac:	de bf       	out	0x3e, r29	; 62
     9ae:	0f be       	out	0x3f, r0	; 63
     9b0:	cd bf       	out	0x3d, r28	; 61
/*
===================================================================
SET BAUD RATE
===================================================================
*/
	UBRRL=UBRRVAL;
     9b2:	8f ec       	ldi	r24, 0xCF	; 207
     9b4:	89 b9       	out	0x09, r24	; 9
	UBRRH=(UBRRVAL>>8);
     9b6:	10 bc       	out	0x20, r1	; 32
/*===================================================================
SET DATAFRAME FORMAT : ASYNCHRONOUS MODE, NO PARITY, 1 START BIT, 8BIT
                       SIZE DATA	
===================================================================
*/
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(0<<UCSZ2)|(1<<UCSZ1)|(1<<UCSZ0);
     9b8:	86 e8       	ldi	r24, 0x86	; 134
     9ba:	80 bd       	out	0x20, r24	; 32
*/
	//UCSRB=(1<<RXEN)|(1<<TXEN);
	
		//Enable Transmitter and Receiver and Interrupt on receive complete

	UCSRB=(1<<RXEN)|(1<<TXEN)|(1<<RXCIE);
     9bc:	88 e9       	ldi	r24, 0x98	; 152
     9be:	8a b9       	out	0x0a, r24	; 10

	//enable global interrupts

	set_sleep_mode(SLEEP_MODE_IDLE);
     9c0:	85 b7       	in	r24, 0x35	; 53
     9c2:	8f 74       	andi	r24, 0x4F	; 79
     9c4:	85 bf       	out	0x35, r24	; 53
	sei();
     9c6:	78 94       	sei
    long test;
	USART_INIT();
	DDRA=0xFF;
     9c8:	8f ef       	ldi	r24, 0xFF	; 255
     9ca:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
     9cc:	1b ba       	out	0x1b, r1	; 27
	//sei();
	lcd_init();
     9ce:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_init>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     9d2:	94 e0       	ldi	r25, 0x04	; 4
     9d4:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
     9d6:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     9d8:	84 ec       	ldi	r24, 0xC4	; 196
     9da:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     9dc:	80 ec       	ldi	r24, 0xC0	; 192
     9de:	88 bb       	out	0x18, r24	; 24
     9e0:	20 e4       	ldi	r18, 0x40	; 64
     9e2:	3f e1       	ldi	r19, 0x1F	; 31
     9e4:	f9 01       	movw	r30, r18
     9e6:	31 97       	sbiw	r30, 0x01	; 1
     9e8:	f1 f7       	brne	.-4      	; 0x9e6 <main+0x4c>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     9ea:	f9 01       	movw	r30, r18
     9ec:	31 97       	sbiw	r30, 0x01	; 1
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <main+0x52>
     9f0:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
     9f2:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     9f4:	84 e1       	ldi	r24, 0x14	; 20
     9f6:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     9f8:	80 e1       	ldi	r24, 0x10	; 16
     9fa:	88 bb       	out	0x18, r24	; 24
     9fc:	c9 01       	movw	r24, r18
     9fe:	01 97       	sbiw	r24, 0x01	; 1
     a00:	f1 f7       	brne	.-4      	; 0x9fe <main+0x64>
	lcd_cmd(0x0c);
	lcd_cmd(0x01);
	lcd_puts("GPS Engine..");
     a02:	c9 01       	movw	r24, r18
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	f1 f7       	brne	.-4      	; 0xa04 <main+0x6a>
     a08:	80 e6       	ldi	r24, 0x60	; 96
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_puts>
     a10:	80 e1       	ldi	r24, 0x10	; 16
     a12:	97 e2       	ldi	r25, 0x27	; 39
     a14:	20 e9       	ldi	r18, 0x90	; 144
     a16:	31 e0       	ldi	r19, 0x01	; 1
     a18:	f9 01       	movw	r30, r18
     a1a:	31 97       	sbiw	r30, 0x01	; 1
     a1c:	f1 f7       	brne	.-4      	; 0xa1a <main+0x80>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a1e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a20:	d9 f7       	brne	.-10     	; 0xa18 <main+0x7e>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
     a22:	84 e0       	ldi	r24, 0x04	; 4
     a24:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
     a26:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
     a28:	84 e1       	ldi	r24, 0x14	; 20
     a2a:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
     a2c:	80 e1       	ldi	r24, 0x10	; 16
     a2e:	88 bb       	out	0x18, r24	; 24
     a30:	80 e4       	ldi	r24, 0x40	; 64
     a32:	9f e1       	ldi	r25, 0x1F	; 31
     a34:	fc 01       	movw	r30, r24
     a36:	31 97       	sbiw	r30, 0x01	; 1
     a38:	f1 f7       	brne	.-4      	; 0xa36 <main+0x9c>
	_delay_ms(1000);
	lcd_cmd(0x01);
	test=parse_degrees();
     a3a:	01 97       	sbiw	r24, 0x01	; 1
     a3c:	f1 f7       	brne	.-4      	; 0xa3a <main+0xa0>
     a3e:	0e 94 1e 04 	call	0x83c	; 0x83c <parse_degrees>
	sprintf(buf,"%ld",test);
     a42:	2d b7       	in	r18, 0x3d	; 61
     a44:	3e b7       	in	r19, 0x3e	; 62
     a46:	28 50       	subi	r18, 0x08	; 8
     a48:	30 40       	sbci	r19, 0x00	; 0
     a4a:	0f b6       	in	r0, 0x3f	; 63
     a4c:	f8 94       	cli
     a4e:	3e bf       	out	0x3e, r19	; 62
     a50:	0f be       	out	0x3f, r0	; 63
     a52:	2d bf       	out	0x3d, r18	; 61
     a54:	ed b7       	in	r30, 0x3d	; 61
     a56:	fe b7       	in	r31, 0x3e	; 62
     a58:	31 96       	adiw	r30, 0x01	; 1
     a5a:	8e 01       	movw	r16, r28
     a5c:	0f 5f       	subi	r16, 0xFF	; 255
     a5e:	1f 4f       	sbci	r17, 0xFF	; 255
     a60:	ad b7       	in	r26, 0x3d	; 61
     a62:	be b7       	in	r27, 0x3e	; 62
     a64:	12 96       	adiw	r26, 0x02	; 2
     a66:	1c 93       	st	X, r17
     a68:	0e 93       	st	-X, r16
     a6a:	11 97       	sbiw	r26, 0x01	; 1
     a6c:	2d e6       	ldi	r18, 0x6D	; 109
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	33 83       	std	Z+3, r19	; 0x03
     a72:	22 83       	std	Z+2, r18	; 0x02
     a74:	64 83       	std	Z+4, r22	; 0x04
     a76:	75 83       	std	Z+5, r23	; 0x05
     a78:	86 83       	std	Z+6, r24	; 0x06
     a7a:	97 83       	std	Z+7, r25	; 0x07
     a7c:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <sprintf>
	lcd_puts(buf);
     a80:	2d b7       	in	r18, 0x3d	; 61
     a82:	3e b7       	in	r19, 0x3e	; 62
     a84:	28 5f       	subi	r18, 0xF8	; 248
     a86:	3f 4f       	sbci	r19, 0xFF	; 255
     a88:	0f b6       	in	r0, 0x3f	; 63
     a8a:	f8 94       	cli
     a8c:	3e bf       	out	0x3e, r19	; 62
     a8e:	0f be       	out	0x3f, r0	; 63
     a90:	2d bf       	out	0x3d, r18	; 61
     a92:	c8 01       	movw	r24, r16
     a94:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_puts>
     a98:	ff cf       	rjmp	.-2      	; 0xa98 <main+0xfe>

00000a9a <vfprintf>:
     a9a:	a1 e1       	ldi	r26, 0x11	; 17
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e3 e5       	ldi	r30, 0x53	; 83
     aa0:	f5 e0       	ldi	r31, 0x05	; 5
     aa2:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__prologue_saves__>
     aa6:	3c 01       	movw	r6, r24
     aa8:	7f 87       	std	Y+15, r23	; 0x0f
     aaa:	6e 87       	std	Y+14, r22	; 0x0e
     aac:	6a 01       	movw	r12, r20
     aae:	fc 01       	movw	r30, r24
     ab0:	17 82       	std	Z+7, r1	; 0x07
     ab2:	16 82       	std	Z+6, r1	; 0x06
     ab4:	83 81       	ldd	r24, Z+3	; 0x03
     ab6:	81 fd       	sbrc	r24, 1
     ab8:	03 c0       	rjmp	.+6      	; 0xac0 <vfprintf+0x26>
     aba:	6f ef       	ldi	r22, 0xFF	; 255
     abc:	7f ef       	ldi	r23, 0xFF	; 255
     abe:	71 c3       	rjmp	.+1762   	; 0x11a2 <vfprintf+0x708>
     ac0:	9e 01       	movw	r18, r28
     ac2:	2f 5f       	subi	r18, 0xFF	; 255
     ac4:	3f 4f       	sbci	r19, 0xFF	; 255
     ac6:	39 8b       	std	Y+17, r19	; 0x11
     ac8:	28 8b       	std	Y+16, r18	; 0x10
     aca:	f3 01       	movw	r30, r6
     acc:	23 81       	ldd	r18, Z+3	; 0x03
     ace:	ee 85       	ldd	r30, Y+14	; 0x0e
     ad0:	ff 85       	ldd	r31, Y+15	; 0x0f
     ad2:	23 fd       	sbrc	r18, 3
     ad4:	85 91       	lpm	r24, Z+
     ad6:	23 ff       	sbrs	r18, 3
     ad8:	81 91       	ld	r24, Z+
     ada:	ff 87       	std	Y+15, r31	; 0x0f
     adc:	ee 87       	std	Y+14, r30	; 0x0e
     ade:	88 23       	and	r24, r24
     ae0:	09 f4       	brne	.+2      	; 0xae4 <vfprintf+0x4a>
     ae2:	5c c3       	rjmp	.+1720   	; 0x119c <vfprintf+0x702>
     ae4:	85 32       	cpi	r24, 0x25	; 37
     ae6:	51 f4       	brne	.+20     	; 0xafc <vfprintf+0x62>
     ae8:	ee 85       	ldd	r30, Y+14	; 0x0e
     aea:	ff 85       	ldd	r31, Y+15	; 0x0f
     aec:	23 fd       	sbrc	r18, 3
     aee:	85 91       	lpm	r24, Z+
     af0:	23 ff       	sbrs	r18, 3
     af2:	81 91       	ld	r24, Z+
     af4:	ff 87       	std	Y+15, r31	; 0x0f
     af6:	ee 87       	std	Y+14, r30	; 0x0e
     af8:	85 32       	cpi	r24, 0x25	; 37
     afa:	29 f4       	brne	.+10     	; 0xb06 <vfprintf+0x6c>
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	b3 01       	movw	r22, r6
     b00:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     b04:	e2 cf       	rjmp	.-60     	; 0xaca <vfprintf+0x30>
     b06:	98 2f       	mov	r25, r24
     b08:	10 e0       	ldi	r17, 0x00	; 0
     b0a:	88 24       	eor	r8, r8
     b0c:	99 24       	eor	r9, r9
     b0e:	10 32       	cpi	r17, 0x20	; 32
     b10:	b0 f4       	brcc	.+44     	; 0xb3e <vfprintf+0xa4>
     b12:	9b 32       	cpi	r25, 0x2B	; 43
     b14:	69 f0       	breq	.+26     	; 0xb30 <vfprintf+0x96>
     b16:	9c 32       	cpi	r25, 0x2C	; 44
     b18:	28 f4       	brcc	.+10     	; 0xb24 <vfprintf+0x8a>
     b1a:	90 32       	cpi	r25, 0x20	; 32
     b1c:	51 f0       	breq	.+20     	; 0xb32 <vfprintf+0x98>
     b1e:	93 32       	cpi	r25, 0x23	; 35
     b20:	71 f4       	brne	.+28     	; 0xb3e <vfprintf+0xa4>
     b22:	0b c0       	rjmp	.+22     	; 0xb3a <vfprintf+0xa0>
     b24:	9d 32       	cpi	r25, 0x2D	; 45
     b26:	39 f0       	breq	.+14     	; 0xb36 <vfprintf+0x9c>
     b28:	90 33       	cpi	r25, 0x30	; 48
     b2a:	49 f4       	brne	.+18     	; 0xb3e <vfprintf+0xa4>
     b2c:	11 60       	ori	r17, 0x01	; 1
     b2e:	28 c0       	rjmp	.+80     	; 0xb80 <vfprintf+0xe6>
     b30:	12 60       	ori	r17, 0x02	; 2
     b32:	14 60       	ori	r17, 0x04	; 4
     b34:	25 c0       	rjmp	.+74     	; 0xb80 <vfprintf+0xe6>
     b36:	18 60       	ori	r17, 0x08	; 8
     b38:	23 c0       	rjmp	.+70     	; 0xb80 <vfprintf+0xe6>
     b3a:	10 61       	ori	r17, 0x10	; 16
     b3c:	21 c0       	rjmp	.+66     	; 0xb80 <vfprintf+0xe6>
     b3e:	17 fd       	sbrc	r17, 7
     b40:	2a c0       	rjmp	.+84     	; 0xb96 <vfprintf+0xfc>
     b42:	89 2f       	mov	r24, r25
     b44:	80 53       	subi	r24, 0x30	; 48
     b46:	8a 30       	cpi	r24, 0x0A	; 10
     b48:	78 f4       	brcc	.+30     	; 0xb68 <vfprintf+0xce>
     b4a:	16 ff       	sbrs	r17, 6
     b4c:	06 c0       	rjmp	.+12     	; 0xb5a <vfprintf+0xc0>
     b4e:	fa e0       	ldi	r31, 0x0A	; 10
     b50:	9f 9e       	mul	r9, r31
     b52:	90 2c       	mov	r9, r0
     b54:	11 24       	eor	r1, r1
     b56:	98 0e       	add	r9, r24
     b58:	13 c0       	rjmp	.+38     	; 0xb80 <vfprintf+0xe6>
     b5a:	3a e0       	ldi	r19, 0x0A	; 10
     b5c:	83 9e       	mul	r8, r19
     b5e:	80 2c       	mov	r8, r0
     b60:	11 24       	eor	r1, r1
     b62:	88 0e       	add	r8, r24
     b64:	10 62       	ori	r17, 0x20	; 32
     b66:	0c c0       	rjmp	.+24     	; 0xb80 <vfprintf+0xe6>
     b68:	9e 32       	cpi	r25, 0x2E	; 46
     b6a:	21 f4       	brne	.+8      	; 0xb74 <vfprintf+0xda>
     b6c:	16 fd       	sbrc	r17, 6
     b6e:	16 c3       	rjmp	.+1580   	; 0x119c <vfprintf+0x702>
     b70:	10 64       	ori	r17, 0x40	; 64
     b72:	06 c0       	rjmp	.+12     	; 0xb80 <vfprintf+0xe6>
     b74:	9c 36       	cpi	r25, 0x6C	; 108
     b76:	11 f4       	brne	.+4      	; 0xb7c <vfprintf+0xe2>
     b78:	10 68       	ori	r17, 0x80	; 128
     b7a:	02 c0       	rjmp	.+4      	; 0xb80 <vfprintf+0xe6>
     b7c:	98 36       	cpi	r25, 0x68	; 104
     b7e:	59 f4       	brne	.+22     	; 0xb96 <vfprintf+0xfc>
     b80:	ee 85       	ldd	r30, Y+14	; 0x0e
     b82:	ff 85       	ldd	r31, Y+15	; 0x0f
     b84:	23 fd       	sbrc	r18, 3
     b86:	95 91       	lpm	r25, Z+
     b88:	23 ff       	sbrs	r18, 3
     b8a:	91 91       	ld	r25, Z+
     b8c:	ff 87       	std	Y+15, r31	; 0x0f
     b8e:	ee 87       	std	Y+14, r30	; 0x0e
     b90:	99 23       	and	r25, r25
     b92:	09 f0       	breq	.+2      	; 0xb96 <vfprintf+0xfc>
     b94:	bc cf       	rjmp	.-136    	; 0xb0e <vfprintf+0x74>
     b96:	89 2f       	mov	r24, r25
     b98:	85 54       	subi	r24, 0x45	; 69
     b9a:	83 30       	cpi	r24, 0x03	; 3
     b9c:	20 f4       	brcc	.+8      	; 0xba6 <vfprintf+0x10c>
     b9e:	81 2f       	mov	r24, r17
     ba0:	80 61       	ori	r24, 0x10	; 16
     ba2:	90 5e       	subi	r25, 0xE0	; 224
     ba4:	07 c0       	rjmp	.+14     	; 0xbb4 <vfprintf+0x11a>
     ba6:	89 2f       	mov	r24, r25
     ba8:	85 56       	subi	r24, 0x65	; 101
     baa:	83 30       	cpi	r24, 0x03	; 3
     bac:	08 f0       	brcs	.+2      	; 0xbb0 <vfprintf+0x116>
     bae:	a1 c1       	rjmp	.+834    	; 0xef2 <vfprintf+0x458>
     bb0:	81 2f       	mov	r24, r17
     bb2:	8f 7e       	andi	r24, 0xEF	; 239
     bb4:	86 fd       	sbrc	r24, 6
     bb6:	02 c0       	rjmp	.+4      	; 0xbbc <vfprintf+0x122>
     bb8:	76 e0       	ldi	r23, 0x06	; 6
     bba:	97 2e       	mov	r9, r23
     bbc:	6f e3       	ldi	r22, 0x3F	; 63
     bbe:	f6 2e       	mov	r15, r22
     bc0:	f8 22       	and	r15, r24
     bc2:	95 36       	cpi	r25, 0x65	; 101
     bc4:	19 f4       	brne	.+6      	; 0xbcc <vfprintf+0x132>
     bc6:	f0 e4       	ldi	r31, 0x40	; 64
     bc8:	ff 2a       	or	r15, r31
     bca:	07 c0       	rjmp	.+14     	; 0xbda <vfprintf+0x140>
     bcc:	96 36       	cpi	r25, 0x66	; 102
     bce:	19 f4       	brne	.+6      	; 0xbd6 <vfprintf+0x13c>
     bd0:	20 e8       	ldi	r18, 0x80	; 128
     bd2:	f2 2a       	or	r15, r18
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0x140>
     bd6:	91 10       	cpse	r9, r1
     bd8:	9a 94       	dec	r9
     bda:	f7 fe       	sbrs	r15, 7
     bdc:	0b c0       	rjmp	.+22     	; 0xbf4 <vfprintf+0x15a>
     bde:	3b e3       	ldi	r19, 0x3B	; 59
     be0:	39 15       	cp	r19, r9
     be2:	20 f4       	brcc	.+8      	; 0xbec <vfprintf+0x152>
     be4:	27 e0       	ldi	r18, 0x07	; 7
     be6:	5c e3       	ldi	r21, 0x3C	; 60
     be8:	b5 2e       	mov	r11, r21
     bea:	0e c0       	rjmp	.+28     	; 0xc08 <vfprintf+0x16e>
     bec:	b9 2c       	mov	r11, r9
     bee:	b3 94       	inc	r11
     bf0:	27 e0       	ldi	r18, 0x07	; 7
     bf2:	0a c0       	rjmp	.+20     	; 0xc08 <vfprintf+0x16e>
     bf4:	47 e0       	ldi	r20, 0x07	; 7
     bf6:	49 15       	cp	r20, r9
     bf8:	28 f4       	brcc	.+10     	; 0xc04 <vfprintf+0x16a>
     bfa:	27 e0       	ldi	r18, 0x07	; 7
     bfc:	bb 24       	eor	r11, r11
     bfe:	47 e0       	ldi	r20, 0x07	; 7
     c00:	94 2e       	mov	r9, r20
     c02:	02 c0       	rjmp	.+4      	; 0xc08 <vfprintf+0x16e>
     c04:	29 2d       	mov	r18, r9
     c06:	bb 24       	eor	r11, r11
     c08:	c6 01       	movw	r24, r12
     c0a:	04 96       	adiw	r24, 0x04	; 4
     c0c:	9d 87       	std	Y+13, r25	; 0x0d
     c0e:	8c 87       	std	Y+12, r24	; 0x0c
     c10:	f6 01       	movw	r30, r12
     c12:	60 81       	ld	r22, Z
     c14:	71 81       	ldd	r23, Z+1	; 0x01
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	93 81       	ldd	r25, Z+3	; 0x03
     c1a:	ae 01       	movw	r20, r28
     c1c:	4f 5f       	subi	r20, 0xFF	; 255
     c1e:	5f 4f       	sbci	r21, 0xFF	; 255
     c20:	0b 2d       	mov	r16, r11
     c22:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__ftoa_engine>
     c26:	6c 01       	movw	r12, r24
     c28:	09 81       	ldd	r16, Y+1	; 0x01
     c2a:	20 2e       	mov	r2, r16
     c2c:	33 24       	eor	r3, r3
     c2e:	00 ff       	sbrs	r16, 0
     c30:	04 c0       	rjmp	.+8      	; 0xc3a <vfprintf+0x1a0>
     c32:	03 fd       	sbrc	r16, 3
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <vfprintf+0x1a0>
     c36:	1d e2       	ldi	r17, 0x2D	; 45
     c38:	09 c0       	rjmp	.+18     	; 0xc4c <vfprintf+0x1b2>
     c3a:	f1 fe       	sbrs	r15, 1
     c3c:	02 c0       	rjmp	.+4      	; 0xc42 <vfprintf+0x1a8>
     c3e:	1b e2       	ldi	r17, 0x2B	; 43
     c40:	05 c0       	rjmp	.+10     	; 0xc4c <vfprintf+0x1b2>
     c42:	f2 fc       	sbrc	r15, 2
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <vfprintf+0x1b0>
     c46:	10 e0       	ldi	r17, 0x00	; 0
     c48:	01 c0       	rjmp	.+2      	; 0xc4c <vfprintf+0x1b2>
     c4a:	10 e2       	ldi	r17, 0x20	; 32
     c4c:	c1 01       	movw	r24, r2
     c4e:	8c 70       	andi	r24, 0x0C	; 12
     c50:	90 70       	andi	r25, 0x00	; 0
     c52:	89 2b       	or	r24, r25
     c54:	b9 f1       	breq	.+110    	; 0xcc4 <vfprintf+0x22a>
     c56:	11 23       	and	r17, r17
     c58:	11 f4       	brne	.+4      	; 0xc5e <vfprintf+0x1c4>
     c5a:	83 e0       	ldi	r24, 0x03	; 3
     c5c:	01 c0       	rjmp	.+2      	; 0xc60 <vfprintf+0x1c6>
     c5e:	84 e0       	ldi	r24, 0x04	; 4
     c60:	88 15       	cp	r24, r8
     c62:	10 f0       	brcs	.+4      	; 0xc68 <vfprintf+0x1ce>
     c64:	88 24       	eor	r8, r8
     c66:	0a c0       	rjmp	.+20     	; 0xc7c <vfprintf+0x1e2>
     c68:	88 1a       	sub	r8, r24
     c6a:	f3 fc       	sbrc	r15, 3
     c6c:	07 c0       	rjmp	.+14     	; 0xc7c <vfprintf+0x1e2>
     c6e:	80 e2       	ldi	r24, 0x20	; 32
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	b3 01       	movw	r22, r6
     c74:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     c78:	8a 94       	dec	r8
     c7a:	c9 f7       	brne	.-14     	; 0xc6e <vfprintf+0x1d4>
     c7c:	11 23       	and	r17, r17
     c7e:	29 f0       	breq	.+10     	; 0xc8a <vfprintf+0x1f0>
     c80:	81 2f       	mov	r24, r17
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	b3 01       	movw	r22, r6
     c86:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     c8a:	23 fe       	sbrs	r2, 3
     c8c:	03 c0       	rjmp	.+6      	; 0xc94 <vfprintf+0x1fa>
     c8e:	04 e5       	ldi	r16, 0x54	; 84
     c90:	10 e0       	ldi	r17, 0x00	; 0
     c92:	0e c0       	rjmp	.+28     	; 0xcb0 <vfprintf+0x216>
     c94:	08 e5       	ldi	r16, 0x58	; 88
     c96:	10 e0       	ldi	r17, 0x00	; 0
     c98:	0b c0       	rjmp	.+22     	; 0xcb0 <vfprintf+0x216>
     c9a:	e1 14       	cp	r14, r1
     c9c:	f1 04       	cpc	r15, r1
     c9e:	09 f0       	breq	.+2      	; 0xca2 <vfprintf+0x208>
     ca0:	80 52       	subi	r24, 0x20	; 32
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	b3 01       	movw	r22, r6
     ca6:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     caa:	0f 5f       	subi	r16, 0xFF	; 255
     cac:	1f 4f       	sbci	r17, 0xFF	; 255
     cae:	05 c0       	rjmp	.+10     	; 0xcba <vfprintf+0x220>
     cb0:	ef 2c       	mov	r14, r15
     cb2:	ff 24       	eor	r15, r15
     cb4:	f0 e1       	ldi	r31, 0x10	; 16
     cb6:	ef 22       	and	r14, r31
     cb8:	ff 24       	eor	r15, r15
     cba:	f8 01       	movw	r30, r16
     cbc:	84 91       	lpm	r24, Z+
     cbe:	88 23       	and	r24, r24
     cc0:	61 f7       	brne	.-40     	; 0xc9a <vfprintf+0x200>
     cc2:	14 c1       	rjmp	.+552    	; 0xeec <vfprintf+0x452>
     cc4:	f7 fe       	sbrs	r15, 7
     cc6:	12 c0       	rjmp	.+36     	; 0xcec <vfprintf+0x252>
     cc8:	bc 0c       	add	r11, r12
     cca:	24 fe       	sbrs	r2, 4
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <vfprintf+0x23c>
     cce:	8a 81       	ldd	r24, Y+2	; 0x02
     cd0:	81 33       	cpi	r24, 0x31	; 49
     cd2:	09 f4       	brne	.+2      	; 0xcd6 <vfprintf+0x23c>
     cd4:	ba 94       	dec	r11
     cd6:	1b 14       	cp	r1, r11
     cd8:	1c f0       	brlt	.+6      	; 0xce0 <vfprintf+0x246>
     cda:	bb 24       	eor	r11, r11
     cdc:	b3 94       	inc	r11
     cde:	2d c0       	rjmp	.+90     	; 0xd3a <vfprintf+0x2a0>
     ce0:	f8 e0       	ldi	r31, 0x08	; 8
     ce2:	fb 15       	cp	r31, r11
     ce4:	50 f5       	brcc	.+84     	; 0xd3a <vfprintf+0x2a0>
     ce6:	38 e0       	ldi	r19, 0x08	; 8
     ce8:	b3 2e       	mov	r11, r19
     cea:	27 c0       	rjmp	.+78     	; 0xd3a <vfprintf+0x2a0>
     cec:	f6 fc       	sbrc	r15, 6
     cee:	25 c0       	rjmp	.+74     	; 0xd3a <vfprintf+0x2a0>
     cf0:	89 2d       	mov	r24, r9
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	8c 15       	cp	r24, r12
     cf6:	9d 05       	cpc	r25, r13
     cf8:	4c f0       	brlt	.+18     	; 0xd0c <vfprintf+0x272>
     cfa:	2c ef       	ldi	r18, 0xFC	; 252
     cfc:	c2 16       	cp	r12, r18
     cfe:	2f ef       	ldi	r18, 0xFF	; 255
     d00:	d2 06       	cpc	r13, r18
     d02:	24 f0       	brlt	.+8      	; 0xd0c <vfprintf+0x272>
     d04:	30 e8       	ldi	r19, 0x80	; 128
     d06:	f3 2a       	or	r15, r19
     d08:	01 c0       	rjmp	.+2      	; 0xd0c <vfprintf+0x272>
     d0a:	9a 94       	dec	r9
     d0c:	99 20       	and	r9, r9
     d0e:	49 f0       	breq	.+18     	; 0xd22 <vfprintf+0x288>
     d10:	e2 e0       	ldi	r30, 0x02	; 2
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	ec 0f       	add	r30, r28
     d16:	fd 1f       	adc	r31, r29
     d18:	e9 0d       	add	r30, r9
     d1a:	f1 1d       	adc	r31, r1
     d1c:	80 81       	ld	r24, Z
     d1e:	80 33       	cpi	r24, 0x30	; 48
     d20:	a1 f3       	breq	.-24     	; 0xd0a <vfprintf+0x270>
     d22:	f7 fe       	sbrs	r15, 7
     d24:	0a c0       	rjmp	.+20     	; 0xd3a <vfprintf+0x2a0>
     d26:	b9 2c       	mov	r11, r9
     d28:	b3 94       	inc	r11
     d2a:	89 2d       	mov	r24, r9
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	c8 16       	cp	r12, r24
     d30:	d9 06       	cpc	r13, r25
     d32:	14 f0       	brlt	.+4      	; 0xd38 <vfprintf+0x29e>
     d34:	99 24       	eor	r9, r9
     d36:	01 c0       	rjmp	.+2      	; 0xd3a <vfprintf+0x2a0>
     d38:	9c 18       	sub	r9, r12
     d3a:	f7 fc       	sbrc	r15, 7
     d3c:	03 c0       	rjmp	.+6      	; 0xd44 <vfprintf+0x2aa>
     d3e:	25 e0       	ldi	r18, 0x05	; 5
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	09 c0       	rjmp	.+18     	; 0xd56 <vfprintf+0x2bc>
     d44:	1c 14       	cp	r1, r12
     d46:	1d 04       	cpc	r1, r13
     d48:	1c f0       	brlt	.+6      	; 0xd50 <vfprintf+0x2b6>
     d4a:	21 e0       	ldi	r18, 0x01	; 1
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <vfprintf+0x2bc>
     d50:	96 01       	movw	r18, r12
     d52:	2f 5f       	subi	r18, 0xFF	; 255
     d54:	3f 4f       	sbci	r19, 0xFF	; 255
     d56:	11 23       	and	r17, r17
     d58:	11 f0       	breq	.+4      	; 0xd5e <vfprintf+0x2c4>
     d5a:	2f 5f       	subi	r18, 0xFF	; 255
     d5c:	3f 4f       	sbci	r19, 0xFF	; 255
     d5e:	99 20       	and	r9, r9
     d60:	29 f0       	breq	.+10     	; 0xd6c <vfprintf+0x2d2>
     d62:	89 2d       	mov	r24, r9
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	28 0f       	add	r18, r24
     d6a:	39 1f       	adc	r19, r25
     d6c:	88 2d       	mov	r24, r8
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	28 17       	cp	r18, r24
     d72:	39 07       	cpc	r19, r25
     d74:	14 f0       	brlt	.+4      	; 0xd7a <vfprintf+0x2e0>
     d76:	88 24       	eor	r8, r8
     d78:	01 c0       	rjmp	.+2      	; 0xd7c <vfprintf+0x2e2>
     d7a:	82 1a       	sub	r8, r18
     d7c:	4f 2c       	mov	r4, r15
     d7e:	55 24       	eor	r5, r5
     d80:	c2 01       	movw	r24, r4
     d82:	89 70       	andi	r24, 0x09	; 9
     d84:	90 70       	andi	r25, 0x00	; 0
     d86:	89 2b       	or	r24, r25
     d88:	39 f0       	breq	.+14     	; 0xd98 <vfprintf+0x2fe>
     d8a:	08 c0       	rjmp	.+16     	; 0xd9c <vfprintf+0x302>
     d8c:	80 e2       	ldi	r24, 0x20	; 32
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	b3 01       	movw	r22, r6
     d92:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     d96:	8a 94       	dec	r8
     d98:	88 20       	and	r8, r8
     d9a:	c1 f7       	brne	.-16     	; 0xd8c <vfprintf+0x2f2>
     d9c:	11 23       	and	r17, r17
     d9e:	29 f0       	breq	.+10     	; 0xdaa <vfprintf+0x310>
     da0:	81 2f       	mov	r24, r17
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	b3 01       	movw	r22, r6
     da6:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     daa:	43 fe       	sbrs	r4, 3
     dac:	07 c0       	rjmp	.+14     	; 0xdbc <vfprintf+0x322>
     dae:	08 c0       	rjmp	.+16     	; 0xdc0 <vfprintf+0x326>
     db0:	80 e3       	ldi	r24, 0x30	; 48
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	b3 01       	movw	r22, r6
     db6:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     dba:	8a 94       	dec	r8
     dbc:	88 20       	and	r8, r8
     dbe:	c1 f7       	brne	.-16     	; 0xdb0 <vfprintf+0x316>
     dc0:	f7 fe       	sbrs	r15, 7
     dc2:	46 c0       	rjmp	.+140    	; 0xe50 <vfprintf+0x3b6>
     dc4:	86 01       	movw	r16, r12
     dc6:	d7 fe       	sbrs	r13, 7
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <vfprintf+0x334>
     dca:	00 e0       	ldi	r16, 0x00	; 0
     dcc:	10 e0       	ldi	r17, 0x00	; 0
     dce:	76 01       	movw	r14, r12
     dd0:	08 94       	sec
     dd2:	e1 1c       	adc	r14, r1
     dd4:	f1 1c       	adc	r15, r1
     dd6:	e0 1a       	sub	r14, r16
     dd8:	f1 0a       	sbc	r15, r17
     dda:	41 e0       	ldi	r20, 0x01	; 1
     ddc:	50 e0       	ldi	r21, 0x00	; 0
     dde:	4c 0f       	add	r20, r28
     de0:	5d 1f       	adc	r21, r29
     de2:	e4 0e       	add	r14, r20
     de4:	f5 1e       	adc	r15, r21
     de6:	26 01       	movw	r4, r12
     de8:	4b 18       	sub	r4, r11
     dea:	51 08       	sbc	r5, r1
     dec:	89 2d       	mov	r24, r9
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	aa 24       	eor	r10, r10
     df2:	bb 24       	eor	r11, r11
     df4:	a8 1a       	sub	r10, r24
     df6:	b9 0a       	sbc	r11, r25
     df8:	5f ef       	ldi	r21, 0xFF	; 255
     dfa:	0f 3f       	cpi	r16, 0xFF	; 255
     dfc:	15 07       	cpc	r17, r21
     dfe:	29 f4       	brne	.+10     	; 0xe0a <vfprintf+0x370>
     e00:	8e e2       	ldi	r24, 0x2E	; 46
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	b3 01       	movw	r22, r6
     e06:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     e0a:	c0 16       	cp	r12, r16
     e0c:	d1 06       	cpc	r13, r17
     e0e:	34 f0       	brlt	.+12     	; 0xe1c <vfprintf+0x382>
     e10:	40 16       	cp	r4, r16
     e12:	51 06       	cpc	r5, r17
     e14:	1c f4       	brge	.+6      	; 0xe1c <vfprintf+0x382>
     e16:	f7 01       	movw	r30, r14
     e18:	80 81       	ld	r24, Z
     e1a:	01 c0       	rjmp	.+2      	; 0xe1e <vfprintf+0x384>
     e1c:	80 e3       	ldi	r24, 0x30	; 48
     e1e:	01 50       	subi	r16, 0x01	; 1
     e20:	10 40       	sbci	r17, 0x00	; 0
     e22:	08 94       	sec
     e24:	e1 1c       	adc	r14, r1
     e26:	f1 1c       	adc	r15, r1
     e28:	0a 15       	cp	r16, r10
     e2a:	1b 05       	cpc	r17, r11
     e2c:	2c f0       	brlt	.+10     	; 0xe38 <vfprintf+0x39e>
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	b3 01       	movw	r22, r6
     e32:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     e36:	e0 cf       	rjmp	.-64     	; 0xdf8 <vfprintf+0x35e>
     e38:	0c 15       	cp	r16, r12
     e3a:	1d 05       	cpc	r17, r13
     e3c:	39 f4       	brne	.+14     	; 0xe4c <vfprintf+0x3b2>
     e3e:	9a 81       	ldd	r25, Y+2	; 0x02
     e40:	96 33       	cpi	r25, 0x36	; 54
     e42:	18 f4       	brcc	.+6      	; 0xe4a <vfprintf+0x3b0>
     e44:	95 33       	cpi	r25, 0x35	; 53
     e46:	11 f4       	brne	.+4      	; 0xe4c <vfprintf+0x3b2>
     e48:	24 fe       	sbrs	r2, 4
     e4a:	81 e3       	ldi	r24, 0x31	; 49
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	4b c0       	rjmp	.+150    	; 0xee6 <vfprintf+0x44c>
     e50:	8a 81       	ldd	r24, Y+2	; 0x02
     e52:	81 33       	cpi	r24, 0x31	; 49
     e54:	09 f0       	breq	.+2      	; 0xe58 <vfprintf+0x3be>
     e56:	0f 7e       	andi	r16, 0xEF	; 239
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	b3 01       	movw	r22, r6
     e5c:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     e60:	99 20       	and	r9, r9
     e62:	a1 f0       	breq	.+40     	; 0xe8c <vfprintf+0x3f2>
     e64:	8e e2       	ldi	r24, 0x2E	; 46
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	b3 01       	movw	r22, r6
     e6a:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     e6e:	12 e0       	ldi	r17, 0x02	; 2
     e70:	e1 e0       	ldi	r30, 0x01	; 1
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	ec 0f       	add	r30, r28
     e76:	fd 1f       	adc	r31, r29
     e78:	e1 0f       	add	r30, r17
     e7a:	f1 1d       	adc	r31, r1
     e7c:	1f 5f       	subi	r17, 0xFF	; 255
     e7e:	80 81       	ld	r24, Z
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	b3 01       	movw	r22, r6
     e84:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     e88:	9a 94       	dec	r9
     e8a:	91 f7       	brne	.-28     	; 0xe70 <vfprintf+0x3d6>
     e8c:	44 fc       	sbrc	r4, 4
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <vfprintf+0x3fc>
     e90:	85 e6       	ldi	r24, 0x65	; 101
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x400>
     e96:	85 e4       	ldi	r24, 0x45	; 69
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	b3 01       	movw	r22, r6
     e9c:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     ea0:	d7 fc       	sbrc	r13, 7
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <vfprintf+0x414>
     ea4:	c1 14       	cp	r12, r1
     ea6:	d1 04       	cpc	r13, r1
     ea8:	41 f4       	brne	.+16     	; 0xeba <vfprintf+0x420>
     eaa:	04 ff       	sbrs	r16, 4
     eac:	06 c0       	rjmp	.+12     	; 0xeba <vfprintf+0x420>
     eae:	d0 94       	com	r13
     eb0:	c1 94       	neg	r12
     eb2:	d1 08       	sbc	r13, r1
     eb4:	d3 94       	inc	r13
     eb6:	8d e2       	ldi	r24, 0x2D	; 45
     eb8:	01 c0       	rjmp	.+2      	; 0xebc <vfprintf+0x422>
     eba:	8b e2       	ldi	r24, 0x2B	; 43
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	b3 01       	movw	r22, r6
     ec0:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     ec4:	80 e3       	ldi	r24, 0x30	; 48
     ec6:	05 c0       	rjmp	.+10     	; 0xed2 <vfprintf+0x438>
     ec8:	8f 5f       	subi	r24, 0xFF	; 255
     eca:	26 ef       	ldi	r18, 0xF6	; 246
     ecc:	3f ef       	ldi	r19, 0xFF	; 255
     ece:	c2 0e       	add	r12, r18
     ed0:	d3 1e       	adc	r13, r19
     ed2:	3a e0       	ldi	r19, 0x0A	; 10
     ed4:	c3 16       	cp	r12, r19
     ed6:	d1 04       	cpc	r13, r1
     ed8:	bc f7       	brge	.-18     	; 0xec8 <vfprintf+0x42e>
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	b3 01       	movw	r22, r6
     ede:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     ee2:	c6 01       	movw	r24, r12
     ee4:	c0 96       	adiw	r24, 0x30	; 48
     ee6:	b3 01       	movw	r22, r6
     ee8:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     eec:	cc 84       	ldd	r12, Y+12	; 0x0c
     eee:	dd 84       	ldd	r13, Y+13	; 0x0d
     ef0:	52 c1       	rjmp	.+676    	; 0x1196 <vfprintf+0x6fc>
     ef2:	93 36       	cpi	r25, 0x63	; 99
     ef4:	31 f0       	breq	.+12     	; 0xf02 <vfprintf+0x468>
     ef6:	93 37       	cpi	r25, 0x73	; 115
     ef8:	99 f0       	breq	.+38     	; 0xf20 <vfprintf+0x486>
     efa:	93 35       	cpi	r25, 0x53	; 83
     efc:	09 f0       	breq	.+2      	; 0xf00 <vfprintf+0x466>
     efe:	59 c0       	rjmp	.+178    	; 0xfb2 <vfprintf+0x518>
     f00:	23 c0       	rjmp	.+70     	; 0xf48 <vfprintf+0x4ae>
     f02:	f6 01       	movw	r30, r12
     f04:	80 81       	ld	r24, Z
     f06:	89 83       	std	Y+1, r24	; 0x01
     f08:	5e 01       	movw	r10, r28
     f0a:	08 94       	sec
     f0c:	a1 1c       	adc	r10, r1
     f0e:	b1 1c       	adc	r11, r1
     f10:	22 e0       	ldi	r18, 0x02	; 2
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	c2 0e       	add	r12, r18
     f16:	d3 1e       	adc	r13, r19
     f18:	21 e0       	ldi	r18, 0x01	; 1
     f1a:	e2 2e       	mov	r14, r18
     f1c:	f1 2c       	mov	r15, r1
     f1e:	12 c0       	rjmp	.+36     	; 0xf44 <vfprintf+0x4aa>
     f20:	f6 01       	movw	r30, r12
     f22:	a0 80       	ld	r10, Z
     f24:	b1 80       	ldd	r11, Z+1	; 0x01
     f26:	16 fd       	sbrc	r17, 6
     f28:	03 c0       	rjmp	.+6      	; 0xf30 <vfprintf+0x496>
     f2a:	6f ef       	ldi	r22, 0xFF	; 255
     f2c:	7f ef       	ldi	r23, 0xFF	; 255
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vfprintf+0x49a>
     f30:	69 2d       	mov	r22, r9
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	22 e0       	ldi	r18, 0x02	; 2
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	c2 0e       	add	r12, r18
     f3a:	d3 1e       	adc	r13, r19
     f3c:	c5 01       	movw	r24, r10
     f3e:	0e 94 b9 09 	call	0x1372	; 0x1372 <strnlen>
     f42:	7c 01       	movw	r14, r24
     f44:	1f 77       	andi	r17, 0x7F	; 127
     f46:	13 c0       	rjmp	.+38     	; 0xf6e <vfprintf+0x4d4>
     f48:	f6 01       	movw	r30, r12
     f4a:	a0 80       	ld	r10, Z
     f4c:	b1 80       	ldd	r11, Z+1	; 0x01
     f4e:	16 fd       	sbrc	r17, 6
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <vfprintf+0x4be>
     f52:	6f ef       	ldi	r22, 0xFF	; 255
     f54:	7f ef       	ldi	r23, 0xFF	; 255
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x4c2>
     f58:	69 2d       	mov	r22, r9
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	22 e0       	ldi	r18, 0x02	; 2
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	c2 0e       	add	r12, r18
     f62:	d3 1e       	adc	r13, r19
     f64:	c5 01       	movw	r24, r10
     f66:	0e 94 ae 09 	call	0x135c	; 0x135c <strnlen_P>
     f6a:	7c 01       	movw	r14, r24
     f6c:	10 68       	ori	r17, 0x80	; 128
     f6e:	13 ff       	sbrs	r17, 3
     f70:	07 c0       	rjmp	.+14     	; 0xf80 <vfprintf+0x4e6>
     f72:	1b c0       	rjmp	.+54     	; 0xfaa <vfprintf+0x510>
     f74:	80 e2       	ldi	r24, 0x20	; 32
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	b3 01       	movw	r22, r6
     f7a:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     f7e:	8a 94       	dec	r8
     f80:	88 2d       	mov	r24, r8
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	e8 16       	cp	r14, r24
     f86:	f9 06       	cpc	r15, r25
     f88:	a8 f3       	brcs	.-22     	; 0xf74 <vfprintf+0x4da>
     f8a:	0f c0       	rjmp	.+30     	; 0xfaa <vfprintf+0x510>
     f8c:	f5 01       	movw	r30, r10
     f8e:	17 fd       	sbrc	r17, 7
     f90:	85 91       	lpm	r24, Z+
     f92:	17 ff       	sbrs	r17, 7
     f94:	81 91       	ld	r24, Z+
     f96:	5f 01       	movw	r10, r30
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	b3 01       	movw	r22, r6
     f9c:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
     fa0:	81 10       	cpse	r8, r1
     fa2:	8a 94       	dec	r8
     fa4:	08 94       	sec
     fa6:	e1 08       	sbc	r14, r1
     fa8:	f1 08       	sbc	r15, r1
     faa:	e1 14       	cp	r14, r1
     fac:	f1 04       	cpc	r15, r1
     fae:	71 f7       	brne	.-36     	; 0xf8c <vfprintf+0x4f2>
     fb0:	f2 c0       	rjmp	.+484    	; 0x1196 <vfprintf+0x6fc>
     fb2:	94 36       	cpi	r25, 0x64	; 100
     fb4:	11 f0       	breq	.+4      	; 0xfba <vfprintf+0x520>
     fb6:	99 36       	cpi	r25, 0x69	; 105
     fb8:	89 f5       	brne	.+98     	; 0x101c <vfprintf+0x582>
     fba:	17 ff       	sbrs	r17, 7
     fbc:	08 c0       	rjmp	.+16     	; 0xfce <vfprintf+0x534>
     fbe:	f6 01       	movw	r30, r12
     fc0:	20 81       	ld	r18, Z
     fc2:	31 81       	ldd	r19, Z+1	; 0x01
     fc4:	42 81       	ldd	r20, Z+2	; 0x02
     fc6:	53 81       	ldd	r21, Z+3	; 0x03
     fc8:	84 e0       	ldi	r24, 0x04	; 4
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0a c0       	rjmp	.+20     	; 0xfe2 <vfprintf+0x548>
     fce:	f6 01       	movw	r30, r12
     fd0:	80 81       	ld	r24, Z
     fd2:	91 81       	ldd	r25, Z+1	; 0x01
     fd4:	9c 01       	movw	r18, r24
     fd6:	44 27       	eor	r20, r20
     fd8:	37 fd       	sbrc	r19, 7
     fda:	40 95       	com	r20
     fdc:	54 2f       	mov	r21, r20
     fde:	82 e0       	ldi	r24, 0x02	; 2
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	c8 0e       	add	r12, r24
     fe4:	d9 1e       	adc	r13, r25
     fe6:	9f e6       	ldi	r25, 0x6F	; 111
     fe8:	f9 2e       	mov	r15, r25
     fea:	f1 22       	and	r15, r17
     fec:	57 ff       	sbrs	r21, 7
     fee:	09 c0       	rjmp	.+18     	; 0x1002 <vfprintf+0x568>
     ff0:	50 95       	com	r21
     ff2:	40 95       	com	r20
     ff4:	30 95       	com	r19
     ff6:	21 95       	neg	r18
     ff8:	3f 4f       	sbci	r19, 0xFF	; 255
     ffa:	4f 4f       	sbci	r20, 0xFF	; 255
     ffc:	5f 4f       	sbci	r21, 0xFF	; 255
     ffe:	90 e8       	ldi	r25, 0x80	; 128
    1000:	f9 2a       	or	r15, r25
    1002:	ca 01       	movw	r24, r20
    1004:	b9 01       	movw	r22, r18
    1006:	ae 01       	movw	r20, r28
    1008:	4f 5f       	subi	r20, 0xFF	; 255
    100a:	5f 4f       	sbci	r21, 0xFF	; 255
    100c:	2a e0       	ldi	r18, 0x0A	; 10
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	0e 94 14 0a 	call	0x1428	; 0x1428 <__ultoa_invert>
    1014:	e8 2e       	mov	r14, r24
    1016:	e8 89       	ldd	r30, Y+16	; 0x10
    1018:	ee 1a       	sub	r14, r30
    101a:	41 c0       	rjmp	.+130    	; 0x109e <vfprintf+0x604>
    101c:	95 37       	cpi	r25, 0x75	; 117
    101e:	21 f4       	brne	.+8      	; 0x1028 <vfprintf+0x58e>
    1020:	1f 7e       	andi	r17, 0xEF	; 239
    1022:	2a e0       	ldi	r18, 0x0A	; 10
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	1c c0       	rjmp	.+56     	; 0x1060 <vfprintf+0x5c6>
    1028:	19 7f       	andi	r17, 0xF9	; 249
    102a:	9f 36       	cpi	r25, 0x6F	; 111
    102c:	61 f0       	breq	.+24     	; 0x1046 <vfprintf+0x5ac>
    102e:	90 37       	cpi	r25, 0x70	; 112
    1030:	20 f4       	brcc	.+8      	; 0x103a <vfprintf+0x5a0>
    1032:	98 35       	cpi	r25, 0x58	; 88
    1034:	09 f0       	breq	.+2      	; 0x1038 <vfprintf+0x59e>
    1036:	b2 c0       	rjmp	.+356    	; 0x119c <vfprintf+0x702>
    1038:	0f c0       	rjmp	.+30     	; 0x1058 <vfprintf+0x5be>
    103a:	90 37       	cpi	r25, 0x70	; 112
    103c:	39 f0       	breq	.+14     	; 0x104c <vfprintf+0x5b2>
    103e:	98 37       	cpi	r25, 0x78	; 120
    1040:	09 f0       	breq	.+2      	; 0x1044 <vfprintf+0x5aa>
    1042:	ac c0       	rjmp	.+344    	; 0x119c <vfprintf+0x702>
    1044:	04 c0       	rjmp	.+8      	; 0x104e <vfprintf+0x5b4>
    1046:	28 e0       	ldi	r18, 0x08	; 8
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	0a c0       	rjmp	.+20     	; 0x1060 <vfprintf+0x5c6>
    104c:	10 61       	ori	r17, 0x10	; 16
    104e:	14 fd       	sbrc	r17, 4
    1050:	14 60       	ori	r17, 0x04	; 4
    1052:	20 e1       	ldi	r18, 0x10	; 16
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	04 c0       	rjmp	.+8      	; 0x1060 <vfprintf+0x5c6>
    1058:	14 fd       	sbrc	r17, 4
    105a:	16 60       	ori	r17, 0x06	; 6
    105c:	20 e1       	ldi	r18, 0x10	; 16
    105e:	32 e0       	ldi	r19, 0x02	; 2
    1060:	17 ff       	sbrs	r17, 7
    1062:	08 c0       	rjmp	.+16     	; 0x1074 <vfprintf+0x5da>
    1064:	f6 01       	movw	r30, r12
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	44 e0       	ldi	r20, 0x04	; 4
    1070:	50 e0       	ldi	r21, 0x00	; 0
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <vfprintf+0x5ea>
    1074:	f6 01       	movw	r30, r12
    1076:	80 81       	ld	r24, Z
    1078:	91 81       	ldd	r25, Z+1	; 0x01
    107a:	bc 01       	movw	r22, r24
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	42 e0       	ldi	r20, 0x02	; 2
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	c4 0e       	add	r12, r20
    1086:	d5 1e       	adc	r13, r21
    1088:	ae 01       	movw	r20, r28
    108a:	4f 5f       	subi	r20, 0xFF	; 255
    108c:	5f 4f       	sbci	r21, 0xFF	; 255
    108e:	0e 94 14 0a 	call	0x1428	; 0x1428 <__ultoa_invert>
    1092:	e8 2e       	mov	r14, r24
    1094:	58 89       	ldd	r21, Y+16	; 0x10
    1096:	e5 1a       	sub	r14, r21
    1098:	8f e7       	ldi	r24, 0x7F	; 127
    109a:	f8 2e       	mov	r15, r24
    109c:	f1 22       	and	r15, r17
    109e:	f6 fe       	sbrs	r15, 6
    10a0:	0b c0       	rjmp	.+22     	; 0x10b8 <vfprintf+0x61e>
    10a2:	8e ef       	ldi	r24, 0xFE	; 254
    10a4:	f8 22       	and	r15, r24
    10a6:	e9 14       	cp	r14, r9
    10a8:	38 f4       	brcc	.+14     	; 0x10b8 <vfprintf+0x61e>
    10aa:	f4 fe       	sbrs	r15, 4
    10ac:	07 c0       	rjmp	.+14     	; 0x10bc <vfprintf+0x622>
    10ae:	f2 fc       	sbrc	r15, 2
    10b0:	05 c0       	rjmp	.+10     	; 0x10bc <vfprintf+0x622>
    10b2:	9f ee       	ldi	r25, 0xEF	; 239
    10b4:	f9 22       	and	r15, r25
    10b6:	02 c0       	rjmp	.+4      	; 0x10bc <vfprintf+0x622>
    10b8:	1e 2d       	mov	r17, r14
    10ba:	01 c0       	rjmp	.+2      	; 0x10be <vfprintf+0x624>
    10bc:	19 2d       	mov	r17, r9
    10be:	f4 fe       	sbrs	r15, 4
    10c0:	0d c0       	rjmp	.+26     	; 0x10dc <vfprintf+0x642>
    10c2:	fe 01       	movw	r30, r28
    10c4:	ee 0d       	add	r30, r14
    10c6:	f1 1d       	adc	r31, r1
    10c8:	80 81       	ld	r24, Z
    10ca:	80 33       	cpi	r24, 0x30	; 48
    10cc:	19 f4       	brne	.+6      	; 0x10d4 <vfprintf+0x63a>
    10ce:	e9 ee       	ldi	r30, 0xE9	; 233
    10d0:	fe 22       	and	r15, r30
    10d2:	08 c0       	rjmp	.+16     	; 0x10e4 <vfprintf+0x64a>
    10d4:	1f 5f       	subi	r17, 0xFF	; 255
    10d6:	f2 fe       	sbrs	r15, 2
    10d8:	05 c0       	rjmp	.+10     	; 0x10e4 <vfprintf+0x64a>
    10da:	03 c0       	rjmp	.+6      	; 0x10e2 <vfprintf+0x648>
    10dc:	8f 2d       	mov	r24, r15
    10de:	86 78       	andi	r24, 0x86	; 134
    10e0:	09 f0       	breq	.+2      	; 0x10e4 <vfprintf+0x64a>
    10e2:	1f 5f       	subi	r17, 0xFF	; 255
    10e4:	0f 2d       	mov	r16, r15
    10e6:	f3 fc       	sbrc	r15, 3
    10e8:	14 c0       	rjmp	.+40     	; 0x1112 <vfprintf+0x678>
    10ea:	f0 fe       	sbrs	r15, 0
    10ec:	0f c0       	rjmp	.+30     	; 0x110c <vfprintf+0x672>
    10ee:	18 15       	cp	r17, r8
    10f0:	10 f0       	brcs	.+4      	; 0x10f6 <vfprintf+0x65c>
    10f2:	9e 2c       	mov	r9, r14
    10f4:	0b c0       	rjmp	.+22     	; 0x110c <vfprintf+0x672>
    10f6:	9e 2c       	mov	r9, r14
    10f8:	98 0c       	add	r9, r8
    10fa:	91 1a       	sub	r9, r17
    10fc:	18 2d       	mov	r17, r8
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0x672>
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	b3 01       	movw	r22, r6
    1106:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    110a:	1f 5f       	subi	r17, 0xFF	; 255
    110c:	18 15       	cp	r17, r8
    110e:	c0 f3       	brcs	.-16     	; 0x1100 <vfprintf+0x666>
    1110:	04 c0       	rjmp	.+8      	; 0x111a <vfprintf+0x680>
    1112:	18 15       	cp	r17, r8
    1114:	10 f4       	brcc	.+4      	; 0x111a <vfprintf+0x680>
    1116:	81 1a       	sub	r8, r17
    1118:	01 c0       	rjmp	.+2      	; 0x111c <vfprintf+0x682>
    111a:	88 24       	eor	r8, r8
    111c:	04 ff       	sbrs	r16, 4
    111e:	0f c0       	rjmp	.+30     	; 0x113e <vfprintf+0x6a4>
    1120:	80 e3       	ldi	r24, 0x30	; 48
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	b3 01       	movw	r22, r6
    1126:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    112a:	02 ff       	sbrs	r16, 2
    112c:	1d c0       	rjmp	.+58     	; 0x1168 <vfprintf+0x6ce>
    112e:	01 fd       	sbrc	r16, 1
    1130:	03 c0       	rjmp	.+6      	; 0x1138 <vfprintf+0x69e>
    1132:	88 e7       	ldi	r24, 0x78	; 120
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	0e c0       	rjmp	.+28     	; 0x1154 <vfprintf+0x6ba>
    1138:	88 e5       	ldi	r24, 0x58	; 88
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	0b c0       	rjmp	.+22     	; 0x1154 <vfprintf+0x6ba>
    113e:	80 2f       	mov	r24, r16
    1140:	86 78       	andi	r24, 0x86	; 134
    1142:	91 f0       	breq	.+36     	; 0x1168 <vfprintf+0x6ce>
    1144:	01 ff       	sbrs	r16, 1
    1146:	02 c0       	rjmp	.+4      	; 0x114c <vfprintf+0x6b2>
    1148:	8b e2       	ldi	r24, 0x2B	; 43
    114a:	01 c0       	rjmp	.+2      	; 0x114e <vfprintf+0x6b4>
    114c:	80 e2       	ldi	r24, 0x20	; 32
    114e:	f7 fc       	sbrc	r15, 7
    1150:	8d e2       	ldi	r24, 0x2D	; 45
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	b3 01       	movw	r22, r6
    1156:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    115a:	06 c0       	rjmp	.+12     	; 0x1168 <vfprintf+0x6ce>
    115c:	80 e3       	ldi	r24, 0x30	; 48
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	b3 01       	movw	r22, r6
    1162:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    1166:	9a 94       	dec	r9
    1168:	e9 14       	cp	r14, r9
    116a:	c0 f3       	brcs	.-16     	; 0x115c <vfprintf+0x6c2>
    116c:	ea 94       	dec	r14
    116e:	e1 e0       	ldi	r30, 0x01	; 1
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	ec 0f       	add	r30, r28
    1174:	fd 1f       	adc	r31, r29
    1176:	ee 0d       	add	r30, r14
    1178:	f1 1d       	adc	r31, r1
    117a:	80 81       	ld	r24, Z
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	b3 01       	movw	r22, r6
    1180:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    1184:	ee 20       	and	r14, r14
    1186:	91 f7       	brne	.-28     	; 0x116c <vfprintf+0x6d2>
    1188:	06 c0       	rjmp	.+12     	; 0x1196 <vfprintf+0x6fc>
    118a:	80 e2       	ldi	r24, 0x20	; 32
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	b3 01       	movw	r22, r6
    1190:	0e 94 c4 09 	call	0x1388	; 0x1388 <fputc>
    1194:	8a 94       	dec	r8
    1196:	88 20       	and	r8, r8
    1198:	c1 f7       	brne	.-16     	; 0x118a <vfprintf+0x6f0>
    119a:	97 cc       	rjmp	.-1746   	; 0xaca <vfprintf+0x30>
    119c:	f3 01       	movw	r30, r6
    119e:	66 81       	ldd	r22, Z+6	; 0x06
    11a0:	77 81       	ldd	r23, Z+7	; 0x07
    11a2:	cb 01       	movw	r24, r22
    11a4:	61 96       	adiw	r28, 0x11	; 17
    11a6:	e2 e1       	ldi	r30, 0x12	; 18
    11a8:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__epilogue_restores__>

000011ac <__ftoa_engine>:
    11ac:	28 30       	cpi	r18, 0x08	; 8
    11ae:	08 f0       	brcs	.+2      	; 0x11b2 <__ftoa_engine+0x6>
    11b0:	27 e0       	ldi	r18, 0x07	; 7
    11b2:	33 27       	eor	r19, r19
    11b4:	da 01       	movw	r26, r20
    11b6:	99 0f       	add	r25, r25
    11b8:	31 1d       	adc	r19, r1
    11ba:	87 fd       	sbrc	r24, 7
    11bc:	91 60       	ori	r25, 0x01	; 1
    11be:	00 96       	adiw	r24, 0x00	; 0
    11c0:	61 05       	cpc	r22, r1
    11c2:	71 05       	cpc	r23, r1
    11c4:	39 f4       	brne	.+14     	; 0x11d4 <__ftoa_engine+0x28>
    11c6:	32 60       	ori	r19, 0x02	; 2
    11c8:	2e 5f       	subi	r18, 0xFE	; 254
    11ca:	3d 93       	st	X+, r19
    11cc:	30 e3       	ldi	r19, 0x30	; 48
    11ce:	2a 95       	dec	r18
    11d0:	e1 f7       	brne	.-8      	; 0x11ca <__ftoa_engine+0x1e>
    11d2:	08 95       	ret
    11d4:	9f 3f       	cpi	r25, 0xFF	; 255
    11d6:	30 f0       	brcs	.+12     	; 0x11e4 <__ftoa_engine+0x38>
    11d8:	80 38       	cpi	r24, 0x80	; 128
    11da:	71 05       	cpc	r23, r1
    11dc:	61 05       	cpc	r22, r1
    11de:	09 f0       	breq	.+2      	; 0x11e2 <__ftoa_engine+0x36>
    11e0:	3c 5f       	subi	r19, 0xFC	; 252
    11e2:	3c 5f       	subi	r19, 0xFC	; 252
    11e4:	3d 93       	st	X+, r19
    11e6:	91 30       	cpi	r25, 0x01	; 1
    11e8:	08 f0       	brcs	.+2      	; 0x11ec <__ftoa_engine+0x40>
    11ea:	80 68       	ori	r24, 0x80	; 128
    11ec:	91 1d       	adc	r25, r1
    11ee:	df 93       	push	r29
    11f0:	cf 93       	push	r28
    11f2:	1f 93       	push	r17
    11f4:	0f 93       	push	r16
    11f6:	ff 92       	push	r15
    11f8:	ef 92       	push	r14
    11fa:	19 2f       	mov	r17, r25
    11fc:	98 7f       	andi	r25, 0xF8	; 248
    11fe:	96 95       	lsr	r25
    1200:	e9 2f       	mov	r30, r25
    1202:	96 95       	lsr	r25
    1204:	96 95       	lsr	r25
    1206:	e9 0f       	add	r30, r25
    1208:	ff 27       	eor	r31, r31
    120a:	ea 54       	subi	r30, 0x4A	; 74
    120c:	ff 4f       	sbci	r31, 0xFF	; 255
    120e:	99 27       	eor	r25, r25
    1210:	33 27       	eor	r19, r19
    1212:	ee 24       	eor	r14, r14
    1214:	ff 24       	eor	r15, r15
    1216:	a7 01       	movw	r20, r14
    1218:	e7 01       	movw	r28, r14
    121a:	05 90       	lpm	r0, Z+
    121c:	08 94       	sec
    121e:	07 94       	ror	r0
    1220:	28 f4       	brcc	.+10     	; 0x122c <__ftoa_engine+0x80>
    1222:	36 0f       	add	r19, r22
    1224:	e7 1e       	adc	r14, r23
    1226:	f8 1e       	adc	r15, r24
    1228:	49 1f       	adc	r20, r25
    122a:	51 1d       	adc	r21, r1
    122c:	66 0f       	add	r22, r22
    122e:	77 1f       	adc	r23, r23
    1230:	88 1f       	adc	r24, r24
    1232:	99 1f       	adc	r25, r25
    1234:	06 94       	lsr	r0
    1236:	a1 f7       	brne	.-24     	; 0x1220 <__ftoa_engine+0x74>
    1238:	05 90       	lpm	r0, Z+
    123a:	07 94       	ror	r0
    123c:	28 f4       	brcc	.+10     	; 0x1248 <__ftoa_engine+0x9c>
    123e:	e7 0e       	add	r14, r23
    1240:	f8 1e       	adc	r15, r24
    1242:	49 1f       	adc	r20, r25
    1244:	56 1f       	adc	r21, r22
    1246:	c1 1d       	adc	r28, r1
    1248:	77 0f       	add	r23, r23
    124a:	88 1f       	adc	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	66 1f       	adc	r22, r22
    1250:	06 94       	lsr	r0
    1252:	a1 f7       	brne	.-24     	; 0x123c <__ftoa_engine+0x90>
    1254:	05 90       	lpm	r0, Z+
    1256:	07 94       	ror	r0
    1258:	28 f4       	brcc	.+10     	; 0x1264 <__ftoa_engine+0xb8>
    125a:	f8 0e       	add	r15, r24
    125c:	49 1f       	adc	r20, r25
    125e:	56 1f       	adc	r21, r22
    1260:	c7 1f       	adc	r28, r23
    1262:	d1 1d       	adc	r29, r1
    1264:	88 0f       	add	r24, r24
    1266:	99 1f       	adc	r25, r25
    1268:	66 1f       	adc	r22, r22
    126a:	77 1f       	adc	r23, r23
    126c:	06 94       	lsr	r0
    126e:	a1 f7       	brne	.-24     	; 0x1258 <__ftoa_engine+0xac>
    1270:	05 90       	lpm	r0, Z+
    1272:	07 94       	ror	r0
    1274:	20 f4       	brcc	.+8      	; 0x127e <__ftoa_engine+0xd2>
    1276:	49 0f       	add	r20, r25
    1278:	56 1f       	adc	r21, r22
    127a:	c7 1f       	adc	r28, r23
    127c:	d8 1f       	adc	r29, r24
    127e:	99 0f       	add	r25, r25
    1280:	66 1f       	adc	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	06 94       	lsr	r0
    1288:	a9 f7       	brne	.-22     	; 0x1274 <__ftoa_engine+0xc8>
    128a:	84 91       	lpm	r24, Z+
    128c:	10 95       	com	r17
    128e:	17 70       	andi	r17, 0x07	; 7
    1290:	41 f0       	breq	.+16     	; 0x12a2 <__ftoa_engine+0xf6>
    1292:	d6 95       	lsr	r29
    1294:	c7 95       	ror	r28
    1296:	57 95       	ror	r21
    1298:	47 95       	ror	r20
    129a:	f7 94       	ror	r15
    129c:	e7 94       	ror	r14
    129e:	1a 95       	dec	r17
    12a0:	c1 f7       	brne	.-16     	; 0x1292 <__ftoa_engine+0xe6>
    12a2:	ec e5       	ldi	r30, 0x5C	; 92
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	68 94       	set
    12a8:	15 90       	lpm	r1, Z+
    12aa:	15 91       	lpm	r17, Z+
    12ac:	35 91       	lpm	r19, Z+
    12ae:	65 91       	lpm	r22, Z+
    12b0:	95 91       	lpm	r25, Z+
    12b2:	05 90       	lpm	r0, Z+
    12b4:	7f e2       	ldi	r23, 0x2F	; 47
    12b6:	73 95       	inc	r23
    12b8:	e1 18       	sub	r14, r1
    12ba:	f1 0a       	sbc	r15, r17
    12bc:	43 0b       	sbc	r20, r19
    12be:	56 0b       	sbc	r21, r22
    12c0:	c9 0b       	sbc	r28, r25
    12c2:	d0 09       	sbc	r29, r0
    12c4:	c0 f7       	brcc	.-16     	; 0x12b6 <__ftoa_engine+0x10a>
    12c6:	e1 0c       	add	r14, r1
    12c8:	f1 1e       	adc	r15, r17
    12ca:	43 1f       	adc	r20, r19
    12cc:	56 1f       	adc	r21, r22
    12ce:	c9 1f       	adc	r28, r25
    12d0:	d0 1d       	adc	r29, r0
    12d2:	7e f4       	brtc	.+30     	; 0x12f2 <__ftoa_engine+0x146>
    12d4:	70 33       	cpi	r23, 0x30	; 48
    12d6:	11 f4       	brne	.+4      	; 0x12dc <__ftoa_engine+0x130>
    12d8:	8a 95       	dec	r24
    12da:	e6 cf       	rjmp	.-52     	; 0x12a8 <__ftoa_engine+0xfc>
    12dc:	e8 94       	clt
    12de:	01 50       	subi	r16, 0x01	; 1
    12e0:	30 f0       	brcs	.+12     	; 0x12ee <__ftoa_engine+0x142>
    12e2:	08 0f       	add	r16, r24
    12e4:	0a f4       	brpl	.+2      	; 0x12e8 <__ftoa_engine+0x13c>
    12e6:	00 27       	eor	r16, r16
    12e8:	02 17       	cp	r16, r18
    12ea:	08 f4       	brcc	.+2      	; 0x12ee <__ftoa_engine+0x142>
    12ec:	20 2f       	mov	r18, r16
    12ee:	23 95       	inc	r18
    12f0:	02 2f       	mov	r16, r18
    12f2:	7a 33       	cpi	r23, 0x3A	; 58
    12f4:	28 f0       	brcs	.+10     	; 0x1300 <__ftoa_engine+0x154>
    12f6:	79 e3       	ldi	r23, 0x39	; 57
    12f8:	7d 93       	st	X+, r23
    12fa:	2a 95       	dec	r18
    12fc:	e9 f7       	brne	.-6      	; 0x12f8 <__ftoa_engine+0x14c>
    12fe:	10 c0       	rjmp	.+32     	; 0x1320 <__ftoa_engine+0x174>
    1300:	7d 93       	st	X+, r23
    1302:	2a 95       	dec	r18
    1304:	89 f6       	brne	.-94     	; 0x12a8 <__ftoa_engine+0xfc>
    1306:	06 94       	lsr	r0
    1308:	97 95       	ror	r25
    130a:	67 95       	ror	r22
    130c:	37 95       	ror	r19
    130e:	17 95       	ror	r17
    1310:	17 94       	ror	r1
    1312:	e1 18       	sub	r14, r1
    1314:	f1 0a       	sbc	r15, r17
    1316:	43 0b       	sbc	r20, r19
    1318:	56 0b       	sbc	r21, r22
    131a:	c9 0b       	sbc	r28, r25
    131c:	d0 09       	sbc	r29, r0
    131e:	98 f0       	brcs	.+38     	; 0x1346 <__ftoa_engine+0x19a>
    1320:	23 95       	inc	r18
    1322:	7e 91       	ld	r23, -X
    1324:	73 95       	inc	r23
    1326:	7a 33       	cpi	r23, 0x3A	; 58
    1328:	08 f0       	brcs	.+2      	; 0x132c <__ftoa_engine+0x180>
    132a:	70 e3       	ldi	r23, 0x30	; 48
    132c:	7c 93       	st	X, r23
    132e:	20 13       	cpse	r18, r16
    1330:	b8 f7       	brcc	.-18     	; 0x1320 <__ftoa_engine+0x174>
    1332:	7e 91       	ld	r23, -X
    1334:	70 61       	ori	r23, 0x10	; 16
    1336:	7d 93       	st	X+, r23
    1338:	30 f0       	brcs	.+12     	; 0x1346 <__ftoa_engine+0x19a>
    133a:	83 95       	inc	r24
    133c:	71 e3       	ldi	r23, 0x31	; 49
    133e:	7d 93       	st	X+, r23
    1340:	70 e3       	ldi	r23, 0x30	; 48
    1342:	2a 95       	dec	r18
    1344:	e1 f7       	brne	.-8      	; 0x133e <__ftoa_engine+0x192>
    1346:	11 24       	eor	r1, r1
    1348:	ef 90       	pop	r14
    134a:	ff 90       	pop	r15
    134c:	0f 91       	pop	r16
    134e:	1f 91       	pop	r17
    1350:	cf 91       	pop	r28
    1352:	df 91       	pop	r29
    1354:	99 27       	eor	r25, r25
    1356:	87 fd       	sbrc	r24, 7
    1358:	90 95       	com	r25
    135a:	08 95       	ret

0000135c <strnlen_P>:
    135c:	fc 01       	movw	r30, r24
    135e:	05 90       	lpm	r0, Z+
    1360:	61 50       	subi	r22, 0x01	; 1
    1362:	70 40       	sbci	r23, 0x00	; 0
    1364:	01 10       	cpse	r0, r1
    1366:	d8 f7       	brcc	.-10     	; 0x135e <strnlen_P+0x2>
    1368:	80 95       	com	r24
    136a:	90 95       	com	r25
    136c:	8e 0f       	add	r24, r30
    136e:	9f 1f       	adc	r25, r31
    1370:	08 95       	ret

00001372 <strnlen>:
    1372:	fc 01       	movw	r30, r24
    1374:	61 50       	subi	r22, 0x01	; 1
    1376:	70 40       	sbci	r23, 0x00	; 0
    1378:	01 90       	ld	r0, Z+
    137a:	01 10       	cpse	r0, r1
    137c:	d8 f7       	brcc	.-10     	; 0x1374 <strnlen+0x2>
    137e:	80 95       	com	r24
    1380:	90 95       	com	r25
    1382:	8e 0f       	add	r24, r30
    1384:	9f 1f       	adc	r25, r31
    1386:	08 95       	ret

00001388 <fputc>:
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	8c 01       	movw	r16, r24
    1392:	eb 01       	movw	r28, r22
    1394:	8b 81       	ldd	r24, Y+3	; 0x03
    1396:	81 ff       	sbrs	r24, 1
    1398:	1b c0       	rjmp	.+54     	; 0x13d0 <fputc+0x48>
    139a:	82 ff       	sbrs	r24, 2
    139c:	0d c0       	rjmp	.+26     	; 0x13b8 <fputc+0x30>
    139e:	2e 81       	ldd	r18, Y+6	; 0x06
    13a0:	3f 81       	ldd	r19, Y+7	; 0x07
    13a2:	8c 81       	ldd	r24, Y+4	; 0x04
    13a4:	9d 81       	ldd	r25, Y+5	; 0x05
    13a6:	28 17       	cp	r18, r24
    13a8:	39 07       	cpc	r19, r25
    13aa:	64 f4       	brge	.+24     	; 0x13c4 <fputc+0x3c>
    13ac:	e8 81       	ld	r30, Y
    13ae:	f9 81       	ldd	r31, Y+1	; 0x01
    13b0:	01 93       	st	Z+, r16
    13b2:	f9 83       	std	Y+1, r31	; 0x01
    13b4:	e8 83       	st	Y, r30
    13b6:	06 c0       	rjmp	.+12     	; 0x13c4 <fputc+0x3c>
    13b8:	e8 85       	ldd	r30, Y+8	; 0x08
    13ba:	f9 85       	ldd	r31, Y+9	; 0x09
    13bc:	80 2f       	mov	r24, r16
    13be:	09 95       	icall
    13c0:	89 2b       	or	r24, r25
    13c2:	31 f4       	brne	.+12     	; 0x13d0 <fputc+0x48>
    13c4:	8e 81       	ldd	r24, Y+6	; 0x06
    13c6:	9f 81       	ldd	r25, Y+7	; 0x07
    13c8:	01 96       	adiw	r24, 0x01	; 1
    13ca:	9f 83       	std	Y+7, r25	; 0x07
    13cc:	8e 83       	std	Y+6, r24	; 0x06
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <fputc+0x4c>
    13d0:	0f ef       	ldi	r16, 0xFF	; 255
    13d2:	1f ef       	ldi	r17, 0xFF	; 255
    13d4:	c8 01       	movw	r24, r16
    13d6:	df 91       	pop	r29
    13d8:	cf 91       	pop	r28
    13da:	1f 91       	pop	r17
    13dc:	0f 91       	pop	r16
    13de:	08 95       	ret

000013e0 <sprintf>:
    13e0:	ae e0       	ldi	r26, 0x0E	; 14
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	e6 ef       	ldi	r30, 0xF6	; 246
    13e6:	f9 e0       	ldi	r31, 0x09	; 9
    13e8:	0c 94 73 0b 	jmp	0x16e6	; 0x16e6 <__prologue_saves__+0x1c>
    13ec:	0d 89       	ldd	r16, Y+21	; 0x15
    13ee:	1e 89       	ldd	r17, Y+22	; 0x16
    13f0:	86 e0       	ldi	r24, 0x06	; 6
    13f2:	8c 83       	std	Y+4, r24	; 0x04
    13f4:	1a 83       	std	Y+2, r17	; 0x02
    13f6:	09 83       	std	Y+1, r16	; 0x01
    13f8:	8f ef       	ldi	r24, 0xFF	; 255
    13fa:	9f e7       	ldi	r25, 0x7F	; 127
    13fc:	9e 83       	std	Y+6, r25	; 0x06
    13fe:	8d 83       	std	Y+5, r24	; 0x05
    1400:	9e 01       	movw	r18, r28
    1402:	27 5e       	subi	r18, 0xE7	; 231
    1404:	3f 4f       	sbci	r19, 0xFF	; 255
    1406:	ce 01       	movw	r24, r28
    1408:	01 96       	adiw	r24, 0x01	; 1
    140a:	6f 89       	ldd	r22, Y+23	; 0x17
    140c:	78 8d       	ldd	r23, Y+24	; 0x18
    140e:	a9 01       	movw	r20, r18
    1410:	0e 94 4d 05 	call	0xa9a	; 0xa9a <vfprintf>
    1414:	2f 81       	ldd	r18, Y+7	; 0x07
    1416:	38 85       	ldd	r19, Y+8	; 0x08
    1418:	02 0f       	add	r16, r18
    141a:	13 1f       	adc	r17, r19
    141c:	f8 01       	movw	r30, r16
    141e:	10 82       	st	Z, r1
    1420:	2e 96       	adiw	r28, 0x0e	; 14
    1422:	e4 e0       	ldi	r30, 0x04	; 4
    1424:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__epilogue_restores__+0x1c>

00001428 <__ultoa_invert>:
    1428:	fa 01       	movw	r30, r20
    142a:	aa 27       	eor	r26, r26
    142c:	28 30       	cpi	r18, 0x08	; 8
    142e:	51 f1       	breq	.+84     	; 0x1484 <__ultoa_invert+0x5c>
    1430:	20 31       	cpi	r18, 0x10	; 16
    1432:	81 f1       	breq	.+96     	; 0x1494 <__ultoa_invert+0x6c>
    1434:	e8 94       	clt
    1436:	6f 93       	push	r22
    1438:	6e 7f       	andi	r22, 0xFE	; 254
    143a:	6e 5f       	subi	r22, 0xFE	; 254
    143c:	7f 4f       	sbci	r23, 0xFF	; 255
    143e:	8f 4f       	sbci	r24, 0xFF	; 255
    1440:	9f 4f       	sbci	r25, 0xFF	; 255
    1442:	af 4f       	sbci	r26, 0xFF	; 255
    1444:	b1 e0       	ldi	r27, 0x01	; 1
    1446:	3e d0       	rcall	.+124    	; 0x14c4 <__ultoa_invert+0x9c>
    1448:	b4 e0       	ldi	r27, 0x04	; 4
    144a:	3c d0       	rcall	.+120    	; 0x14c4 <__ultoa_invert+0x9c>
    144c:	67 0f       	add	r22, r23
    144e:	78 1f       	adc	r23, r24
    1450:	89 1f       	adc	r24, r25
    1452:	9a 1f       	adc	r25, r26
    1454:	a1 1d       	adc	r26, r1
    1456:	68 0f       	add	r22, r24
    1458:	79 1f       	adc	r23, r25
    145a:	8a 1f       	adc	r24, r26
    145c:	91 1d       	adc	r25, r1
    145e:	a1 1d       	adc	r26, r1
    1460:	6a 0f       	add	r22, r26
    1462:	71 1d       	adc	r23, r1
    1464:	81 1d       	adc	r24, r1
    1466:	91 1d       	adc	r25, r1
    1468:	a1 1d       	adc	r26, r1
    146a:	20 d0       	rcall	.+64     	; 0x14ac <__ultoa_invert+0x84>
    146c:	09 f4       	brne	.+2      	; 0x1470 <__ultoa_invert+0x48>
    146e:	68 94       	set
    1470:	3f 91       	pop	r19
    1472:	2a e0       	ldi	r18, 0x0A	; 10
    1474:	26 9f       	mul	r18, r22
    1476:	11 24       	eor	r1, r1
    1478:	30 19       	sub	r19, r0
    147a:	30 5d       	subi	r19, 0xD0	; 208
    147c:	31 93       	st	Z+, r19
    147e:	de f6       	brtc	.-74     	; 0x1436 <__ultoa_invert+0xe>
    1480:	cf 01       	movw	r24, r30
    1482:	08 95       	ret
    1484:	46 2f       	mov	r20, r22
    1486:	47 70       	andi	r20, 0x07	; 7
    1488:	40 5d       	subi	r20, 0xD0	; 208
    148a:	41 93       	st	Z+, r20
    148c:	b3 e0       	ldi	r27, 0x03	; 3
    148e:	0f d0       	rcall	.+30     	; 0x14ae <__ultoa_invert+0x86>
    1490:	c9 f7       	brne	.-14     	; 0x1484 <__ultoa_invert+0x5c>
    1492:	f6 cf       	rjmp	.-20     	; 0x1480 <__ultoa_invert+0x58>
    1494:	46 2f       	mov	r20, r22
    1496:	4f 70       	andi	r20, 0x0F	; 15
    1498:	40 5d       	subi	r20, 0xD0	; 208
    149a:	4a 33       	cpi	r20, 0x3A	; 58
    149c:	18 f0       	brcs	.+6      	; 0x14a4 <__ultoa_invert+0x7c>
    149e:	49 5d       	subi	r20, 0xD9	; 217
    14a0:	31 fd       	sbrc	r19, 1
    14a2:	40 52       	subi	r20, 0x20	; 32
    14a4:	41 93       	st	Z+, r20
    14a6:	02 d0       	rcall	.+4      	; 0x14ac <__ultoa_invert+0x84>
    14a8:	a9 f7       	brne	.-22     	; 0x1494 <__ultoa_invert+0x6c>
    14aa:	ea cf       	rjmp	.-44     	; 0x1480 <__ultoa_invert+0x58>
    14ac:	b4 e0       	ldi	r27, 0x04	; 4
    14ae:	a6 95       	lsr	r26
    14b0:	97 95       	ror	r25
    14b2:	87 95       	ror	r24
    14b4:	77 95       	ror	r23
    14b6:	67 95       	ror	r22
    14b8:	ba 95       	dec	r27
    14ba:	c9 f7       	brne	.-14     	; 0x14ae <__ultoa_invert+0x86>
    14bc:	00 97       	sbiw	r24, 0x00	; 0
    14be:	61 05       	cpc	r22, r1
    14c0:	71 05       	cpc	r23, r1
    14c2:	08 95       	ret
    14c4:	9b 01       	movw	r18, r22
    14c6:	ac 01       	movw	r20, r24
    14c8:	0a 2e       	mov	r0, r26
    14ca:	06 94       	lsr	r0
    14cc:	57 95       	ror	r21
    14ce:	47 95       	ror	r20
    14d0:	37 95       	ror	r19
    14d2:	27 95       	ror	r18
    14d4:	ba 95       	dec	r27
    14d6:	c9 f7       	brne	.-14     	; 0x14ca <__ultoa_invert+0xa2>
    14d8:	62 0f       	add	r22, r18
    14da:	73 1f       	adc	r23, r19
    14dc:	84 1f       	adc	r24, r20
    14de:	95 1f       	adc	r25, r21
    14e0:	a0 1d       	adc	r26, r0
    14e2:	08 95       	ret

000014e4 <__fixunssfsi>:
    14e4:	70 d0       	rcall	.+224    	; 0x15c6 <__fp_splitA>
    14e6:	88 f0       	brcs	.+34     	; 0x150a <__fixunssfsi+0x26>
    14e8:	9f 57       	subi	r25, 0x7F	; 127
    14ea:	90 f0       	brcs	.+36     	; 0x1510 <__fixunssfsi+0x2c>
    14ec:	b9 2f       	mov	r27, r25
    14ee:	99 27       	eor	r25, r25
    14f0:	b7 51       	subi	r27, 0x17	; 23
    14f2:	a0 f0       	brcs	.+40     	; 0x151c <__fixunssfsi+0x38>
    14f4:	d1 f0       	breq	.+52     	; 0x152a <__fixunssfsi+0x46>
    14f6:	66 0f       	add	r22, r22
    14f8:	77 1f       	adc	r23, r23
    14fa:	88 1f       	adc	r24, r24
    14fc:	99 1f       	adc	r25, r25
    14fe:	1a f0       	brmi	.+6      	; 0x1506 <__fixunssfsi+0x22>
    1500:	ba 95       	dec	r27
    1502:	c9 f7       	brne	.-14     	; 0x14f6 <__fixunssfsi+0x12>
    1504:	12 c0       	rjmp	.+36     	; 0x152a <__fixunssfsi+0x46>
    1506:	b1 30       	cpi	r27, 0x01	; 1
    1508:	81 f0       	breq	.+32     	; 0x152a <__fixunssfsi+0x46>
    150a:	77 d0       	rcall	.+238    	; 0x15fa <__fp_zero>
    150c:	b1 e0       	ldi	r27, 0x01	; 1
    150e:	08 95       	ret
    1510:	74 c0       	rjmp	.+232    	; 0x15fa <__fp_zero>
    1512:	67 2f       	mov	r22, r23
    1514:	78 2f       	mov	r23, r24
    1516:	88 27       	eor	r24, r24
    1518:	b8 5f       	subi	r27, 0xF8	; 248
    151a:	39 f0       	breq	.+14     	; 0x152a <__fixunssfsi+0x46>
    151c:	b9 3f       	cpi	r27, 0xF9	; 249
    151e:	cc f3       	brlt	.-14     	; 0x1512 <__fixunssfsi+0x2e>
    1520:	86 95       	lsr	r24
    1522:	77 95       	ror	r23
    1524:	67 95       	ror	r22
    1526:	b3 95       	inc	r27
    1528:	d9 f7       	brne	.-10     	; 0x1520 <__fixunssfsi+0x3c>
    152a:	3e f4       	brtc	.+14     	; 0x153a <__fixunssfsi+0x56>
    152c:	90 95       	com	r25
    152e:	80 95       	com	r24
    1530:	70 95       	com	r23
    1532:	61 95       	neg	r22
    1534:	7f 4f       	sbci	r23, 0xFF	; 255
    1536:	8f 4f       	sbci	r24, 0xFF	; 255
    1538:	9f 4f       	sbci	r25, 0xFF	; 255
    153a:	08 95       	ret

0000153c <__floatunsisf>:
    153c:	e8 94       	clt
    153e:	09 c0       	rjmp	.+18     	; 0x1552 <__floatsisf+0x12>

00001540 <__floatsisf>:
    1540:	97 fb       	bst	r25, 7
    1542:	3e f4       	brtc	.+14     	; 0x1552 <__floatsisf+0x12>
    1544:	90 95       	com	r25
    1546:	80 95       	com	r24
    1548:	70 95       	com	r23
    154a:	61 95       	neg	r22
    154c:	7f 4f       	sbci	r23, 0xFF	; 255
    154e:	8f 4f       	sbci	r24, 0xFF	; 255
    1550:	9f 4f       	sbci	r25, 0xFF	; 255
    1552:	99 23       	and	r25, r25
    1554:	a9 f0       	breq	.+42     	; 0x1580 <__floatsisf+0x40>
    1556:	f9 2f       	mov	r31, r25
    1558:	96 e9       	ldi	r25, 0x96	; 150
    155a:	bb 27       	eor	r27, r27
    155c:	93 95       	inc	r25
    155e:	f6 95       	lsr	r31
    1560:	87 95       	ror	r24
    1562:	77 95       	ror	r23
    1564:	67 95       	ror	r22
    1566:	b7 95       	ror	r27
    1568:	f1 11       	cpse	r31, r1
    156a:	f8 cf       	rjmp	.-16     	; 0x155c <__floatsisf+0x1c>
    156c:	fa f4       	brpl	.+62     	; 0x15ac <__floatsisf+0x6c>
    156e:	bb 0f       	add	r27, r27
    1570:	11 f4       	brne	.+4      	; 0x1576 <__floatsisf+0x36>
    1572:	60 ff       	sbrs	r22, 0
    1574:	1b c0       	rjmp	.+54     	; 0x15ac <__floatsisf+0x6c>
    1576:	6f 5f       	subi	r22, 0xFF	; 255
    1578:	7f 4f       	sbci	r23, 0xFF	; 255
    157a:	8f 4f       	sbci	r24, 0xFF	; 255
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	16 c0       	rjmp	.+44     	; 0x15ac <__floatsisf+0x6c>
    1580:	88 23       	and	r24, r24
    1582:	11 f0       	breq	.+4      	; 0x1588 <__floatsisf+0x48>
    1584:	96 e9       	ldi	r25, 0x96	; 150
    1586:	11 c0       	rjmp	.+34     	; 0x15aa <__floatsisf+0x6a>
    1588:	77 23       	and	r23, r23
    158a:	21 f0       	breq	.+8      	; 0x1594 <__floatsisf+0x54>
    158c:	9e e8       	ldi	r25, 0x8E	; 142
    158e:	87 2f       	mov	r24, r23
    1590:	76 2f       	mov	r23, r22
    1592:	05 c0       	rjmp	.+10     	; 0x159e <__floatsisf+0x5e>
    1594:	66 23       	and	r22, r22
    1596:	71 f0       	breq	.+28     	; 0x15b4 <__floatsisf+0x74>
    1598:	96 e8       	ldi	r25, 0x86	; 134
    159a:	86 2f       	mov	r24, r22
    159c:	70 e0       	ldi	r23, 0x00	; 0
    159e:	60 e0       	ldi	r22, 0x00	; 0
    15a0:	2a f0       	brmi	.+10     	; 0x15ac <__floatsisf+0x6c>
    15a2:	9a 95       	dec	r25
    15a4:	66 0f       	add	r22, r22
    15a6:	77 1f       	adc	r23, r23
    15a8:	88 1f       	adc	r24, r24
    15aa:	da f7       	brpl	.-10     	; 0x15a2 <__floatsisf+0x62>
    15ac:	88 0f       	add	r24, r24
    15ae:	96 95       	lsr	r25
    15b0:	87 95       	ror	r24
    15b2:	97 f9       	bld	r25, 7
    15b4:	08 95       	ret

000015b6 <__fp_split3>:
    15b6:	57 fd       	sbrc	r21, 7
    15b8:	90 58       	subi	r25, 0x80	; 128
    15ba:	44 0f       	add	r20, r20
    15bc:	55 1f       	adc	r21, r21
    15be:	59 f0       	breq	.+22     	; 0x15d6 <__fp_splitA+0x10>
    15c0:	5f 3f       	cpi	r21, 0xFF	; 255
    15c2:	71 f0       	breq	.+28     	; 0x15e0 <__fp_splitA+0x1a>
    15c4:	47 95       	ror	r20

000015c6 <__fp_splitA>:
    15c6:	88 0f       	add	r24, r24
    15c8:	97 fb       	bst	r25, 7
    15ca:	99 1f       	adc	r25, r25
    15cc:	61 f0       	breq	.+24     	; 0x15e6 <__fp_splitA+0x20>
    15ce:	9f 3f       	cpi	r25, 0xFF	; 255
    15d0:	79 f0       	breq	.+30     	; 0x15f0 <__fp_splitA+0x2a>
    15d2:	87 95       	ror	r24
    15d4:	08 95       	ret
    15d6:	12 16       	cp	r1, r18
    15d8:	13 06       	cpc	r1, r19
    15da:	14 06       	cpc	r1, r20
    15dc:	55 1f       	adc	r21, r21
    15de:	f2 cf       	rjmp	.-28     	; 0x15c4 <__fp_split3+0xe>
    15e0:	46 95       	lsr	r20
    15e2:	f1 df       	rcall	.-30     	; 0x15c6 <__fp_splitA>
    15e4:	08 c0       	rjmp	.+16     	; 0x15f6 <__fp_splitA+0x30>
    15e6:	16 16       	cp	r1, r22
    15e8:	17 06       	cpc	r1, r23
    15ea:	18 06       	cpc	r1, r24
    15ec:	99 1f       	adc	r25, r25
    15ee:	f1 cf       	rjmp	.-30     	; 0x15d2 <__fp_splitA+0xc>
    15f0:	86 95       	lsr	r24
    15f2:	71 05       	cpc	r23, r1
    15f4:	61 05       	cpc	r22, r1
    15f6:	08 94       	sec
    15f8:	08 95       	ret

000015fa <__fp_zero>:
    15fa:	e8 94       	clt

000015fc <__fp_szero>:
    15fc:	bb 27       	eor	r27, r27
    15fe:	66 27       	eor	r22, r22
    1600:	77 27       	eor	r23, r23
    1602:	cb 01       	movw	r24, r22
    1604:	97 f9       	bld	r25, 7
    1606:	08 95       	ret

00001608 <__mulsi3>:
    1608:	62 9f       	mul	r22, r18
    160a:	d0 01       	movw	r26, r0
    160c:	73 9f       	mul	r23, r19
    160e:	f0 01       	movw	r30, r0
    1610:	82 9f       	mul	r24, r18
    1612:	e0 0d       	add	r30, r0
    1614:	f1 1d       	adc	r31, r1
    1616:	64 9f       	mul	r22, r20
    1618:	e0 0d       	add	r30, r0
    161a:	f1 1d       	adc	r31, r1
    161c:	92 9f       	mul	r25, r18
    161e:	f0 0d       	add	r31, r0
    1620:	83 9f       	mul	r24, r19
    1622:	f0 0d       	add	r31, r0
    1624:	74 9f       	mul	r23, r20
    1626:	f0 0d       	add	r31, r0
    1628:	65 9f       	mul	r22, r21
    162a:	f0 0d       	add	r31, r0
    162c:	99 27       	eor	r25, r25
    162e:	72 9f       	mul	r23, r18
    1630:	b0 0d       	add	r27, r0
    1632:	e1 1d       	adc	r30, r1
    1634:	f9 1f       	adc	r31, r25
    1636:	63 9f       	mul	r22, r19
    1638:	b0 0d       	add	r27, r0
    163a:	e1 1d       	adc	r30, r1
    163c:	f9 1f       	adc	r31, r25
    163e:	bd 01       	movw	r22, r26
    1640:	cf 01       	movw	r24, r30
    1642:	11 24       	eor	r1, r1
    1644:	08 95       	ret

00001646 <__udivmodqi4>:
    1646:	99 1b       	sub	r25, r25
    1648:	79 e0       	ldi	r23, 0x09	; 9
    164a:	04 c0       	rjmp	.+8      	; 0x1654 <__udivmodqi4_ep>

0000164c <__udivmodqi4_loop>:
    164c:	99 1f       	adc	r25, r25
    164e:	96 17       	cp	r25, r22
    1650:	08 f0       	brcs	.+2      	; 0x1654 <__udivmodqi4_ep>
    1652:	96 1b       	sub	r25, r22

00001654 <__udivmodqi4_ep>:
    1654:	88 1f       	adc	r24, r24
    1656:	7a 95       	dec	r23
    1658:	c9 f7       	brne	.-14     	; 0x164c <__udivmodqi4_loop>
    165a:	80 95       	com	r24
    165c:	08 95       	ret

0000165e <__udivmodhi4>:
    165e:	aa 1b       	sub	r26, r26
    1660:	bb 1b       	sub	r27, r27
    1662:	51 e1       	ldi	r21, 0x11	; 17
    1664:	07 c0       	rjmp	.+14     	; 0x1674 <__udivmodhi4_ep>

00001666 <__udivmodhi4_loop>:
    1666:	aa 1f       	adc	r26, r26
    1668:	bb 1f       	adc	r27, r27
    166a:	a6 17       	cp	r26, r22
    166c:	b7 07       	cpc	r27, r23
    166e:	10 f0       	brcs	.+4      	; 0x1674 <__udivmodhi4_ep>
    1670:	a6 1b       	sub	r26, r22
    1672:	b7 0b       	sbc	r27, r23

00001674 <__udivmodhi4_ep>:
    1674:	88 1f       	adc	r24, r24
    1676:	99 1f       	adc	r25, r25
    1678:	5a 95       	dec	r21
    167a:	a9 f7       	brne	.-22     	; 0x1666 <__udivmodhi4_loop>
    167c:	80 95       	com	r24
    167e:	90 95       	com	r25
    1680:	bc 01       	movw	r22, r24
    1682:	cd 01       	movw	r24, r26
    1684:	08 95       	ret

00001686 <__udivmodsi4>:
    1686:	a1 e2       	ldi	r26, 0x21	; 33
    1688:	1a 2e       	mov	r1, r26
    168a:	aa 1b       	sub	r26, r26
    168c:	bb 1b       	sub	r27, r27
    168e:	fd 01       	movw	r30, r26
    1690:	0d c0       	rjmp	.+26     	; 0x16ac <__udivmodsi4_ep>

00001692 <__udivmodsi4_loop>:
    1692:	aa 1f       	adc	r26, r26
    1694:	bb 1f       	adc	r27, r27
    1696:	ee 1f       	adc	r30, r30
    1698:	ff 1f       	adc	r31, r31
    169a:	a2 17       	cp	r26, r18
    169c:	b3 07       	cpc	r27, r19
    169e:	e4 07       	cpc	r30, r20
    16a0:	f5 07       	cpc	r31, r21
    16a2:	20 f0       	brcs	.+8      	; 0x16ac <__udivmodsi4_ep>
    16a4:	a2 1b       	sub	r26, r18
    16a6:	b3 0b       	sbc	r27, r19
    16a8:	e4 0b       	sbc	r30, r20
    16aa:	f5 0b       	sbc	r31, r21

000016ac <__udivmodsi4_ep>:
    16ac:	66 1f       	adc	r22, r22
    16ae:	77 1f       	adc	r23, r23
    16b0:	88 1f       	adc	r24, r24
    16b2:	99 1f       	adc	r25, r25
    16b4:	1a 94       	dec	r1
    16b6:	69 f7       	brne	.-38     	; 0x1692 <__udivmodsi4_loop>
    16b8:	60 95       	com	r22
    16ba:	70 95       	com	r23
    16bc:	80 95       	com	r24
    16be:	90 95       	com	r25
    16c0:	9b 01       	movw	r18, r22
    16c2:	ac 01       	movw	r20, r24
    16c4:	bd 01       	movw	r22, r26
    16c6:	cf 01       	movw	r24, r30
    16c8:	08 95       	ret

000016ca <__prologue_saves__>:
    16ca:	2f 92       	push	r2
    16cc:	3f 92       	push	r3
    16ce:	4f 92       	push	r4
    16d0:	5f 92       	push	r5
    16d2:	6f 92       	push	r6
    16d4:	7f 92       	push	r7
    16d6:	8f 92       	push	r8
    16d8:	9f 92       	push	r9
    16da:	af 92       	push	r10
    16dc:	bf 92       	push	r11
    16de:	cf 92       	push	r12
    16e0:	df 92       	push	r13
    16e2:	ef 92       	push	r14
    16e4:	ff 92       	push	r15
    16e6:	0f 93       	push	r16
    16e8:	1f 93       	push	r17
    16ea:	cf 93       	push	r28
    16ec:	df 93       	push	r29
    16ee:	cd b7       	in	r28, 0x3d	; 61
    16f0:	de b7       	in	r29, 0x3e	; 62
    16f2:	ca 1b       	sub	r28, r26
    16f4:	db 0b       	sbc	r29, r27
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	f8 94       	cli
    16fa:	de bf       	out	0x3e, r29	; 62
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	cd bf       	out	0x3d, r28	; 61
    1700:	09 94       	ijmp

00001702 <__epilogue_restores__>:
    1702:	2a 88       	ldd	r2, Y+18	; 0x12
    1704:	39 88       	ldd	r3, Y+17	; 0x11
    1706:	48 88       	ldd	r4, Y+16	; 0x10
    1708:	5f 84       	ldd	r5, Y+15	; 0x0f
    170a:	6e 84       	ldd	r6, Y+14	; 0x0e
    170c:	7d 84       	ldd	r7, Y+13	; 0x0d
    170e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1710:	9b 84       	ldd	r9, Y+11	; 0x0b
    1712:	aa 84       	ldd	r10, Y+10	; 0x0a
    1714:	b9 84       	ldd	r11, Y+9	; 0x09
    1716:	c8 84       	ldd	r12, Y+8	; 0x08
    1718:	df 80       	ldd	r13, Y+7	; 0x07
    171a:	ee 80       	ldd	r14, Y+6	; 0x06
    171c:	fd 80       	ldd	r15, Y+5	; 0x05
    171e:	0c 81       	ldd	r16, Y+4	; 0x04
    1720:	1b 81       	ldd	r17, Y+3	; 0x03
    1722:	aa 81       	ldd	r26, Y+2	; 0x02
    1724:	b9 81       	ldd	r27, Y+1	; 0x01
    1726:	ce 0f       	add	r28, r30
    1728:	d1 1d       	adc	r29, r1
    172a:	0f b6       	in	r0, 0x3f	; 63
    172c:	f8 94       	cli
    172e:	de bf       	out	0x3e, r29	; 62
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	ed 01       	movw	r28, r26
    1736:	08 95       	ret

00001738 <_exit>:
    1738:	f8 94       	cli

0000173a <__stop_program>:
    173a:	ff cf       	rjmp	.-2      	; 0x173a <__stop_program>
