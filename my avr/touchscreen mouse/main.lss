
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ae8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  00000ae8  00000b7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000030  00800084  00800084  00000ba0  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000119  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a2c  00000000  00000000  00000cd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002bb  00000000  00000000  00001705  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005f1  00000000  00000000  000019c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001ac  00000000  00000000  000020a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000020f  00000000  00000000  00002250  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 38       	cpi	r26, 0x84	; 132
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e8       	ldi	r26, 0x84	; 132
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 3b       	cpi	r26, 0xB4	; 180
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4b 02 	call	0x496	; 0x496 <main>
  8a:	0c 94 72 05 	jmp	0xae4	; 0xae4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_reset>:
#define LCD_RW      0x02
#define LCD_EN      0x04

void lcd_reset(void)
{
        lcd_port = 0xFF;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	88 bb       	out	0x18, r24	; 24
  96:	88 ec       	ldi	r24, 0xC8	; 200
  98:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	20 e9       	ldi	r18, 0x90	; 144
  9c:	31 e0       	ldi	r19, 0x01	; 1
  9e:	f9 01       	movw	r30, r18
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_reset+0xe>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  a6:	d9 f7       	brne	.-10     	; 0x9e <lcd_reset+0xc>
        _delay_ms(20);
        lcd_port = 0x30+LCD_EN;
  a8:	94 e3       	ldi	r25, 0x34	; 52
  aa:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
  ac:	80 e3       	ldi	r24, 0x30	; 48
  ae:	88 bb       	out	0x18, r24	; 24
  b0:	e0 e4       	ldi	r30, 0x40	; 64
  b2:	fc e9       	ldi	r31, 0x9C	; 156
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <lcd_reset+0x22>
        _delay_ms(10);
        lcd_port = 0x30+LCD_EN;
  b8:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	20 ea       	ldi	r18, 0xA0	; 160
  be:	3f e0       	ldi	r19, 0x0F	; 15
  c0:	f9 01       	movw	r30, r18
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_reset+0x30>
        _delay_ms(1);
        lcd_port = 0x30+LCD_EN;
  c6:	98 bb       	out	0x18, r25	; 24
        lcd_port = 0x30;
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	c9 01       	movw	r24, r18
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcd_reset+0x3a>
        _delay_ms(1);
        lcd_port = 0x20+LCD_EN;
  d0:	84 e2       	ldi	r24, 0x24	; 36
  d2:	88 bb       	out	0x18, r24	; 24
        lcd_port = 0x20;
  d4:	80 e2       	ldi	r24, 0x20	; 32
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	c9 01       	movw	r24, r18
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <lcd_reset+0x48>
        _delay_ms(1);
}
  de:	08 95       	ret

000000e0 <lcd_cmd>:
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
  e0:	38 2f       	mov	r19, r24
  e2:	30 7f       	andi	r19, 0xF0	; 240
  e4:	23 2f       	mov	r18, r19
  e6:	24 60       	ori	r18, 0x04	; 4
  e8:	28 bb       	out	0x18, r18	; 24
        lcd_port = (cmd & 0xF0);
  ea:	38 bb       	out	0x18, r19	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	24 e0       	ldi	r18, 0x04	; 4
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	2a 95       	dec	r18
  f6:	e1 f7       	brne	.-8      	; 0xf0 <lcd_cmd+0x10>
  f8:	28 2f       	mov	r18, r24
  fa:	24 60       	ori	r18, 0x04	; 4
  fc:	28 bb       	out	0x18, r18	; 24
        lcd_port = ((cmd << 4) & 0xF0);
  fe:	88 bb       	out	0x18, r24	; 24
 100:	80 e4       	ldi	r24, 0x40	; 64
 102:	9f e1       	ldi	r25, 0x1F	; 31
 104:	fc 01       	movw	r30, r24
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <lcd_cmd+0x26>

      

        _delay_ms(2);
        _delay_ms(2);
}
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcd_cmd+0x2a>
 10e:	08 95       	ret

00000110 <lcd_init>:

void lcd_init (void)
{       DDRB=0xFF;
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	87 bb       	out	0x17, r24	; 23
        PORTB=0x00; 
 114:	18 ba       	out	0x18, r1	; 24
        lcd_reset();         // Call LCD reset
 116:	0e 94 49 00 	call	0x92	; 0x92 <lcd_reset>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 11a:	84 e2       	ldi	r24, 0x24	; 36
 11c:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
 11e:	80 e2       	ldi	r24, 0x20	; 32
 120:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 122:	54 e8       	ldi	r21, 0x84	; 132
 124:	58 bb       	out	0x18, r21	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 126:	40 e8       	ldi	r20, 0x80	; 128
 128:	48 bb       	out	0x18, r20	; 24
 12a:	20 e4       	ldi	r18, 0x40	; 64
 12c:	3f e1       	ldi	r19, 0x1F	; 31
 12e:	c9 01       	movw	r24, r18
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <lcd_init+0x20>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 134:	c9 01       	movw	r24, r18
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <lcd_init+0x26>
 13a:	94 e0       	ldi	r25, 0x04	; 4
 13c:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
 13e:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 140:	84 ec       	ldi	r24, 0xC4	; 196
 142:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 144:	80 ec       	ldi	r24, 0xC0	; 192
 146:	88 bb       	out	0x18, r24	; 24
 148:	f9 01       	movw	r30, r18
 14a:	31 97       	sbiw	r30, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_init+0x3a>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 14e:	f9 01       	movw	r30, r18
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <lcd_init+0x40>
 154:	98 bb       	out	0x18, r25	; 24
        lcd_port = (cmd & 0xF0);
 156:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 158:	84 e6       	ldi	r24, 0x64	; 100
 15a:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 15c:	80 e6       	ldi	r24, 0x60	; 96
 15e:	88 bb       	out	0x18, r24	; 24
 160:	f9 01       	movw	r30, r18
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <lcd_init+0x52>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 166:	f9 01       	movw	r30, r18
 168:	31 97       	sbiw	r30, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <lcd_init+0x58>
 16c:	58 bb       	out	0x18, r21	; 24
        lcd_port = (cmd & 0xF0);
 16e:	48 bb       	out	0x18, r20	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 170:	98 bb       	out	0x18, r25	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 172:	18 ba       	out	0x18, r1	; 24
 174:	c9 01       	movw	r24, r18
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <lcd_init+0x66>
        lcd_reset();         // Call LCD reset
        lcd_cmd(0x28);       // 4-bit mode - 2 line - 5x7 font.
        lcd_cmd(0x0C);       // Display on cursor - off .
        lcd_cmd(0x06);       // Automatic Increment - No Display shift.
        lcd_cmd(0x80);       // Address DDRAM with 0 offset 80h.
 }
 17a:	c9 01       	movw	r24, r18
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <lcd_init+0x6c>
 180:	08 95       	ret

00000182 <lcd_data>:


void lcd_data (unsigned char dat)
{
        lcd_port = ((dat & 0xF0)|LCD_EN|LCD_RS);
 182:	98 2f       	mov	r25, r24
 184:	90 7f       	andi	r25, 0xF0	; 240
 186:	29 2f       	mov	r18, r25
 188:	25 60       	ori	r18, 0x05	; 5
 18a:	28 bb       	out	0x18, r18	; 24
        lcd_port = ((dat & 0xF0)|LCD_RS);
 18c:	91 60       	ori	r25, 0x01	; 1
 18e:	98 bb       	out	0x18, r25	; 24
		
		lcd_port = (((dat << 4) & 0xF0)|LCD_EN|LCD_RS);
 190:	82 95       	swap	r24
 192:	80 7f       	andi	r24, 0xF0	; 240
 194:	98 2f       	mov	r25, r24
 196:	95 60       	ori	r25, 0x05	; 5
 198:	98 bb       	out	0x18, r25	; 24
        lcd_port = (((dat << 4) & 0xF0)|LCD_RS);
 19a:	81 60       	ori	r24, 0x01	; 1
 19c:	88 bb       	out	0x18, r24	; 24
 19e:	80 e4       	ldi	r24, 0x40	; 64
 1a0:	9f e1       	ldi	r25, 0x1F	; 31
 1a2:	fc 01       	movw	r30, r24
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <lcd_data+0x22>
       
      

       _delay_ms(2);
       _delay_ms(2);
}
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_data+0x26>
 1ac:	08 95       	ret

000001ae <lcd_puts>:
void lcd_puts(char *aaa)
{
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	ec 01       	movw	r28, r24
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <lcd_puts+0xc>
unsigned int i;
for(i=0;aaa[i]!=0;i++)
lcd_data(aaa[i]);
 1b6:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_data>
       _delay_ms(2);
}
void lcd_puts(char *aaa)
{
unsigned int i;
for(i=0;aaa[i]!=0;i++)
 1ba:	89 91       	ld	r24, Y+
 1bc:	88 23       	and	r24, r24
 1be:	d9 f7       	brne	.-10     	; 0x1b6 <lcd_puts+0x8>
lcd_data(aaa[i]);

}
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	08 95       	ret

000001c6 <itoa1>:
void itoa1(uint16_t num)
{
 1c6:	cf 92       	push	r12
 1c8:	df 92       	push	r13
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	7c 01       	movw	r14, r24

 unsigned char a,b,c,d;

 a=num%10;
 num=num/10;
 1d4:	6a e0       	ldi	r22, 0x0A	; 10
 1d6:	70 e0       	ldi	r23, 0x00	; 0
 1d8:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 1dc:	d6 2e       	mov	r13, r22
 1de:	c7 2e       	mov	r12, r23
 b=num%10;
 num=num/10;
 1e0:	86 2f       	mov	r24, r22
 1e2:	97 2f       	mov	r25, r23
 1e4:	6a e0       	ldi	r22, 0x0A	; 10
 1e6:	70 e0       	ldi	r23, 0x00	; 0
 1e8:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 1ec:	16 2f       	mov	r17, r22
 1ee:	07 2f       	mov	r16, r23
 c=num%10;
 num=num/10;
 d=num%10;
 lcd_data(0x30+d); 
 1f0:	86 2f       	mov	r24, r22
 1f2:	97 2f       	mov	r25, r23
 1f4:	6a e0       	ldi	r22, 0x0A	; 10
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 1fc:	cb 01       	movw	r24, r22
 1fe:	6a e0       	ldi	r22, 0x0A	; 10
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 206:	80 5d       	subi	r24, 0xD0	; 208
 208:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_data>
 lcd_data(0x30+c); 
 20c:	81 2f       	mov	r24, r17
 20e:	90 2f       	mov	r25, r16
 210:	6a e0       	ldi	r22, 0x0A	; 10
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 218:	80 5d       	subi	r24, 0xD0	; 208
 21a:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_data>
 lcd_data(0x30+b); 
 21e:	8d 2d       	mov	r24, r13
 220:	9c 2d       	mov	r25, r12
 222:	6a e0       	ldi	r22, 0x0A	; 10
 224:	70 e0       	ldi	r23, 0x00	; 0
 226:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 22a:	80 5d       	subi	r24, 0xD0	; 208
 22c:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_data>
 lcd_data(0x30+a); 
 230:	c7 01       	movw	r24, r14
 232:	6a e0       	ldi	r22, 0x0A	; 10
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	0e 94 27 05 	call	0xa4e	; 0xa4e <__udivmodhi4>
 23a:	80 5d       	subi	r24, 0xD0	; 208
 23c:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_data>
 
 240:	1f 91       	pop	r17
 242:	0f 91       	pop	r16
 244:	ff 90       	pop	r15
 246:	ef 90       	pop	r14
 248:	df 90       	pop	r13
 24a:	cf 90       	pop	r12
 24c:	08 95       	ret

0000024e <ioinit>:
    return(0);
}
void ioinit (void)
{
    //1 = output, 0 = input
    DDRD = 0b11111110; //PORTD (RX on PD0)
 24e:	8e ef       	ldi	r24, 0xFE	; 254
 250:	81 bb       	out	0x11, r24	; 17

    //USART Baud rate: 9600
    UBRRH = MYUBRR >> 8;
 252:	10 bc       	out	0x20, r1	; 32
    UBRRL = MYUBRR;
 254:	87 e6       	ldi	r24, 0x67	; 103
 256:	89 b9       	out	0x09, r24	; 9
    
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(1<<UCSZ1)|(1<<UCSZ0);
 258:	86 e8       	ldi	r24, 0x86	; 134
 25a:	80 bd       	out	0x20, r24	; 32
/*
===================================================================
ENABLE TRANSMITTER AND RECEIVER	
===================================================================
*/
	UCSRB=(1<<RXEN)|(1<<TXEN); 
 25c:	88 e1       	ldi	r24, 0x18	; 24
 25e:	8a b9       	out	0x0a, r24	; 10
	
	stdout = &mystdout; //Required for printf init
 260:	85 e7       	ldi	r24, 0x75	; 117
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	90 93 b1 00 	sts	0x00B1, r25
 268:	80 93 b0 00 	sts	0x00B0, r24
}
 26c:	08 95       	ret

0000026e <uart_putchar>:

static int uart_putchar(char c, FILE *stream)
{
 26e:	1f 93       	push	r17
 270:	18 2f       	mov	r17, r24
    if (c == '\n') uart_putchar('\r', stream);
 272:	8a 30       	cpi	r24, 0x0A	; 10
 274:	19 f4       	brne	.+6      	; 0x27c <uart_putchar+0xe>
 276:	8d e0       	ldi	r24, 0x0D	; 13
 278:	0e 94 37 01 	call	0x26e	; 0x26e <uart_putchar>
  
    loop_until_bit_is_set(UCSRA, UDRE);
 27c:	5d 9b       	sbis	0x0b, 5	; 11
 27e:	fe cf       	rjmp	.-4      	; 0x27c <uart_putchar+0xe>
    UDR = c;
 280:	1c b9       	out	0x0c, r17	; 12
    
    return 0;
}
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	1f 91       	pop	r17
 288:	08 95       	ret

0000028a <uart_getchar>:

uint8_t uart_getchar(void)
{
    while( !(UCSRA & (1<<RXC)) );
 28a:	5f 9b       	sbis	0x0b, 7	; 11
 28c:	fe cf       	rjmp	.-4      	; 0x28a <uart_getchar>
    return(UDR);
 28e:	8c b1       	in	r24, 0x0c	; 12
}
 290:	08 95       	ret

00000292 <adc>:
unsigned char adc(unsigned char channel)
{  unsigned int val;
   unsigned char c;
   ADMUX=0x60+channel;
 292:	80 5a       	subi	r24, 0xA0	; 160
 294:	87 b9       	out	0x07, r24	; 7
   ADCSRA=(1<<ADEN);
 296:	80 e8       	ldi	r24, 0x80	; 128
 298:	86 b9       	out	0x06, r24	; 6
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	98 e0       	ldi	r25, 0x08	; 8
 2a0:	0a c0       	rjmp	.+20     	; 0x2b6 <adc+0x24>
   c=8;val=0;
   while(c--)
   {
   ADCSRA|=(1<<ADSC);
 2a2:	36 9a       	sbi	0x06, 6	; 6
    ADCSRA|=0x07;
 2a4:	86 b1       	in	r24, 0x06	; 6
 2a6:	87 60       	ori	r24, 0x07	; 7
 2a8:	86 b9       	out	0x06, r24	; 6
   while(bit_is_clear(ADCSRA,ADIF));
 2aa:	34 9b       	sbis	0x06, 4	; 6
 2ac:	fe cf       	rjmp	.-4      	; 0x2aa <adc+0x18>
   sbi(ADCSRA,ADIF);
 2ae:	34 9a       	sbi	0x06, 4	; 6
   val=val+ADCH; 
 2b0:	85 b1       	in	r24, 0x05	; 5
 2b2:	28 0f       	add	r18, r24
 2b4:	31 1d       	adc	r19, r1
{  unsigned int val;
   unsigned char c;
   ADMUX=0x60+channel;
   ADCSRA=(1<<ADEN);
   c=8;val=0;
   while(c--)
 2b6:	91 50       	subi	r25, 0x01	; 1
 2b8:	a0 f7       	brcc	.-24     	; 0x2a2 <adc+0x10>
    ADCSRA|=0x07;
   while(bit_is_clear(ADCSRA,ADIF));
   sbi(ADCSRA,ADIF);
   val=val+ADCH; 
   }
   val=val/8;
 2ba:	43 e0       	ldi	r20, 0x03	; 3
 2bc:	36 95       	lsr	r19
 2be:	27 95       	ror	r18
 2c0:	4a 95       	dec	r20
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <adc+0x2a>
   val=val&0x00ff;
   return val;
}
 2c4:	82 2f       	mov	r24, r18
 2c6:	08 95       	ret

000002c8 <Xread>:

void Xread()
{
 DDRA=0b11110101;
 2c8:	85 ef       	ldi	r24, 0xF5	; 245
 2ca:	8a bb       	out	0x1a, r24	; 26
 
 sbi(PORTA,0);
 2cc:	d8 9a       	sbi	0x1b, 0	; 27
 cbi(PORTA,2);
 2ce:	da 98       	cbi	0x1b, 2	; 27
 cpx=adc(1);
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	0e 94 49 01 	call	0x292	; 0x292 <adc>
 2d6:	80 93 9a 00 	sts	0x009A, r24
// lcd_cmd(0xc0);
// lcd_puts("X="); 
// itoa(cpx);
}
 2da:	08 95       	ret

000002dc <Yread>:
void Yread()
{
 DDRA=0b11111010;
 2dc:	8a ef       	ldi	r24, 0xFA	; 250
 2de:	8a bb       	out	0x1a, r24	; 26
 sbi(PORTA,1);
 2e0:	d9 9a       	sbi	0x1b, 1	; 27
 cbi(PORTA,3);
 2e2:	db 98       	cbi	0x1b, 3	; 27
 cpy=adc(0);
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	0e 94 49 01 	call	0x292	; 0x292 <adc>
 2ea:	80 93 9b 00 	sts	0x009B, r24
// lcd_cmd(0xc7);
// lcd_puts("Y="); 
// itoa(cpy);
}
 2ee:	08 95       	ret

000002f0 <calc>:

void calc(void)
{  char dtoo[5];
 2f0:	ef 92       	push	r14
 2f2:	ff 92       	push	r15
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	df 93       	push	r29
 2fa:	cf 93       	push	r28
 2fc:	00 d0       	rcall	.+0      	; 0x2fe <calc+0xe>
 2fe:	00 d0       	rcall	.+0      	; 0x300 <calc+0x10>
 300:	0f 92       	push	r0
 302:	cd b7       	in	r28, 0x3d	; 61
 304:	de b7       	in	r29, 0x3e	; 62
		Xread();
 306:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Xread>
		Yread();
 30a:	0e 94 6e 01 	call	0x2dc	; 0x2dc <Yread>
		x_buffer[i] = cpx;
 30e:	20 91 84 00 	lds	r18, 0x0084
 312:	30 91 85 00 	lds	r19, 0x0085
 316:	80 91 9a 00 	lds	r24, 0x009A
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	d9 01       	movw	r26, r18
 31e:	aa 0f       	add	r26, r26
 320:	bb 1f       	adc	r27, r27
 322:	fd 01       	movw	r30, r26
 324:	e0 56       	subi	r30, 0x60	; 96
 326:	ff 4f       	sbci	r31, 0xFF	; 255
 328:	91 83       	std	Z+1, r25	; 0x01
 32a:	80 83       	st	Z, r24
		y_buffer[i] = cpy;
 32c:	80 91 9b 00 	lds	r24, 0x009B
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	a2 57       	subi	r26, 0x72	; 114
 334:	bf 4f       	sbci	r27, 0xFF	; 255
 336:	11 96       	adiw	r26, 0x01	; 1
 338:	9c 93       	st	X, r25
 33a:	8e 93       	st	-X, r24
	  ++i;
 33c:	2f 5f       	subi	r18, 0xFF	; 255
 33e:	3f 4f       	sbci	r19, 0xFF	; 255
 340:	30 93 85 00 	sts	0x0085, r19
 344:	20 93 84 00 	sts	0x0084, r18
	 if(i>BUFFER+1)
 348:	27 30       	cpi	r18, 0x07	; 7
 34a:	31 05       	cpc	r19, r1
 34c:	04 f1       	brlt	.+64     	; 0x38e <calc+0x9e>
	 {
	  i=0;
 34e:	10 92 85 00 	sts	0x0085, r1
 352:	10 92 84 00 	sts	0x0084, r1
	  XDIFF= (x_buffer[0]-x_buffer[BUFFER-1]); 
 356:	80 91 a0 00 	lds	r24, 0x00A0
 35a:	90 91 a1 00 	lds	r25, 0x00A1
 35e:	20 91 a8 00 	lds	r18, 0x00A8
 362:	30 91 a9 00 	lds	r19, 0x00A9
 366:	82 1b       	sub	r24, r18
 368:	93 0b       	sbc	r25, r19
 36a:	90 93 ad 00 	sts	0x00AD, r25
 36e:	80 93 ac 00 	sts	0x00AC, r24
	  YDIFF= (y_buffer[0]-y_buffer[BUFFER-1]);
 372:	80 91 8e 00 	lds	r24, 0x008E
 376:	90 91 8f 00 	lds	r25, 0x008F
 37a:	20 91 96 00 	lds	r18, 0x0096
 37e:	30 91 97 00 	lds	r19, 0x0097
 382:	82 1b       	sub	r24, r18
 384:	93 0b       	sbc	r25, r19
 386:	90 93 87 00 	sts	0x0087, r25
 38a:	80 93 86 00 	sts	0x0086, r24
	 }
	 printf("%d",XDIFF);
 38e:	00 d0       	rcall	.+0      	; 0x390 <calc+0xa0>
 390:	00 d0       	rcall	.+0      	; 0x392 <calc+0xa2>
 392:	80 e6       	ldi	r24, 0x60	; 96
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	ad b7       	in	r26, 0x3d	; 61
 398:	be b7       	in	r27, 0x3e	; 62
 39a:	12 96       	adiw	r26, 0x02	; 2
 39c:	9c 93       	st	X, r25
 39e:	8e 93       	st	-X, r24
 3a0:	11 97       	sbiw	r26, 0x01	; 1
 3a2:	80 91 ac 00 	lds	r24, 0x00AC
 3a6:	90 91 ad 00 	lds	r25, 0x00AD
 3aa:	14 96       	adiw	r26, 0x04	; 4
 3ac:	9c 93       	st	X, r25
 3ae:	8e 93       	st	-X, r24
 3b0:	13 97       	sbiw	r26, 0x03	; 3
 3b2:	0e 94 71 02 	call	0x4e2	; 0x4e2 <printf>
	 printf(",%d\n",YDIFF);
 3b6:	83 e6       	ldi	r24, 0x63	; 99
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	ed b7       	in	r30, 0x3d	; 61
 3bc:	fe b7       	in	r31, 0x3e	; 62
 3be:	92 83       	std	Z+2, r25	; 0x02
 3c0:	81 83       	std	Z+1, r24	; 0x01
 3c2:	80 91 86 00 	lds	r24, 0x0086
 3c6:	90 91 87 00 	lds	r25, 0x0087
 3ca:	94 83       	std	Z+4, r25	; 0x04
 3cc:	83 83       	std	Z+3, r24	; 0x03
 3ce:	0e 94 71 02 	call	0x4e2	; 0x4e2 <printf>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 3d2:	84 ec       	ldi	r24, 0xC4	; 196
 3d4:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
 3d6:	80 ec       	ldi	r24, 0xC0	; 192
 3d8:	88 bb       	out	0x18, r24	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 3da:	84 e1       	ldi	r24, 0x14	; 20
 3dc:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 3de:	80 e1       	ldi	r24, 0x10	; 16
 3e0:	88 bb       	out	0x18, r24	; 24
 3e2:	80 e4       	ldi	r24, 0x40	; 64
 3e4:	9f e1       	ldi	r25, 0x1F	; 31
 3e6:	fc 01       	movw	r30, r24
 3e8:	31 97       	sbiw	r30, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <calc+0xf8>
	 lcd_cmd(0xc1);
	 sprintf(dtoo,"%5d",XDIFF);
 3ec:	01 97       	sbiw	r24, 0x01	; 1
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <calc+0xfc>
 3f0:	00 d0       	rcall	.+0      	; 0x3f2 <calc+0x102>
 3f2:	ed b7       	in	r30, 0x3d	; 61
 3f4:	fe b7       	in	r31, 0x3e	; 62
 3f6:	31 96       	adiw	r30, 0x01	; 1
 3f8:	8e 01       	movw	r16, r28
 3fa:	0f 5f       	subi	r16, 0xFF	; 255
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	ad b7       	in	r26, 0x3d	; 61
 400:	be b7       	in	r27, 0x3e	; 62
 402:	12 96       	adiw	r26, 0x02	; 2
 404:	1c 93       	st	X, r17
 406:	0e 93       	st	-X, r16
 408:	11 97       	sbiw	r26, 0x01	; 1
 40a:	58 e6       	ldi	r21, 0x68	; 104
 40c:	e5 2e       	mov	r14, r21
 40e:	50 e0       	ldi	r21, 0x00	; 0
 410:	f5 2e       	mov	r15, r21
 412:	f3 82       	std	Z+3, r15	; 0x03
 414:	e2 82       	std	Z+2, r14	; 0x02
 416:	80 91 ac 00 	lds	r24, 0x00AC
 41a:	90 91 ad 00 	lds	r25, 0x00AD
 41e:	95 83       	std	Z+5, r25	; 0x05
 420:	84 83       	std	Z+4, r24	; 0x04
 422:	0e 94 86 02 	call	0x50c	; 0x50c <sprintf>
	 lcd_puts(dtoo);
 426:	ed b7       	in	r30, 0x3d	; 61
 428:	fe b7       	in	r31, 0x3e	; 62
 42a:	36 96       	adiw	r30, 0x06	; 6
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	f8 94       	cli
 430:	fe bf       	out	0x3e, r31	; 62
 432:	0f be       	out	0x3f, r0	; 63
 434:	ed bf       	out	0x3d, r30	; 61
 436:	c8 01       	movw	r24, r16
 438:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
	 sprintf(dtoo,"%5d",YDIFF);
 43c:	00 d0       	rcall	.+0      	; 0x43e <calc+0x14e>
 43e:	00 d0       	rcall	.+0      	; 0x440 <calc+0x150>
 440:	00 d0       	rcall	.+0      	; 0x442 <calc+0x152>
 442:	ed b7       	in	r30, 0x3d	; 61
 444:	fe b7       	in	r31, 0x3e	; 62
 446:	31 96       	adiw	r30, 0x01	; 1
 448:	ad b7       	in	r26, 0x3d	; 61
 44a:	be b7       	in	r27, 0x3e	; 62
 44c:	12 96       	adiw	r26, 0x02	; 2
 44e:	1c 93       	st	X, r17
 450:	0e 93       	st	-X, r16
 452:	11 97       	sbiw	r26, 0x01	; 1
 454:	f3 82       	std	Z+3, r15	; 0x03
 456:	e2 82       	std	Z+2, r14	; 0x02
 458:	80 91 86 00 	lds	r24, 0x0086
 45c:	90 91 87 00 	lds	r25, 0x0087
 460:	95 83       	std	Z+5, r25	; 0x05
 462:	84 83       	std	Z+4, r24	; 0x04
 464:	0e 94 86 02 	call	0x50c	; 0x50c <sprintf>
	 lcd_puts(dtoo);
 468:	ed b7       	in	r30, 0x3d	; 61
 46a:	fe b7       	in	r31, 0x3e	; 62
 46c:	36 96       	adiw	r30, 0x06	; 6
 46e:	0f b6       	in	r0, 0x3f	; 63
 470:	f8 94       	cli
 472:	fe bf       	out	0x3e, r31	; 62
 474:	0f be       	out	0x3f, r0	; 63
 476:	ed bf       	out	0x3d, r30	; 61
 478:	c8 01       	movw	r24, r16
 47a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     

	
		
		
	}
 47e:	0f 90       	pop	r0
 480:	0f 90       	pop	r0
 482:	0f 90       	pop	r0
 484:	0f 90       	pop	r0
 486:	0f 90       	pop	r0
 488:	cf 91       	pop	r28
 48a:	df 91       	pop	r29
 48c:	1f 91       	pop	r17
 48e:	0f 91       	pop	r16
 490:	ff 90       	pop	r15
 492:	ef 90       	pop	r14
 494:	08 95       	ret

00000496 <main>:

int main (void)

{

  lcd_init();//initialise the lcd
 496:	0e 94 88 00 	call	0x110	; 0x110 <lcd_init>
        lcd_port = 0x20;
        _delay_ms(1);
}
void lcd_cmd (char cmd)
{
        lcd_port = (cmd & 0xF0)|LCD_EN;
 49a:	84 e0       	ldi	r24, 0x04	; 4
 49c:	88 bb       	out	0x18, r24	; 24
        lcd_port = (cmd & 0xF0);
 49e:	18 ba       	out	0x18, r1	; 24
		
        lcd_port = ((cmd << 4) & 0xF0)|LCD_EN;
 4a0:	84 e1       	ldi	r24, 0x14	; 20
 4a2:	88 bb       	out	0x18, r24	; 24
        lcd_port = ((cmd << 4) & 0xF0);
 4a4:	80 e1       	ldi	r24, 0x10	; 16
 4a6:	88 bb       	out	0x18, r24	; 24
 4a8:	80 e4       	ldi	r24, 0x40	; 64
 4aa:	9f e1       	ldi	r25, 0x1F	; 31
 4ac:	fc 01       	movw	r30, r24
 4ae:	31 97       	sbiw	r30, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <main+0x18>
    return(0);
}
void ioinit (void)
{
    //1 = output, 0 = input
    DDRD = 0b11111110; //PORTD (RX on PD0)
 4b2:	01 97       	sbiw	r24, 0x01	; 1
 4b4:	f1 f7       	brne	.-4      	; 0x4b2 <main+0x1c>
 4b6:	8e ef       	ldi	r24, 0xFE	; 254
 4b8:	81 bb       	out	0x11, r24	; 17

    //USART Baud rate: 9600
    UBRRH = MYUBRR >> 8;
 4ba:	10 bc       	out	0x20, r1	; 32
    UBRRL = MYUBRR;
 4bc:	87 e6       	ldi	r24, 0x67	; 103
 4be:	89 b9       	out	0x09, r24	; 9
    
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(1<<UCSZ1)|(1<<UCSZ0);
 4c0:	86 e8       	ldi	r24, 0x86	; 134
 4c2:	80 bd       	out	0x20, r24	; 32
/*
===================================================================
ENABLE TRANSMITTER AND RECEIVER	
===================================================================
*/
	UCSRB=(1<<RXEN)|(1<<TXEN); 
 4c4:	88 e1       	ldi	r24, 0x18	; 24
 4c6:	8a b9       	out	0x0a, r24	; 10
	
	stdout = &mystdout; //Required for printf init
 4c8:	85 e7       	ldi	r24, 0x75	; 117
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	90 93 b1 00 	sts	0x00B1, r25
 4d0:	80 93 b0 00 	sts	0x00B0, r24
{

  lcd_init();//initialise the lcd
  lcd_cmd(0x01);//clear screen
  ioinit();
  lcd_puts("Touchpad");
 4d4:	8c e6       	ldi	r24, 0x6C	; 108
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
    
   
	while(1)
    {	
	
	calc();
 4dc:	0e 94 78 01 	call	0x2f0	; 0x2f0 <calc>
 4e0:	fd cf       	rjmp	.-6      	; 0x4dc <main+0x46>

000004e2 <printf>:
 4e2:	a0 e0       	ldi	r26, 0x00	; 0
 4e4:	b0 e0       	ldi	r27, 0x00	; 0
 4e6:	e7 e7       	ldi	r30, 0x77	; 119
 4e8:	f2 e0       	ldi	r31, 0x02	; 2
 4ea:	0c 94 4b 05 	jmp	0xa96	; 0xa96 <__prologue_saves__+0x20>
 4ee:	fe 01       	movw	r30, r28
 4f0:	35 96       	adiw	r30, 0x05	; 5
 4f2:	61 91       	ld	r22, Z+
 4f4:	71 91       	ld	r23, Z+
 4f6:	80 91 b0 00 	lds	r24, 0x00B0
 4fa:	90 91 b1 00 	lds	r25, 0x00B1
 4fe:	af 01       	movw	r20, r30
 500:	0e 94 aa 02 	call	0x554	; 0x554 <vfprintf>
 504:	20 96       	adiw	r28, 0x00	; 0
 506:	e2 e0       	ldi	r30, 0x02	; 2
 508:	0c 94 67 05 	jmp	0xace	; 0xace <__epilogue_restores__+0x20>

0000050c <sprintf>:
 50c:	ae e0       	ldi	r26, 0x0E	; 14
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	ec e8       	ldi	r30, 0x8C	; 140
 512:	f2 e0       	ldi	r31, 0x02	; 2
 514:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__prologue_saves__+0x1c>
 518:	0d 89       	ldd	r16, Y+21	; 0x15
 51a:	1e 89       	ldd	r17, Y+22	; 0x16
 51c:	86 e0       	ldi	r24, 0x06	; 6
 51e:	8c 83       	std	Y+4, r24	; 0x04
 520:	1a 83       	std	Y+2, r17	; 0x02
 522:	09 83       	std	Y+1, r16	; 0x01
 524:	8f ef       	ldi	r24, 0xFF	; 255
 526:	9f e7       	ldi	r25, 0x7F	; 127
 528:	9e 83       	std	Y+6, r25	; 0x06
 52a:	8d 83       	std	Y+5, r24	; 0x05
 52c:	9e 01       	movw	r18, r28
 52e:	27 5e       	subi	r18, 0xE7	; 231
 530:	3f 4f       	sbci	r19, 0xFF	; 255
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	6f 89       	ldd	r22, Y+23	; 0x17
 538:	78 8d       	ldd	r23, Y+24	; 0x18
 53a:	a9 01       	movw	r20, r18
 53c:	0e 94 aa 02 	call	0x554	; 0x554 <vfprintf>
 540:	2f 81       	ldd	r18, Y+7	; 0x07
 542:	38 85       	ldd	r19, Y+8	; 0x08
 544:	02 0f       	add	r16, r18
 546:	13 1f       	adc	r17, r19
 548:	f8 01       	movw	r30, r16
 54a:	10 82       	st	Z, r1
 54c:	2e 96       	adiw	r28, 0x0e	; 14
 54e:	e4 e0       	ldi	r30, 0x04	; 4
 550:	0c 94 65 05 	jmp	0xaca	; 0xaca <__epilogue_restores__+0x1c>

00000554 <vfprintf>:
 554:	ab e0       	ldi	r26, 0x0B	; 11
 556:	b0 e0       	ldi	r27, 0x00	; 0
 558:	e0 eb       	ldi	r30, 0xB0	; 176
 55a:	f2 e0       	ldi	r31, 0x02	; 2
 55c:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__prologue_saves__>
 560:	3c 01       	movw	r6, r24
 562:	2b 01       	movw	r4, r22
 564:	5a 01       	movw	r10, r20
 566:	fc 01       	movw	r30, r24
 568:	17 82       	std	Z+7, r1	; 0x07
 56a:	16 82       	std	Z+6, r1	; 0x06
 56c:	83 81       	ldd	r24, Z+3	; 0x03
 56e:	81 fd       	sbrc	r24, 1
 570:	03 c0       	rjmp	.+6      	; 0x578 <vfprintf+0x24>
 572:	6f ef       	ldi	r22, 0xFF	; 255
 574:	7f ef       	ldi	r23, 0xFF	; 255
 576:	c6 c1       	rjmp	.+908    	; 0x904 <vfprintf+0x3b0>
 578:	9a e0       	ldi	r25, 0x0A	; 10
 57a:	89 2e       	mov	r8, r25
 57c:	1e 01       	movw	r2, r28
 57e:	08 94       	sec
 580:	21 1c       	adc	r2, r1
 582:	31 1c       	adc	r3, r1
 584:	f3 01       	movw	r30, r6
 586:	23 81       	ldd	r18, Z+3	; 0x03
 588:	f2 01       	movw	r30, r4
 58a:	23 fd       	sbrc	r18, 3
 58c:	85 91       	lpm	r24, Z+
 58e:	23 ff       	sbrs	r18, 3
 590:	81 91       	ld	r24, Z+
 592:	2f 01       	movw	r4, r30
 594:	88 23       	and	r24, r24
 596:	09 f4       	brne	.+2      	; 0x59a <vfprintf+0x46>
 598:	b2 c1       	rjmp	.+868    	; 0x8fe <vfprintf+0x3aa>
 59a:	85 32       	cpi	r24, 0x25	; 37
 59c:	39 f4       	brne	.+14     	; 0x5ac <vfprintf+0x58>
 59e:	23 fd       	sbrc	r18, 3
 5a0:	85 91       	lpm	r24, Z+
 5a2:	23 ff       	sbrs	r18, 3
 5a4:	81 91       	ld	r24, Z+
 5a6:	2f 01       	movw	r4, r30
 5a8:	85 32       	cpi	r24, 0x25	; 37
 5aa:	29 f4       	brne	.+10     	; 0x5b6 <vfprintf+0x62>
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	b3 01       	movw	r22, r6
 5b0:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 5b4:	e7 cf       	rjmp	.-50     	; 0x584 <vfprintf+0x30>
 5b6:	98 2f       	mov	r25, r24
 5b8:	ff 24       	eor	r15, r15
 5ba:	ee 24       	eor	r14, r14
 5bc:	99 24       	eor	r9, r9
 5be:	ff e1       	ldi	r31, 0x1F	; 31
 5c0:	ff 15       	cp	r31, r15
 5c2:	d0 f0       	brcs	.+52     	; 0x5f8 <vfprintf+0xa4>
 5c4:	9b 32       	cpi	r25, 0x2B	; 43
 5c6:	69 f0       	breq	.+26     	; 0x5e2 <vfprintf+0x8e>
 5c8:	9c 32       	cpi	r25, 0x2C	; 44
 5ca:	28 f4       	brcc	.+10     	; 0x5d6 <vfprintf+0x82>
 5cc:	90 32       	cpi	r25, 0x20	; 32
 5ce:	59 f0       	breq	.+22     	; 0x5e6 <vfprintf+0x92>
 5d0:	93 32       	cpi	r25, 0x23	; 35
 5d2:	91 f4       	brne	.+36     	; 0x5f8 <vfprintf+0xa4>
 5d4:	0e c0       	rjmp	.+28     	; 0x5f2 <vfprintf+0x9e>
 5d6:	9d 32       	cpi	r25, 0x2D	; 45
 5d8:	49 f0       	breq	.+18     	; 0x5ec <vfprintf+0x98>
 5da:	90 33       	cpi	r25, 0x30	; 48
 5dc:	69 f4       	brne	.+26     	; 0x5f8 <vfprintf+0xa4>
 5de:	41 e0       	ldi	r20, 0x01	; 1
 5e0:	24 c0       	rjmp	.+72     	; 0x62a <vfprintf+0xd6>
 5e2:	52 e0       	ldi	r21, 0x02	; 2
 5e4:	f5 2a       	or	r15, r21
 5e6:	84 e0       	ldi	r24, 0x04	; 4
 5e8:	f8 2a       	or	r15, r24
 5ea:	28 c0       	rjmp	.+80     	; 0x63c <vfprintf+0xe8>
 5ec:	98 e0       	ldi	r25, 0x08	; 8
 5ee:	f9 2a       	or	r15, r25
 5f0:	25 c0       	rjmp	.+74     	; 0x63c <vfprintf+0xe8>
 5f2:	e0 e1       	ldi	r30, 0x10	; 16
 5f4:	fe 2a       	or	r15, r30
 5f6:	22 c0       	rjmp	.+68     	; 0x63c <vfprintf+0xe8>
 5f8:	f7 fc       	sbrc	r15, 7
 5fa:	29 c0       	rjmp	.+82     	; 0x64e <vfprintf+0xfa>
 5fc:	89 2f       	mov	r24, r25
 5fe:	80 53       	subi	r24, 0x30	; 48
 600:	8a 30       	cpi	r24, 0x0A	; 10
 602:	70 f4       	brcc	.+28     	; 0x620 <vfprintf+0xcc>
 604:	f6 fe       	sbrs	r15, 6
 606:	05 c0       	rjmp	.+10     	; 0x612 <vfprintf+0xbe>
 608:	98 9c       	mul	r9, r8
 60a:	90 2c       	mov	r9, r0
 60c:	11 24       	eor	r1, r1
 60e:	98 0e       	add	r9, r24
 610:	15 c0       	rjmp	.+42     	; 0x63c <vfprintf+0xe8>
 612:	e8 9c       	mul	r14, r8
 614:	e0 2c       	mov	r14, r0
 616:	11 24       	eor	r1, r1
 618:	e8 0e       	add	r14, r24
 61a:	f0 e2       	ldi	r31, 0x20	; 32
 61c:	ff 2a       	or	r15, r31
 61e:	0e c0       	rjmp	.+28     	; 0x63c <vfprintf+0xe8>
 620:	9e 32       	cpi	r25, 0x2E	; 46
 622:	29 f4       	brne	.+10     	; 0x62e <vfprintf+0xda>
 624:	f6 fc       	sbrc	r15, 6
 626:	6b c1       	rjmp	.+726    	; 0x8fe <vfprintf+0x3aa>
 628:	40 e4       	ldi	r20, 0x40	; 64
 62a:	f4 2a       	or	r15, r20
 62c:	07 c0       	rjmp	.+14     	; 0x63c <vfprintf+0xe8>
 62e:	9c 36       	cpi	r25, 0x6C	; 108
 630:	19 f4       	brne	.+6      	; 0x638 <vfprintf+0xe4>
 632:	50 e8       	ldi	r21, 0x80	; 128
 634:	f5 2a       	or	r15, r21
 636:	02 c0       	rjmp	.+4      	; 0x63c <vfprintf+0xe8>
 638:	98 36       	cpi	r25, 0x68	; 104
 63a:	49 f4       	brne	.+18     	; 0x64e <vfprintf+0xfa>
 63c:	f2 01       	movw	r30, r4
 63e:	23 fd       	sbrc	r18, 3
 640:	95 91       	lpm	r25, Z+
 642:	23 ff       	sbrs	r18, 3
 644:	91 91       	ld	r25, Z+
 646:	2f 01       	movw	r4, r30
 648:	99 23       	and	r25, r25
 64a:	09 f0       	breq	.+2      	; 0x64e <vfprintf+0xfa>
 64c:	b8 cf       	rjmp	.-144    	; 0x5be <vfprintf+0x6a>
 64e:	89 2f       	mov	r24, r25
 650:	85 54       	subi	r24, 0x45	; 69
 652:	83 30       	cpi	r24, 0x03	; 3
 654:	18 f0       	brcs	.+6      	; 0x65c <vfprintf+0x108>
 656:	80 52       	subi	r24, 0x20	; 32
 658:	83 30       	cpi	r24, 0x03	; 3
 65a:	38 f4       	brcc	.+14     	; 0x66a <vfprintf+0x116>
 65c:	44 e0       	ldi	r20, 0x04	; 4
 65e:	50 e0       	ldi	r21, 0x00	; 0
 660:	a4 0e       	add	r10, r20
 662:	b5 1e       	adc	r11, r21
 664:	5f e3       	ldi	r21, 0x3F	; 63
 666:	59 83       	std	Y+1, r21	; 0x01
 668:	0f c0       	rjmp	.+30     	; 0x688 <vfprintf+0x134>
 66a:	93 36       	cpi	r25, 0x63	; 99
 66c:	31 f0       	breq	.+12     	; 0x67a <vfprintf+0x126>
 66e:	93 37       	cpi	r25, 0x73	; 115
 670:	79 f0       	breq	.+30     	; 0x690 <vfprintf+0x13c>
 672:	93 35       	cpi	r25, 0x53	; 83
 674:	09 f0       	breq	.+2      	; 0x678 <vfprintf+0x124>
 676:	56 c0       	rjmp	.+172    	; 0x724 <vfprintf+0x1d0>
 678:	20 c0       	rjmp	.+64     	; 0x6ba <vfprintf+0x166>
 67a:	f5 01       	movw	r30, r10
 67c:	80 81       	ld	r24, Z
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	42 e0       	ldi	r20, 0x02	; 2
 682:	50 e0       	ldi	r21, 0x00	; 0
 684:	a4 0e       	add	r10, r20
 686:	b5 1e       	adc	r11, r21
 688:	61 01       	movw	r12, r2
 68a:	01 e0       	ldi	r16, 0x01	; 1
 68c:	10 e0       	ldi	r17, 0x00	; 0
 68e:	12 c0       	rjmp	.+36     	; 0x6b4 <vfprintf+0x160>
 690:	f5 01       	movw	r30, r10
 692:	c0 80       	ld	r12, Z
 694:	d1 80       	ldd	r13, Z+1	; 0x01
 696:	f6 fc       	sbrc	r15, 6
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <vfprintf+0x14c>
 69a:	6f ef       	ldi	r22, 0xFF	; 255
 69c:	7f ef       	ldi	r23, 0xFF	; 255
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0x150>
 6a0:	69 2d       	mov	r22, r9
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	42 e0       	ldi	r20, 0x02	; 2
 6a6:	50 e0       	ldi	r21, 0x00	; 0
 6a8:	a4 0e       	add	r10, r20
 6aa:	b5 1e       	adc	r11, r21
 6ac:	c6 01       	movw	r24, r12
 6ae:	0e 94 92 04 	call	0x924	; 0x924 <strnlen>
 6b2:	8c 01       	movw	r16, r24
 6b4:	5f e7       	ldi	r21, 0x7F	; 127
 6b6:	f5 22       	and	r15, r21
 6b8:	14 c0       	rjmp	.+40     	; 0x6e2 <vfprintf+0x18e>
 6ba:	f5 01       	movw	r30, r10
 6bc:	c0 80       	ld	r12, Z
 6be:	d1 80       	ldd	r13, Z+1	; 0x01
 6c0:	f6 fc       	sbrc	r15, 6
 6c2:	03 c0       	rjmp	.+6      	; 0x6ca <vfprintf+0x176>
 6c4:	6f ef       	ldi	r22, 0xFF	; 255
 6c6:	7f ef       	ldi	r23, 0xFF	; 255
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <vfprintf+0x17a>
 6ca:	69 2d       	mov	r22, r9
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	42 e0       	ldi	r20, 0x02	; 2
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	a4 0e       	add	r10, r20
 6d4:	b5 1e       	adc	r11, r21
 6d6:	c6 01       	movw	r24, r12
 6d8:	0e 94 87 04 	call	0x90e	; 0x90e <strnlen_P>
 6dc:	8c 01       	movw	r16, r24
 6de:	50 e8       	ldi	r21, 0x80	; 128
 6e0:	f5 2a       	or	r15, r21
 6e2:	f3 fe       	sbrs	r15, 3
 6e4:	07 c0       	rjmp	.+14     	; 0x6f4 <vfprintf+0x1a0>
 6e6:	1a c0       	rjmp	.+52     	; 0x71c <vfprintf+0x1c8>
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	b3 01       	movw	r22, r6
 6ee:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 6f2:	ea 94       	dec	r14
 6f4:	8e 2d       	mov	r24, r14
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	08 17       	cp	r16, r24
 6fa:	19 07       	cpc	r17, r25
 6fc:	a8 f3       	brcs	.-22     	; 0x6e8 <vfprintf+0x194>
 6fe:	0e c0       	rjmp	.+28     	; 0x71c <vfprintf+0x1c8>
 700:	f6 01       	movw	r30, r12
 702:	f7 fc       	sbrc	r15, 7
 704:	85 91       	lpm	r24, Z+
 706:	f7 fe       	sbrs	r15, 7
 708:	81 91       	ld	r24, Z+
 70a:	6f 01       	movw	r12, r30
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	b3 01       	movw	r22, r6
 710:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 714:	e1 10       	cpse	r14, r1
 716:	ea 94       	dec	r14
 718:	01 50       	subi	r16, 0x01	; 1
 71a:	10 40       	sbci	r17, 0x00	; 0
 71c:	01 15       	cp	r16, r1
 71e:	11 05       	cpc	r17, r1
 720:	79 f7       	brne	.-34     	; 0x700 <vfprintf+0x1ac>
 722:	ea c0       	rjmp	.+468    	; 0x8f8 <vfprintf+0x3a4>
 724:	94 36       	cpi	r25, 0x64	; 100
 726:	11 f0       	breq	.+4      	; 0x72c <vfprintf+0x1d8>
 728:	99 36       	cpi	r25, 0x69	; 105
 72a:	69 f5       	brne	.+90     	; 0x786 <vfprintf+0x232>
 72c:	f7 fe       	sbrs	r15, 7
 72e:	08 c0       	rjmp	.+16     	; 0x740 <vfprintf+0x1ec>
 730:	f5 01       	movw	r30, r10
 732:	20 81       	ld	r18, Z
 734:	31 81       	ldd	r19, Z+1	; 0x01
 736:	42 81       	ldd	r20, Z+2	; 0x02
 738:	53 81       	ldd	r21, Z+3	; 0x03
 73a:	84 e0       	ldi	r24, 0x04	; 4
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0a c0       	rjmp	.+20     	; 0x754 <vfprintf+0x200>
 740:	f5 01       	movw	r30, r10
 742:	80 81       	ld	r24, Z
 744:	91 81       	ldd	r25, Z+1	; 0x01
 746:	9c 01       	movw	r18, r24
 748:	44 27       	eor	r20, r20
 74a:	37 fd       	sbrc	r19, 7
 74c:	40 95       	com	r20
 74e:	54 2f       	mov	r21, r20
 750:	82 e0       	ldi	r24, 0x02	; 2
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	a8 0e       	add	r10, r24
 756:	b9 1e       	adc	r11, r25
 758:	9f e6       	ldi	r25, 0x6F	; 111
 75a:	f9 22       	and	r15, r25
 75c:	57 ff       	sbrs	r21, 7
 75e:	09 c0       	rjmp	.+18     	; 0x772 <vfprintf+0x21e>
 760:	50 95       	com	r21
 762:	40 95       	com	r20
 764:	30 95       	com	r19
 766:	21 95       	neg	r18
 768:	3f 4f       	sbci	r19, 0xFF	; 255
 76a:	4f 4f       	sbci	r20, 0xFF	; 255
 76c:	5f 4f       	sbci	r21, 0xFF	; 255
 76e:	e0 e8       	ldi	r30, 0x80	; 128
 770:	fe 2a       	or	r15, r30
 772:	ca 01       	movw	r24, r20
 774:	b9 01       	movw	r22, r18
 776:	a1 01       	movw	r20, r2
 778:	2a e0       	ldi	r18, 0x0A	; 10
 77a:	30 e0       	ldi	r19, 0x00	; 0
 77c:	0e 94 c9 04 	call	0x992	; 0x992 <__ultoa_invert>
 780:	d8 2e       	mov	r13, r24
 782:	d2 18       	sub	r13, r2
 784:	40 c0       	rjmp	.+128    	; 0x806 <vfprintf+0x2b2>
 786:	95 37       	cpi	r25, 0x75	; 117
 788:	29 f4       	brne	.+10     	; 0x794 <vfprintf+0x240>
 78a:	1f 2d       	mov	r17, r15
 78c:	1f 7e       	andi	r17, 0xEF	; 239
 78e:	2a e0       	ldi	r18, 0x0A	; 10
 790:	30 e0       	ldi	r19, 0x00	; 0
 792:	1d c0       	rjmp	.+58     	; 0x7ce <vfprintf+0x27a>
 794:	1f 2d       	mov	r17, r15
 796:	19 7f       	andi	r17, 0xF9	; 249
 798:	9f 36       	cpi	r25, 0x6F	; 111
 79a:	61 f0       	breq	.+24     	; 0x7b4 <vfprintf+0x260>
 79c:	90 37       	cpi	r25, 0x70	; 112
 79e:	20 f4       	brcc	.+8      	; 0x7a8 <vfprintf+0x254>
 7a0:	98 35       	cpi	r25, 0x58	; 88
 7a2:	09 f0       	breq	.+2      	; 0x7a6 <vfprintf+0x252>
 7a4:	ac c0       	rjmp	.+344    	; 0x8fe <vfprintf+0x3aa>
 7a6:	0f c0       	rjmp	.+30     	; 0x7c6 <vfprintf+0x272>
 7a8:	90 37       	cpi	r25, 0x70	; 112
 7aa:	39 f0       	breq	.+14     	; 0x7ba <vfprintf+0x266>
 7ac:	98 37       	cpi	r25, 0x78	; 120
 7ae:	09 f0       	breq	.+2      	; 0x7b2 <vfprintf+0x25e>
 7b0:	a6 c0       	rjmp	.+332    	; 0x8fe <vfprintf+0x3aa>
 7b2:	04 c0       	rjmp	.+8      	; 0x7bc <vfprintf+0x268>
 7b4:	28 e0       	ldi	r18, 0x08	; 8
 7b6:	30 e0       	ldi	r19, 0x00	; 0
 7b8:	0a c0       	rjmp	.+20     	; 0x7ce <vfprintf+0x27a>
 7ba:	10 61       	ori	r17, 0x10	; 16
 7bc:	14 fd       	sbrc	r17, 4
 7be:	14 60       	ori	r17, 0x04	; 4
 7c0:	20 e1       	ldi	r18, 0x10	; 16
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	04 c0       	rjmp	.+8      	; 0x7ce <vfprintf+0x27a>
 7c6:	14 fd       	sbrc	r17, 4
 7c8:	16 60       	ori	r17, 0x06	; 6
 7ca:	20 e1       	ldi	r18, 0x10	; 16
 7cc:	32 e0       	ldi	r19, 0x02	; 2
 7ce:	17 ff       	sbrs	r17, 7
 7d0:	08 c0       	rjmp	.+16     	; 0x7e2 <vfprintf+0x28e>
 7d2:	f5 01       	movw	r30, r10
 7d4:	60 81       	ld	r22, Z
 7d6:	71 81       	ldd	r23, Z+1	; 0x01
 7d8:	82 81       	ldd	r24, Z+2	; 0x02
 7da:	93 81       	ldd	r25, Z+3	; 0x03
 7dc:	44 e0       	ldi	r20, 0x04	; 4
 7de:	50 e0       	ldi	r21, 0x00	; 0
 7e0:	08 c0       	rjmp	.+16     	; 0x7f2 <vfprintf+0x29e>
 7e2:	f5 01       	movw	r30, r10
 7e4:	80 81       	ld	r24, Z
 7e6:	91 81       	ldd	r25, Z+1	; 0x01
 7e8:	bc 01       	movw	r22, r24
 7ea:	80 e0       	ldi	r24, 0x00	; 0
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	42 e0       	ldi	r20, 0x02	; 2
 7f0:	50 e0       	ldi	r21, 0x00	; 0
 7f2:	a4 0e       	add	r10, r20
 7f4:	b5 1e       	adc	r11, r21
 7f6:	a1 01       	movw	r20, r2
 7f8:	0e 94 c9 04 	call	0x992	; 0x992 <__ultoa_invert>
 7fc:	d8 2e       	mov	r13, r24
 7fe:	d2 18       	sub	r13, r2
 800:	8f e7       	ldi	r24, 0x7F	; 127
 802:	f8 2e       	mov	r15, r24
 804:	f1 22       	and	r15, r17
 806:	f6 fe       	sbrs	r15, 6
 808:	0b c0       	rjmp	.+22     	; 0x820 <vfprintf+0x2cc>
 80a:	5e ef       	ldi	r21, 0xFE	; 254
 80c:	f5 22       	and	r15, r21
 80e:	d9 14       	cp	r13, r9
 810:	38 f4       	brcc	.+14     	; 0x820 <vfprintf+0x2cc>
 812:	f4 fe       	sbrs	r15, 4
 814:	07 c0       	rjmp	.+14     	; 0x824 <vfprintf+0x2d0>
 816:	f2 fc       	sbrc	r15, 2
 818:	05 c0       	rjmp	.+10     	; 0x824 <vfprintf+0x2d0>
 81a:	8f ee       	ldi	r24, 0xEF	; 239
 81c:	f8 22       	and	r15, r24
 81e:	02 c0       	rjmp	.+4      	; 0x824 <vfprintf+0x2d0>
 820:	1d 2d       	mov	r17, r13
 822:	01 c0       	rjmp	.+2      	; 0x826 <vfprintf+0x2d2>
 824:	19 2d       	mov	r17, r9
 826:	f4 fe       	sbrs	r15, 4
 828:	0d c0       	rjmp	.+26     	; 0x844 <vfprintf+0x2f0>
 82a:	fe 01       	movw	r30, r28
 82c:	ed 0d       	add	r30, r13
 82e:	f1 1d       	adc	r31, r1
 830:	80 81       	ld	r24, Z
 832:	80 33       	cpi	r24, 0x30	; 48
 834:	19 f4       	brne	.+6      	; 0x83c <vfprintf+0x2e8>
 836:	99 ee       	ldi	r25, 0xE9	; 233
 838:	f9 22       	and	r15, r25
 83a:	08 c0       	rjmp	.+16     	; 0x84c <vfprintf+0x2f8>
 83c:	1f 5f       	subi	r17, 0xFF	; 255
 83e:	f2 fe       	sbrs	r15, 2
 840:	05 c0       	rjmp	.+10     	; 0x84c <vfprintf+0x2f8>
 842:	03 c0       	rjmp	.+6      	; 0x84a <vfprintf+0x2f6>
 844:	8f 2d       	mov	r24, r15
 846:	86 78       	andi	r24, 0x86	; 134
 848:	09 f0       	breq	.+2      	; 0x84c <vfprintf+0x2f8>
 84a:	1f 5f       	subi	r17, 0xFF	; 255
 84c:	0f 2d       	mov	r16, r15
 84e:	f3 fc       	sbrc	r15, 3
 850:	14 c0       	rjmp	.+40     	; 0x87a <vfprintf+0x326>
 852:	f0 fe       	sbrs	r15, 0
 854:	0f c0       	rjmp	.+30     	; 0x874 <vfprintf+0x320>
 856:	1e 15       	cp	r17, r14
 858:	10 f0       	brcs	.+4      	; 0x85e <vfprintf+0x30a>
 85a:	9d 2c       	mov	r9, r13
 85c:	0b c0       	rjmp	.+22     	; 0x874 <vfprintf+0x320>
 85e:	9d 2c       	mov	r9, r13
 860:	9e 0c       	add	r9, r14
 862:	91 1a       	sub	r9, r17
 864:	1e 2d       	mov	r17, r14
 866:	06 c0       	rjmp	.+12     	; 0x874 <vfprintf+0x320>
 868:	80 e2       	ldi	r24, 0x20	; 32
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	b3 01       	movw	r22, r6
 86e:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 872:	1f 5f       	subi	r17, 0xFF	; 255
 874:	1e 15       	cp	r17, r14
 876:	c0 f3       	brcs	.-16     	; 0x868 <vfprintf+0x314>
 878:	04 c0       	rjmp	.+8      	; 0x882 <vfprintf+0x32e>
 87a:	1e 15       	cp	r17, r14
 87c:	10 f4       	brcc	.+4      	; 0x882 <vfprintf+0x32e>
 87e:	e1 1a       	sub	r14, r17
 880:	01 c0       	rjmp	.+2      	; 0x884 <vfprintf+0x330>
 882:	ee 24       	eor	r14, r14
 884:	04 ff       	sbrs	r16, 4
 886:	0f c0       	rjmp	.+30     	; 0x8a6 <vfprintf+0x352>
 888:	80 e3       	ldi	r24, 0x30	; 48
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	b3 01       	movw	r22, r6
 88e:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 892:	02 ff       	sbrs	r16, 2
 894:	1d c0       	rjmp	.+58     	; 0x8d0 <vfprintf+0x37c>
 896:	01 fd       	sbrc	r16, 1
 898:	03 c0       	rjmp	.+6      	; 0x8a0 <vfprintf+0x34c>
 89a:	88 e7       	ldi	r24, 0x78	; 120
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e c0       	rjmp	.+28     	; 0x8bc <vfprintf+0x368>
 8a0:	88 e5       	ldi	r24, 0x58	; 88
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0b c0       	rjmp	.+22     	; 0x8bc <vfprintf+0x368>
 8a6:	80 2f       	mov	r24, r16
 8a8:	86 78       	andi	r24, 0x86	; 134
 8aa:	91 f0       	breq	.+36     	; 0x8d0 <vfprintf+0x37c>
 8ac:	01 ff       	sbrs	r16, 1
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <vfprintf+0x360>
 8b0:	8b e2       	ldi	r24, 0x2B	; 43
 8b2:	01 c0       	rjmp	.+2      	; 0x8b6 <vfprintf+0x362>
 8b4:	80 e2       	ldi	r24, 0x20	; 32
 8b6:	f7 fc       	sbrc	r15, 7
 8b8:	8d e2       	ldi	r24, 0x2D	; 45
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	b3 01       	movw	r22, r6
 8be:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <vfprintf+0x37c>
 8c4:	80 e3       	ldi	r24, 0x30	; 48
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	b3 01       	movw	r22, r6
 8ca:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 8ce:	9a 94       	dec	r9
 8d0:	d9 14       	cp	r13, r9
 8d2:	c0 f3       	brcs	.-16     	; 0x8c4 <vfprintf+0x370>
 8d4:	da 94       	dec	r13
 8d6:	f1 01       	movw	r30, r2
 8d8:	ed 0d       	add	r30, r13
 8da:	f1 1d       	adc	r31, r1
 8dc:	80 81       	ld	r24, Z
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	b3 01       	movw	r22, r6
 8e2:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 8e6:	dd 20       	and	r13, r13
 8e8:	a9 f7       	brne	.-22     	; 0x8d4 <vfprintf+0x380>
 8ea:	06 c0       	rjmp	.+12     	; 0x8f8 <vfprintf+0x3a4>
 8ec:	80 e2       	ldi	r24, 0x20	; 32
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	b3 01       	movw	r22, r6
 8f2:	0e 94 9d 04 	call	0x93a	; 0x93a <fputc>
 8f6:	ea 94       	dec	r14
 8f8:	ee 20       	and	r14, r14
 8fa:	c1 f7       	brne	.-16     	; 0x8ec <vfprintf+0x398>
 8fc:	43 ce       	rjmp	.-890    	; 0x584 <vfprintf+0x30>
 8fe:	f3 01       	movw	r30, r6
 900:	66 81       	ldd	r22, Z+6	; 0x06
 902:	77 81       	ldd	r23, Z+7	; 0x07
 904:	cb 01       	movw	r24, r22
 906:	2b 96       	adiw	r28, 0x0b	; 11
 908:	e2 e1       	ldi	r30, 0x12	; 18
 90a:	0c 94 57 05 	jmp	0xaae	; 0xaae <__epilogue_restores__>

0000090e <strnlen_P>:
 90e:	fc 01       	movw	r30, r24
 910:	05 90       	lpm	r0, Z+
 912:	61 50       	subi	r22, 0x01	; 1
 914:	70 40       	sbci	r23, 0x00	; 0
 916:	01 10       	cpse	r0, r1
 918:	d8 f7       	brcc	.-10     	; 0x910 <strnlen_P+0x2>
 91a:	80 95       	com	r24
 91c:	90 95       	com	r25
 91e:	8e 0f       	add	r24, r30
 920:	9f 1f       	adc	r25, r31
 922:	08 95       	ret

00000924 <strnlen>:
 924:	fc 01       	movw	r30, r24
 926:	61 50       	subi	r22, 0x01	; 1
 928:	70 40       	sbci	r23, 0x00	; 0
 92a:	01 90       	ld	r0, Z+
 92c:	01 10       	cpse	r0, r1
 92e:	d8 f7       	brcc	.-10     	; 0x926 <strnlen+0x2>
 930:	80 95       	com	r24
 932:	90 95       	com	r25
 934:	8e 0f       	add	r24, r30
 936:	9f 1f       	adc	r25, r31
 938:	08 95       	ret

0000093a <fputc>:
 93a:	0f 93       	push	r16
 93c:	1f 93       	push	r17
 93e:	cf 93       	push	r28
 940:	df 93       	push	r29
 942:	8c 01       	movw	r16, r24
 944:	eb 01       	movw	r28, r22
 946:	8b 81       	ldd	r24, Y+3	; 0x03
 948:	81 ff       	sbrs	r24, 1
 94a:	1b c0       	rjmp	.+54     	; 0x982 <fputc+0x48>
 94c:	82 ff       	sbrs	r24, 2
 94e:	0d c0       	rjmp	.+26     	; 0x96a <fputc+0x30>
 950:	2e 81       	ldd	r18, Y+6	; 0x06
 952:	3f 81       	ldd	r19, Y+7	; 0x07
 954:	8c 81       	ldd	r24, Y+4	; 0x04
 956:	9d 81       	ldd	r25, Y+5	; 0x05
 958:	28 17       	cp	r18, r24
 95a:	39 07       	cpc	r19, r25
 95c:	64 f4       	brge	.+24     	; 0x976 <fputc+0x3c>
 95e:	e8 81       	ld	r30, Y
 960:	f9 81       	ldd	r31, Y+1	; 0x01
 962:	01 93       	st	Z+, r16
 964:	f9 83       	std	Y+1, r31	; 0x01
 966:	e8 83       	st	Y, r30
 968:	06 c0       	rjmp	.+12     	; 0x976 <fputc+0x3c>
 96a:	e8 85       	ldd	r30, Y+8	; 0x08
 96c:	f9 85       	ldd	r31, Y+9	; 0x09
 96e:	80 2f       	mov	r24, r16
 970:	09 95       	icall
 972:	89 2b       	or	r24, r25
 974:	31 f4       	brne	.+12     	; 0x982 <fputc+0x48>
 976:	8e 81       	ldd	r24, Y+6	; 0x06
 978:	9f 81       	ldd	r25, Y+7	; 0x07
 97a:	01 96       	adiw	r24, 0x01	; 1
 97c:	9f 83       	std	Y+7, r25	; 0x07
 97e:	8e 83       	std	Y+6, r24	; 0x06
 980:	02 c0       	rjmp	.+4      	; 0x986 <fputc+0x4c>
 982:	0f ef       	ldi	r16, 0xFF	; 255
 984:	1f ef       	ldi	r17, 0xFF	; 255
 986:	c8 01       	movw	r24, r16
 988:	df 91       	pop	r29
 98a:	cf 91       	pop	r28
 98c:	1f 91       	pop	r17
 98e:	0f 91       	pop	r16
 990:	08 95       	ret

00000992 <__ultoa_invert>:
 992:	fa 01       	movw	r30, r20
 994:	aa 27       	eor	r26, r26
 996:	28 30       	cpi	r18, 0x08	; 8
 998:	51 f1       	breq	.+84     	; 0x9ee <__ultoa_invert+0x5c>
 99a:	20 31       	cpi	r18, 0x10	; 16
 99c:	81 f1       	breq	.+96     	; 0x9fe <__ultoa_invert+0x6c>
 99e:	e8 94       	clt
 9a0:	6f 93       	push	r22
 9a2:	6e 7f       	andi	r22, 0xFE	; 254
 9a4:	6e 5f       	subi	r22, 0xFE	; 254
 9a6:	7f 4f       	sbci	r23, 0xFF	; 255
 9a8:	8f 4f       	sbci	r24, 0xFF	; 255
 9aa:	9f 4f       	sbci	r25, 0xFF	; 255
 9ac:	af 4f       	sbci	r26, 0xFF	; 255
 9ae:	b1 e0       	ldi	r27, 0x01	; 1
 9b0:	3e d0       	rcall	.+124    	; 0xa2e <__ultoa_invert+0x9c>
 9b2:	b4 e0       	ldi	r27, 0x04	; 4
 9b4:	3c d0       	rcall	.+120    	; 0xa2e <__ultoa_invert+0x9c>
 9b6:	67 0f       	add	r22, r23
 9b8:	78 1f       	adc	r23, r24
 9ba:	89 1f       	adc	r24, r25
 9bc:	9a 1f       	adc	r25, r26
 9be:	a1 1d       	adc	r26, r1
 9c0:	68 0f       	add	r22, r24
 9c2:	79 1f       	adc	r23, r25
 9c4:	8a 1f       	adc	r24, r26
 9c6:	91 1d       	adc	r25, r1
 9c8:	a1 1d       	adc	r26, r1
 9ca:	6a 0f       	add	r22, r26
 9cc:	71 1d       	adc	r23, r1
 9ce:	81 1d       	adc	r24, r1
 9d0:	91 1d       	adc	r25, r1
 9d2:	a1 1d       	adc	r26, r1
 9d4:	20 d0       	rcall	.+64     	; 0xa16 <__ultoa_invert+0x84>
 9d6:	09 f4       	brne	.+2      	; 0x9da <__ultoa_invert+0x48>
 9d8:	68 94       	set
 9da:	3f 91       	pop	r19
 9dc:	2a e0       	ldi	r18, 0x0A	; 10
 9de:	26 9f       	mul	r18, r22
 9e0:	11 24       	eor	r1, r1
 9e2:	30 19       	sub	r19, r0
 9e4:	30 5d       	subi	r19, 0xD0	; 208
 9e6:	31 93       	st	Z+, r19
 9e8:	de f6       	brtc	.-74     	; 0x9a0 <__ultoa_invert+0xe>
 9ea:	cf 01       	movw	r24, r30
 9ec:	08 95       	ret
 9ee:	46 2f       	mov	r20, r22
 9f0:	47 70       	andi	r20, 0x07	; 7
 9f2:	40 5d       	subi	r20, 0xD0	; 208
 9f4:	41 93       	st	Z+, r20
 9f6:	b3 e0       	ldi	r27, 0x03	; 3
 9f8:	0f d0       	rcall	.+30     	; 0xa18 <__ultoa_invert+0x86>
 9fa:	c9 f7       	brne	.-14     	; 0x9ee <__ultoa_invert+0x5c>
 9fc:	f6 cf       	rjmp	.-20     	; 0x9ea <__ultoa_invert+0x58>
 9fe:	46 2f       	mov	r20, r22
 a00:	4f 70       	andi	r20, 0x0F	; 15
 a02:	40 5d       	subi	r20, 0xD0	; 208
 a04:	4a 33       	cpi	r20, 0x3A	; 58
 a06:	18 f0       	brcs	.+6      	; 0xa0e <__ultoa_invert+0x7c>
 a08:	49 5d       	subi	r20, 0xD9	; 217
 a0a:	31 fd       	sbrc	r19, 1
 a0c:	40 52       	subi	r20, 0x20	; 32
 a0e:	41 93       	st	Z+, r20
 a10:	02 d0       	rcall	.+4      	; 0xa16 <__ultoa_invert+0x84>
 a12:	a9 f7       	brne	.-22     	; 0x9fe <__ultoa_invert+0x6c>
 a14:	ea cf       	rjmp	.-44     	; 0x9ea <__ultoa_invert+0x58>
 a16:	b4 e0       	ldi	r27, 0x04	; 4
 a18:	a6 95       	lsr	r26
 a1a:	97 95       	ror	r25
 a1c:	87 95       	ror	r24
 a1e:	77 95       	ror	r23
 a20:	67 95       	ror	r22
 a22:	ba 95       	dec	r27
 a24:	c9 f7       	brne	.-14     	; 0xa18 <__ultoa_invert+0x86>
 a26:	00 97       	sbiw	r24, 0x00	; 0
 a28:	61 05       	cpc	r22, r1
 a2a:	71 05       	cpc	r23, r1
 a2c:	08 95       	ret
 a2e:	9b 01       	movw	r18, r22
 a30:	ac 01       	movw	r20, r24
 a32:	0a 2e       	mov	r0, r26
 a34:	06 94       	lsr	r0
 a36:	57 95       	ror	r21
 a38:	47 95       	ror	r20
 a3a:	37 95       	ror	r19
 a3c:	27 95       	ror	r18
 a3e:	ba 95       	dec	r27
 a40:	c9 f7       	brne	.-14     	; 0xa34 <__ultoa_invert+0xa2>
 a42:	62 0f       	add	r22, r18
 a44:	73 1f       	adc	r23, r19
 a46:	84 1f       	adc	r24, r20
 a48:	95 1f       	adc	r25, r21
 a4a:	a0 1d       	adc	r26, r0
 a4c:	08 95       	ret

00000a4e <__udivmodhi4>:
 a4e:	aa 1b       	sub	r26, r26
 a50:	bb 1b       	sub	r27, r27
 a52:	51 e1       	ldi	r21, 0x11	; 17
 a54:	07 c0       	rjmp	.+14     	; 0xa64 <__udivmodhi4_ep>

00000a56 <__udivmodhi4_loop>:
 a56:	aa 1f       	adc	r26, r26
 a58:	bb 1f       	adc	r27, r27
 a5a:	a6 17       	cp	r26, r22
 a5c:	b7 07       	cpc	r27, r23
 a5e:	10 f0       	brcs	.+4      	; 0xa64 <__udivmodhi4_ep>
 a60:	a6 1b       	sub	r26, r22
 a62:	b7 0b       	sbc	r27, r23

00000a64 <__udivmodhi4_ep>:
 a64:	88 1f       	adc	r24, r24
 a66:	99 1f       	adc	r25, r25
 a68:	5a 95       	dec	r21
 a6a:	a9 f7       	brne	.-22     	; 0xa56 <__udivmodhi4_loop>
 a6c:	80 95       	com	r24
 a6e:	90 95       	com	r25
 a70:	bc 01       	movw	r22, r24
 a72:	cd 01       	movw	r24, r26
 a74:	08 95       	ret

00000a76 <__prologue_saves__>:
 a76:	2f 92       	push	r2
 a78:	3f 92       	push	r3
 a7a:	4f 92       	push	r4
 a7c:	5f 92       	push	r5
 a7e:	6f 92       	push	r6
 a80:	7f 92       	push	r7
 a82:	8f 92       	push	r8
 a84:	9f 92       	push	r9
 a86:	af 92       	push	r10
 a88:	bf 92       	push	r11
 a8a:	cf 92       	push	r12
 a8c:	df 92       	push	r13
 a8e:	ef 92       	push	r14
 a90:	ff 92       	push	r15
 a92:	0f 93       	push	r16
 a94:	1f 93       	push	r17
 a96:	cf 93       	push	r28
 a98:	df 93       	push	r29
 a9a:	cd b7       	in	r28, 0x3d	; 61
 a9c:	de b7       	in	r29, 0x3e	; 62
 a9e:	ca 1b       	sub	r28, r26
 aa0:	db 0b       	sbc	r29, r27
 aa2:	0f b6       	in	r0, 0x3f	; 63
 aa4:	f8 94       	cli
 aa6:	de bf       	out	0x3e, r29	; 62
 aa8:	0f be       	out	0x3f, r0	; 63
 aaa:	cd bf       	out	0x3d, r28	; 61
 aac:	09 94       	ijmp

00000aae <__epilogue_restores__>:
 aae:	2a 88       	ldd	r2, Y+18	; 0x12
 ab0:	39 88       	ldd	r3, Y+17	; 0x11
 ab2:	48 88       	ldd	r4, Y+16	; 0x10
 ab4:	5f 84       	ldd	r5, Y+15	; 0x0f
 ab6:	6e 84       	ldd	r6, Y+14	; 0x0e
 ab8:	7d 84       	ldd	r7, Y+13	; 0x0d
 aba:	8c 84       	ldd	r8, Y+12	; 0x0c
 abc:	9b 84       	ldd	r9, Y+11	; 0x0b
 abe:	aa 84       	ldd	r10, Y+10	; 0x0a
 ac0:	b9 84       	ldd	r11, Y+9	; 0x09
 ac2:	c8 84       	ldd	r12, Y+8	; 0x08
 ac4:	df 80       	ldd	r13, Y+7	; 0x07
 ac6:	ee 80       	ldd	r14, Y+6	; 0x06
 ac8:	fd 80       	ldd	r15, Y+5	; 0x05
 aca:	0c 81       	ldd	r16, Y+4	; 0x04
 acc:	1b 81       	ldd	r17, Y+3	; 0x03
 ace:	aa 81       	ldd	r26, Y+2	; 0x02
 ad0:	b9 81       	ldd	r27, Y+1	; 0x01
 ad2:	ce 0f       	add	r28, r30
 ad4:	d1 1d       	adc	r29, r1
 ad6:	0f b6       	in	r0, 0x3f	; 63
 ad8:	f8 94       	cli
 ada:	de bf       	out	0x3e, r29	; 62
 adc:	0f be       	out	0x3f, r0	; 63
 ade:	cd bf       	out	0x3d, r28	; 61
 ae0:	ed 01       	movw	r28, r26
 ae2:	08 95       	ret

00000ae4 <_exit>:
 ae4:	f8 94       	cli

00000ae6 <__stop_program>:
 ae6:	ff cf       	rjmp	.-2      	; 0xae6 <__stop_program>
