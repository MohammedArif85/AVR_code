
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000001c6  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00000264  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000064  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000025d  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000144  00000000  00000000  00000545  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000260  00000000  00000000  00000689  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  000008ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ef  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00000a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00000a53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ec       	ldi	r30, 0xC6	; 198
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  8a:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_9>:
}; 
volatile int count=0;
volatile unsigned char d1,d2,d3,d4,dot=0;

ISR(TIMER0_OVF_vect)
{TCNT0=0;
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	8f 93       	push	r24
  a0:	9f 93       	push	r25
  a2:	12 be       	out	0x32, r1	; 50
    count++;
  a4:	80 91 6a 00 	lds	r24, 0x006A
  a8:	90 91 6b 00 	lds	r25, 0x006B
  ac:	01 96       	adiw	r24, 0x01	; 1
  ae:	90 93 6b 00 	sts	0x006B, r25
  b2:	80 93 6a 00 	sts	0x006A, r24
	if(count==488)
  b6:	80 91 6a 00 	lds	r24, 0x006A
  ba:	90 91 6b 00 	lds	r25, 0x006B
  be:	88 5e       	subi	r24, 0xE8	; 232
  c0:	91 40       	sbci	r25, 0x01	; 1
  c2:	81 f5       	brne	.+96     	; 0x124 <__vector_9+0x92>
	{
     d1++;
  c4:	80 91 6d 00 	lds	r24, 0x006D
  c8:	8f 5f       	subi	r24, 0xFF	; 255
  ca:	80 93 6d 00 	sts	0x006D, r24
	if(d1>9)
  ce:	80 91 6d 00 	lds	r24, 0x006D
  d2:	8a 30       	cpi	r24, 0x0A	; 10
  d4:	38 f0       	brcs	.+14     	; 0xe4 <__vector_9+0x52>
	{d1=0;d2++;
  d6:	10 92 6d 00 	sts	0x006D, r1
  da:	80 91 6e 00 	lds	r24, 0x006E
  de:	8f 5f       	subi	r24, 0xFF	; 255
  e0:	80 93 6e 00 	sts	0x006E, r24
	}
	if(d2>5)
  e4:	80 91 6e 00 	lds	r24, 0x006E
  e8:	86 30       	cpi	r24, 0x06	; 6
  ea:	38 f0       	brcs	.+14     	; 0xfa <__vector_9+0x68>
	{d2=0;d3++;
  ec:	10 92 6e 00 	sts	0x006E, r1
  f0:	80 91 70 00 	lds	r24, 0x0070
  f4:	8f 5f       	subi	r24, 0xFF	; 255
  f6:	80 93 70 00 	sts	0x0070, r24
	}
	if(d3>9)
  fa:	80 91 70 00 	lds	r24, 0x0070
  fe:	8a 30       	cpi	r24, 0x0A	; 10
 100:	38 f0       	brcs	.+14     	; 0x110 <__vector_9+0x7e>
	{d3=0;d4++;
 102:	10 92 70 00 	sts	0x0070, r1
 106:	80 91 6f 00 	lds	r24, 0x006F
 10a:	8f 5f       	subi	r24, 0xFF	; 255
 10c:	80 93 6f 00 	sts	0x006F, r24
	}
	if(d4>5)
 110:	80 91 6f 00 	lds	r24, 0x006F
 114:	86 30       	cpi	r24, 0x06	; 6
 116:	10 f0       	brcs	.+4      	; 0x11c <__vector_9+0x8a>
	{d4=0;
 118:	10 92 6f 00 	sts	0x006F, r1
	}
 	 count=0;
 11c:	10 92 6b 00 	sts	0x006B, r1
 120:	10 92 6a 00 	sts	0x006A, r1
	}
 


 
}
 124:	9f 91       	pop	r25
 126:	8f 91       	pop	r24
 128:	2f 91       	pop	r18
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti

00000134 <main>:


int main(void)
{int i;
  DDRB=0x0F;
 134:	8f e0       	ldi	r24, 0x0F	; 15
 136:	87 bb       	out	0x17, r24	; 23
 DDRA=0xFF;
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	8a bb       	out	0x1a, r24	; 26
 PORTB=0XFF;
 13c:	88 bb       	out	0x18, r24	; 24
 PORTA=0x00;
 13e:	1b ba       	out	0x1b, r1	; 27
 TCCR0=(1<<CS00)|(1<<CS01);//64
 140:	83 e0       	ldi	r24, 0x03	; 3
 142:	83 bf       	out	0x33, r24	; 51
 TCNT0=0;
 144:	12 be       	out	0x32, r1	; 50
 TIMSK=(1<<TOIE0);
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	89 bf       	out	0x39, r24	; 57
 
 d1=0;
 14a:	10 92 6d 00 	sts	0x006D, r1
 d2=0;
 14e:	10 92 6e 00 	sts	0x006E, r1
 d3=0;
 152:	10 92 70 00 	sts	0x0070, r1
 d4=0;
 156:	10 92 6f 00 	sts	0x006F, r1
 sei();
 15a:	78 94       	sei
 
   while(1)
   {
     PORTB=0X01;
 15c:	71 e0       	ldi	r23, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 15e:	20 ed       	ldi	r18, 0xD0	; 208
 160:	37 e0       	ldi	r19, 0x07	; 7
	 PORTA=segdisp[d1];
	 _delay_ms(1);
	 
     PORTB=0X02;
 162:	62 e0       	ldi	r22, 0x02	; 2
	 PORTA=segdisp[d2];
	 _delay_ms(1);
	 
     PORTB=0X04;
 164:	54 e0       	ldi	r21, 0x04	; 4
	 PORTA=segdisp[d3];
	 _delay_ms(1);
	 
	 
     PORTB=0X08;
 166:	48 e0       	ldi	r20, 0x08	; 8
 d4=0;
 sei();
 
   while(1)
   {
     PORTB=0X01;
 168:	78 bb       	out	0x18, r23	; 24
	 PORTA=segdisp[d1];
 16a:	e0 91 6d 00 	lds	r30, 0x006D
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	e0 5a       	subi	r30, 0xA0	; 160
 172:	ff 4f       	sbci	r31, 0xFF	; 255
 174:	80 81       	ld	r24, Z
 176:	8b bb       	out	0x1b, r24	; 27
 178:	c9 01       	movw	r24, r18
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0x46>
	 _delay_ms(1);
	 
     PORTB=0X02;
 17e:	68 bb       	out	0x18, r22	; 24
	 PORTA=segdisp[d2];
 180:	e0 91 6e 00 	lds	r30, 0x006E
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	e0 5a       	subi	r30, 0xA0	; 160
 188:	ff 4f       	sbci	r31, 0xFF	; 255
 18a:	80 81       	ld	r24, Z
 18c:	8b bb       	out	0x1b, r24	; 27
 18e:	c9 01       	movw	r24, r18
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <main+0x5c>
	 _delay_ms(1);
	 
     PORTB=0X04;
 194:	58 bb       	out	0x18, r21	; 24
	 PORTA=segdisp[d3];
 196:	e0 91 70 00 	lds	r30, 0x0070
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	e0 5a       	subi	r30, 0xA0	; 160
 19e:	ff 4f       	sbci	r31, 0xFF	; 255
 1a0:	80 81       	ld	r24, Z
 1a2:	8b bb       	out	0x1b, r24	; 27
 1a4:	c9 01       	movw	r24, r18
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x72>
	 _delay_ms(1);
	 
	 
     PORTB=0X08;
 1aa:	48 bb       	out	0x18, r20	; 24
	 PORTA=segdisp[d4];
 1ac:	e0 91 6f 00 	lds	r30, 0x006F
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	e0 5a       	subi	r30, 0xA0	; 160
 1b4:	ff 4f       	sbci	r31, 0xFF	; 255
 1b6:	80 81       	ld	r24, Z
 1b8:	8b bb       	out	0x1b, r24	; 27
 1ba:	c9 01       	movw	r24, r18
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <main+0x88>
 1c0:	d3 cf       	rjmp	.-90     	; 0x168 <main+0x34>

000001c2 <_exit>:
 1c2:	f8 94       	cli

000001c4 <__stop_program>:
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <__stop_program>
