
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000142  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000023  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000358  00000000  00000000  000001d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000148  00000000  00000000  00000531  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000212  00000000  00000000  00000679  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000104  00000000  00000000  000008bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000144  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000078  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 9f 00 	jmp	0x13e	; 0x13e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>
void pwm (int time);
int main (void)
{int i,j;
  6c:	1f 93       	push	r17
 DDRA=0XF0;
  6e:	80 ef       	ldi	r24, 0xF0	; 240
  70:	8a bb       	out	0x1a, r24	; 26
 PORTA=0X00;
  72:	1b ba       	out	0x1b, r1	; 27
 DDRD=0X00;
  74:	11 ba       	out	0x11, r1	; 17
 PORTD=0XF0;
  76:	82 bb       	out	0x12, r24	; 18
  78:	41 e0       	ldi	r20, 0x01	; 1
  7a:	50 e0       	ldi	r21, 0x00	; 0
  
   for(i=1;i<=100;i++)
  {
   for(j=0;j<50;j++)
   {
    PORTA=0XF0;
  7c:	10 ef       	ldi	r17, 0xF0	; 240
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
  7e:	3a e1       	ldi	r19, 0x1A	; 26
	pwm(i);
	PORTA=0X00;
	pwm(100-i);
  80:	a4 e6       	ldi	r26, 0x64	; 100
  82:	b0 e0       	ldi	r27, 0x00	; 0
  84:	21 c0       	rjmp	.+66     	; 0xc8 <main+0x5c>
int main (void)
{int i,j;
 DDRA=0XF0;
 PORTA=0X00;
 DDRD=0X00;
 PORTD=0XF0;
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
   for(j=0;j<50;j++)
   {
    PORTA=0XF0;
	pwm(i);
	PORTA=0X00;
	pwm(100-i);
  8a:	fd 01       	movw	r30, r26
  8c:	e4 1b       	sub	r30, r20
  8e:	f5 0b       	sbc	r31, r21
  
   for(i=1;i<=100;i++)
  {
   for(j=0;j<50;j++)
   {
    PORTA=0XF0;
  90:	1b bb       	out	0x1b, r17	; 27
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	23 2f       	mov	r18, r19
  98:	2a 95       	dec	r18
  9a:	f1 f7       	brne	.-4      	; 0x98 <main+0x2c>
  
 }return 0;
} 
 void pwm (int time)
{int k;
 for(k=0;k<time;k++)
  9c:	01 96       	adiw	r24, 0x01	; 1
  9e:	84 17       	cp	r24, r20
  a0:	95 07       	cpc	r25, r21
  a2:	cc f3       	brlt	.-14     	; 0x96 <main+0x2a>
  {
   for(j=0;j<50;j++)
   {
    PORTA=0XF0;
	pwm(i);
	PORTA=0X00;
  a4:	1b ba       	out	0x1b, r1	; 27
	pwm(100-i);
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	04 c0       	rjmp	.+8      	; 0xb4 <main+0x48>
  ac:	23 2f       	mov	r18, r19
  ae:	2a 95       	dec	r18
  b0:	f1 f7       	brne	.-4      	; 0xae <main+0x42>
  
 }return 0;
} 
 void pwm (int time)
{int k;
 for(k=0;k<time;k++)
  b2:	01 96       	adiw	r24, 0x01	; 1
  b4:	8e 17       	cp	r24, r30
  b6:	9f 07       	cpc	r25, r31
  b8:	cc f3       	brlt	.-14     	; 0xac <main+0x40>
 while(1)
 {
  
   for(i=1;i<=100;i++)
  {
   for(j=0;j<50;j++)
  ba:	6f 5f       	subi	r22, 0xFF	; 255
  bc:	7f 4f       	sbci	r23, 0xFF	; 255
  be:	62 33       	cpi	r22, 0x32	; 50
  c0:	71 05       	cpc	r23, r1
  c2:	31 f7       	brne	.-52     	; 0x90 <main+0x24>
 DDRD=0X00;
 PORTD=0XF0;
 while(1)
 {
  
   for(i=1;i<=100;i++)
  c4:	4f 5f       	subi	r20, 0xFF	; 255
  c6:	5f 4f       	sbci	r21, 0xFF	; 255
  c8:	45 36       	cpi	r20, 0x65	; 101
  ca:	51 05       	cpc	r21, r1
  cc:	e4 f2       	brlt	.-72     	; 0x86 <main+0x1a>
  ce:	22 c0       	rjmp	.+68     	; 0x114 <main+0xa8>
   }
   for(i=1;i<=100;i++)
  {
   for(j=0;j<50;j++)
   {
    PORTA=0X00;
  d0:	1b ba       	out	0x1b, r1	; 27
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	23 2f       	mov	r18, r19
  d8:	2a 95       	dec	r18
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x6c>
  
 }return 0;
} 
 void pwm (int time)
{int k;
 for(k=0;k<time;k++)
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	84 17       	cp	r24, r20
  e0:	95 07       	cpc	r25, r21
  e2:	cc f3       	brlt	.-14     	; 0xd6 <main+0x6a>
  {
   for(j=0;j<50;j++)
   {
    PORTA=0X00;
	pwm(i);
	PORTA=0XF0;
  e4:	1b bb       	out	0x1b, r17	; 27
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	04 c0       	rjmp	.+8      	; 0xf4 <main+0x88>
  ec:	23 2f       	mov	r18, r19
  ee:	2a 95       	dec	r18
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x82>
  
 }return 0;
} 
 void pwm (int time)
{int k;
 for(k=0;k<time;k++)
  f2:	01 96       	adiw	r24, 0x01	; 1
  f4:	8e 17       	cp	r24, r30
  f6:	9f 07       	cpc	r25, r31
  f8:	cc f3       	brlt	.-14     	; 0xec <main+0x80>
	pwm(100-i);
   }
   }
   for(i=1;i<=100;i++)
  {
   for(j=0;j<50;j++)
  fa:	6f 5f       	subi	r22, 0xFF	; 255
  fc:	7f 4f       	sbci	r23, 0xFF	; 255
  fe:	62 33       	cpi	r22, 0x32	; 50
 100:	71 05       	cpc	r23, r1
 102:	31 f7       	brne	.-52     	; 0xd0 <main+0x64>
	pwm(i);
	PORTA=0X00;
	pwm(100-i);
   }
   }
   for(i=1;i<=100;i++)
 104:	4f 5f       	subi	r20, 0xFF	; 255
 106:	5f 4f       	sbci	r21, 0xFF	; 255
 108:	45 36       	cpi	r20, 0x65	; 101
 10a:	51 05       	cpc	r21, r1
 10c:	29 f4       	brne	.+10     	; 0x118 <main+0xac>
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	da cf       	rjmp	.-76     	; 0xc8 <main+0x5c>
 114:	41 e0       	ldi	r20, 0x01	; 1
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	70 e0       	ldi	r23, 0x00	; 0
  {
   for(j=0;j<50;j++)
   {
    PORTA=0X00;
	pwm(i);
	PORTA=0XF0;
 11c:	fd 01       	movw	r30, r26
 11e:	e4 1b       	sub	r30, r20
 120:	f5 0b       	sbc	r31, r21
 122:	d6 cf       	rjmp	.-84     	; 0xd0 <main+0x64>

00000124 <pwm>:
  }
  
 }return 0;
} 
 void pwm (int time)
{int k;
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	5a e1       	ldi	r21, 0x1A	; 26
 12a:	05 c0       	rjmp	.+10     	; 0x136 <pwm+0x12>
 12c:	45 2f       	mov	r20, r21
 12e:	4a 95       	dec	r20
 130:	f1 f7       	brne	.-4      	; 0x12e <pwm+0xa>
 for(k=0;k<time;k++)
 132:	2f 5f       	subi	r18, 0xFF	; 255
 134:	3f 4f       	sbci	r19, 0xFF	; 255
 136:	28 17       	cp	r18, r24
 138:	39 07       	cpc	r19, r25
 13a:	c4 f3       	brlt	.-16     	; 0x12c <pwm+0x8>
 {
  _delay_us(10);
 }
 13c:	08 95       	ret

0000013e <_exit>:
 13e:	f8 94       	cli

00000140 <__stop_program>:
 140:	ff cf       	rjmp	.-2      	; 0x140 <__stop_program>
