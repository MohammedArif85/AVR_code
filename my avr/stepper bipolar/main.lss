
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000136  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000038  00000000  00000000  000001aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002c8  00000000  00000000  000001e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000012f  00000000  00000000  000004aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001b5  00000000  00000000  000005d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000fe  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000ac  00000000  00000000  000008ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <fulln>:
  54:	88 22 44 11                                         ."D.

00000058 <fulld>:
  58:	aa 66 55 99                                         .fU.

0000005c <half>:
  5c:	88 aa 22 66 44 55 11 99                             .."fDU..

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d4 e0       	ldi	r29, 0x04	; 4
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
 
 
 
 
 unsigned char c,d,e;
 DDRA=0xF0;
  7c:	80 ef       	ldi	r24, 0xF0	; 240
  7e:	8a bb       	out	0x1a, r24	; 26
 DDRC=0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	84 bb       	out	0x14, r24	; 20
 DDRD=0x00;
  84:	11 ba       	out	0x11, r1	; 17
 PORTA=0x00;
  86:	1b ba       	out	0x1b, r1	; 27
 PORTC=0x00;
  88:	15 ba       	out	0x15, r1	; 21
 PORTD=0x0F;
  8a:	8f e0       	ldi	r24, 0x0F	; 15
  8c:	82 bb       	out	0x12, r24	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  8e:	20 ee       	ldi	r18, 0xE0	; 224
  90:	3e e2       	ldi	r19, 0x2E	; 46
 
 while(1)
 {
  c=PIND&0x0F;
  92:	40 e4       	ldi	r20, 0x40	; 64
  94:	5f e1       	ldi	r21, 0x1F	; 31
  96:	80 b3       	in	r24, 0x10	; 16
  switch(c)
  98:	8f 70       	andi	r24, 0x0F	; 15
  9a:	8b 30       	cpi	r24, 0x0B	; 11
  9c:	49 f1       	breq	.+82     	; 0xf0 <main+0x74>
  9e:	8c 30       	cpi	r24, 0x0C	; 12
  a0:	20 f4       	brcc	.+8      	; 0xaa <main+0x2e>
  a2:	87 30       	cpi	r24, 0x07	; 7
  a4:	09 f0       	breq	.+2      	; 0xa8 <main+0x2c>
  a6:	42 c0       	rjmp	.+132    	; 0x12c <main+0xb0>
  a8:	32 c0       	rjmp	.+100    	; 0x10e <main+0x92>
  aa:	8d 30       	cpi	r24, 0x0D	; 13
  ac:	91 f0       	breq	.+36     	; 0xd2 <main+0x56>
  ae:	8e 30       	cpi	r24, 0x0E	; 14
  b0:	09 f0       	breq	.+2      	; 0xb4 <main+0x38>
  b2:	3c c0       	rjmp	.+120    	; 0x12c <main+0xb0>
  b4:	e4 e5       	ldi	r30, 0x54	; 84
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  {
   case 0x0E :
				for(d=0;d<4;d++)
				{
				 PORTA=PORTC=pgm_read_byte(&fulln[d]);
  b8:	84 91       	lpm	r24, Z+
  ba:	85 bb       	out	0x15, r24	; 21
  bc:	85 b3       	in	r24, 0x15	; 21
  be:	8b bb       	out	0x1b, r24	; 27
  c0:	c9 01       	movw	r24, r18
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x46>
  c6:	31 96       	adiw	r30, 0x01	; 1
 {
  c=PIND&0x0F;
  switch(c)
  {
   case 0x0E :
				for(d=0;d<4;d++)
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	e8 35       	cpi	r30, 0x58	; 88
  cc:	f8 07       	cpc	r31, r24
  ce:	a1 f7       	brne	.-24     	; 0xb8 <main+0x3c>
  d0:	e2 cf       	rjmp	.-60     	; 0x96 <main+0x1a>
  d2:	e8 e5       	ldi	r30, 0x58	; 88
  d4:	f0 e0       	ldi	r31, 0x00	; 0
   break;
   
   case 0x0D : 
				for(d=0;d<4;d++)
				{
				 PORTA=PORTC=pgm_read_byte(&fulld[d]);
  d6:	84 91       	lpm	r24, Z+
  d8:	85 bb       	out	0x15, r24	; 21
  da:	85 b3       	in	r24, 0x15	; 21
  dc:	8b bb       	out	0x1b, r24	; 27
  de:	c9 01       	movw	r24, r18
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x64>
  e4:	31 96       	adiw	r30, 0x01	; 1
				 _delay_ms(3);
				};
   break;
   
   case 0x0D : 
				for(d=0;d<4;d++)
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	ec 35       	cpi	r30, 0x5C	; 92
  ea:	f8 07       	cpc	r31, r24
  ec:	a1 f7       	brne	.-24     	; 0xd6 <main+0x5a>
  ee:	d3 cf       	rjmp	.-90     	; 0x96 <main+0x1a>
  f0:	ec e5       	ldi	r30, 0x5C	; 92
  f2:	f0 e0       	ldi	r31, 0x00	; 0
   break;
   
   case 0x0B : 
				for(e=0;e<8;e++)
				{
				 PORTA=PORTC=pgm_read_byte(&half[e]);
  f4:	84 91       	lpm	r24, Z+
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	85 b3       	in	r24, 0x15	; 21
  fa:	8b bb       	out	0x1b, r24	; 27
  fc:	c9 01       	movw	r24, r18
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x82>
 102:	31 96       	adiw	r30, 0x01	; 1
				 
				};
   break;
   
   case 0x0B : 
				for(e=0;e<8;e++)
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	e4 36       	cpi	r30, 0x64	; 100
 108:	f8 07       	cpc	r31, r24
 10a:	a1 f7       	brne	.-24     	; 0xf4 <main+0x78>
 10c:	c4 cf       	rjmp	.-120    	; 0x96 <main+0x1a>
 10e:	ec e5       	ldi	r30, 0x5C	; 92
 110:	f0 e0       	ldi	r31, 0x00	; 0
   break;
   
   case 0x07 : 
				for(e=0;e<8;e++)
				{
				 PORTA=PORTC=pgm_read_byte(&half[e]);
 112:	84 91       	lpm	r24, Z+
 114:	85 bb       	out	0x15, r24	; 21
 116:	85 b3       	in	r24, 0x15	; 21
 118:	8b bb       	out	0x1b, r24	; 27
 11a:	ca 01       	movw	r24, r20
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0xa0>
 120:	31 96       	adiw	r30, 0x01	; 1
				 				 
				};
   break;
   
   case 0x07 : 
				for(e=0;e<8;e++)
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	e4 36       	cpi	r30, 0x64	; 100
 126:	f8 07       	cpc	r31, r24
 128:	a1 f7       	brne	.-24     	; 0x112 <main+0x96>
 12a:	b5 cf       	rjmp	.-150    	; 0x96 <main+0x1a>
				 _delay_ms(2);
				 
				};
   break;
   
   default : PORTA=0x00;PORTC=0x00;
 12c:	1b ba       	out	0x1b, r1	; 27
 12e:	15 ba       	out	0x15, r1	; 21
 130:	b2 cf       	rjmp	.-156    	; 0x96 <main+0x1a>

00000132 <_exit>:
 132:	f8 94       	cli

00000134 <__stop_program>:
 134:	ff cf       	rjmp	.-2      	; 0x134 <__stop_program>
