
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000190  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000190  00000224  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080006a  0080006a  0000022e  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000022e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000005a  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000023f  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000137  00000000  00000000  000004e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000226  00000000  00000000  0000061e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000844  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ea  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  0000095e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e9       	ldi	r30, 0x90	; 144
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 36       	cpi	r26, 0x6F	; 111
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 83 00 	call	0x106	; 0x106 <main>
  8a:	0c 94 c6 00 	jmp	0x18c	; 0x18c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_9>:
 0b01111111,
 0b01101111
}; 
volatile unsigned char d1,d2,d3,d4,dot=0;
ISR(TIMER0_OVF_vect)
{TCNT0=131; 
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
  9e:	83 e8       	ldi	r24, 0x83	; 131
  a0:	82 bf       	out	0x32, r24	; 50
 
   
	d1++;
  a2:	80 91 6b 00 	lds	r24, 0x006B
  a6:	8f 5f       	subi	r24, 0xFF	; 255
  a8:	80 93 6b 00 	sts	0x006B, r24
	if(d1>9)
  ac:	80 91 6b 00 	lds	r24, 0x006B
  b0:	8a 30       	cpi	r24, 0x0A	; 10
  b2:	38 f0       	brcs	.+14     	; 0xc2 <__vector_9+0x30>
	{d1=0;d2++;
  b4:	10 92 6b 00 	sts	0x006B, r1
  b8:	80 91 6c 00 	lds	r24, 0x006C
  bc:	8f 5f       	subi	r24, 0xFF	; 255
  be:	80 93 6c 00 	sts	0x006C, r24
	}
	if(d2>9)
  c2:	80 91 6c 00 	lds	r24, 0x006C
  c6:	8a 30       	cpi	r24, 0x0A	; 10
  c8:	38 f0       	brcs	.+14     	; 0xd8 <__vector_9+0x46>
	{d2=0;d3++;
  ca:	10 92 6c 00 	sts	0x006C, r1
  ce:	80 91 6e 00 	lds	r24, 0x006E
  d2:	8f 5f       	subi	r24, 0xFF	; 255
  d4:	80 93 6e 00 	sts	0x006E, r24
	}
	if(d3>9)
  d8:	80 91 6e 00 	lds	r24, 0x006E
  dc:	8a 30       	cpi	r24, 0x0A	; 10
  de:	38 f0       	brcs	.+14     	; 0xee <__vector_9+0x5c>
	{d3=0;d4++;
  e0:	10 92 6e 00 	sts	0x006E, r1
  e4:	80 91 6d 00 	lds	r24, 0x006D
  e8:	8f 5f       	subi	r24, 0xFF	; 255
  ea:	80 93 6d 00 	sts	0x006D, r24
	}
	if(d4>9)
  ee:	80 91 6d 00 	lds	r24, 0x006D
  f2:	8a 30       	cpi	r24, 0x0A	; 10
  f4:	10 f0       	brcs	.+4      	; 0xfa <__vector_9+0x68>
	{d4=0;
  f6:	10 92 6d 00 	sts	0x006D, r1
	}
	


 
}
  fa:	8f 91       	pop	r24
  fc:	0f 90       	pop	r0
  fe:	0f be       	out	0x3f, r0	; 63
 100:	0f 90       	pop	r0
 102:	1f 90       	pop	r1
 104:	18 95       	reti

00000106 <main>:

int main(void)
{
  DDRB=0x0F;
 106:	8f e0       	ldi	r24, 0x0F	; 15
 108:	87 bb       	out	0x17, r24	; 23
 DDRA=0xFF;
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	8a bb       	out	0x1a, r24	; 26
 PORTB=0x00;
 10e:	18 ba       	out	0x18, r1	; 24
 PORTA=0x00;
 110:	1b ba       	out	0x1b, r1	; 27
 TCNT0=131;
 112:	83 e8       	ldi	r24, 0x83	; 131
 114:	82 bf       	out	0x32, r24	; 50
 TCCR0=((1<<CS00)|(1<<CS01));//64*256*0.000000125=0.002048
 116:	83 e0       	ldi	r24, 0x03	; 3
 118:	83 bf       	out	0x33, r24	; 51
 TIMSK=(1<<TOIE0);
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	89 bf       	out	0x39, r24	; 57
 sei();
 11e:	78 94       	sei
 
   while(1)
   {
    PORTB=0x01;
 120:	71 e0       	ldi	r23, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 122:	20 ed       	ldi	r18, 0xD0	; 208
 124:	37 e0       	ldi	r19, 0x07	; 7
	PORTA=segdisp[d1];
	_delay_ms(1);
    PORTB=0x02;
 126:	62 e0       	ldi	r22, 0x02	; 2
	PORTA=segdisp[d2];
	_delay_ms(1);
    PORTB=0x04;
 128:	54 e0       	ldi	r21, 0x04	; 4
	PORTA=segdisp[d3]|dot;
	_delay_ms(1);
    PORTB=0x08;
 12a:	48 e0       	ldi	r20, 0x08	; 8
 TIMSK=(1<<TOIE0);
 sei();
 
   while(1)
   {
    PORTB=0x01;
 12c:	78 bb       	out	0x18, r23	; 24
	PORTA=segdisp[d1];
 12e:	e0 91 6b 00 	lds	r30, 0x006B
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	e0 5a       	subi	r30, 0xA0	; 160
 136:	ff 4f       	sbci	r31, 0xFF	; 255
 138:	80 81       	ld	r24, Z
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	c9 01       	movw	r24, r18
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <main+0x38>
	_delay_ms(1);
    PORTB=0x02;
 142:	68 bb       	out	0x18, r22	; 24
	PORTA=segdisp[d2];
 144:	e0 91 6c 00 	lds	r30, 0x006C
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	e0 5a       	subi	r30, 0xA0	; 160
 14c:	ff 4f       	sbci	r31, 0xFF	; 255
 14e:	80 81       	ld	r24, Z
 150:	8b bb       	out	0x1b, r24	; 27
 152:	c9 01       	movw	r24, r18
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x4e>
	_delay_ms(1);
    PORTB=0x04;
 158:	58 bb       	out	0x18, r21	; 24
	PORTA=segdisp[d3]|dot;
 15a:	e0 91 6e 00 	lds	r30, 0x006E
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	e0 5a       	subi	r30, 0xA0	; 160
 162:	ff 4f       	sbci	r31, 0xFF	; 255
 164:	80 81       	ld	r24, Z
 166:	90 91 6a 00 	lds	r25, 0x006A
 16a:	89 2b       	or	r24, r25
 16c:	8b bb       	out	0x1b, r24	; 27
 16e:	c9 01       	movw	r24, r18
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <main+0x6a>
	_delay_ms(1);
    PORTB=0x08;
 174:	48 bb       	out	0x18, r20	; 24
	PORTA=segdisp[d4];
 176:	e0 91 6d 00 	lds	r30, 0x006D
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	e0 5a       	subi	r30, 0xA0	; 160
 17e:	ff 4f       	sbci	r31, 0xFF	; 255
 180:	80 81       	ld	r24, Z
 182:	8b bb       	out	0x1b, r24	; 27
 184:	c9 01       	movw	r24, r18
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <main+0x80>
 18a:	d0 cf       	rjmp	.-96     	; 0x12c <main+0x26>

0000018c <_exit>:
 18c:	f8 94       	cli

0000018e <__stop_program>:
 18e:	ff cf       	rjmp	.-2      	; 0x18e <__stop_program>
