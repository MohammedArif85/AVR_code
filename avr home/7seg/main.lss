
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000000d8  0000014c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000027  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001e5  00000000  00000000  0000019f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000011e  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001a9  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d2  00000000  00000000  0000066c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000048  00000000  00000000  0000073e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00000786  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
};

int main(void)
{
 unsigned char c,d;
 DDRA=0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	8a bb       	out	0x1a, r24	; 26
 DDRB=0xf0;
  86:	80 ef       	ldi	r24, 0xF0	; 240
  88:	87 bb       	out	0x17, r24	; 23
 PORTB=0x00;
  8a:	18 ba       	out	0x18, r1	; 24
 PORTA=0x00;
  8c:	1b ba       	out	0x1b, r1	; 27
 
 while(1)
 {
 PORTA=segdisp[1];
 PORTB=0x10;
  8e:	70 e1       	ldi	r23, 0x10	; 16
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  90:	20 ed       	ldi	r18, 0xD0	; 208
  92:	37 e0       	ldi	r19, 0x07	; 7
 _delay_ms(1);
 PORTA=segdisp[1];
 PORTB=0x20;
  94:	60 e2       	ldi	r22, 0x20	; 32
 _delay_ms(1);
 PORTA=segdisp[1];
 PORTB=0x40;
  96:	50 e4       	ldi	r21, 0x40	; 64
 _delay_ms(1);
 PORTA=segdisp[1];
 PORTB=0x80;
  98:	40 e8       	ldi	r20, 0x80	; 128
 PORTB=0x00;
 PORTA=0x00;
 
 while(1)
 {
 PORTA=segdisp[1];
  9a:	80 91 61 00 	lds	r24, 0x0061
  9e:	8b bb       	out	0x1b, r24	; 27
 PORTB=0x10;
  a0:	78 bb       	out	0x18, r23	; 24
  a2:	c9 01       	movw	r24, r18
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x22>
 _delay_ms(1);
 PORTA=segdisp[1];
  a8:	80 91 61 00 	lds	r24, 0x0061
  ac:	8b bb       	out	0x1b, r24	; 27
 PORTB=0x20;
  ae:	68 bb       	out	0x18, r22	; 24
  b0:	c9 01       	movw	r24, r18
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <main+0x30>
 _delay_ms(1);
 PORTA=segdisp[1];
  b6:	80 91 61 00 	lds	r24, 0x0061
  ba:	8b bb       	out	0x1b, r24	; 27
 PORTB=0x40;
  bc:	58 bb       	out	0x18, r21	; 24
  be:	c9 01       	movw	r24, r18
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x3e>
 _delay_ms(1);
 PORTA=segdisp[1];
  c4:	80 91 61 00 	lds	r24, 0x0061
  c8:	8b bb       	out	0x1b, r24	; 27
 PORTB=0x80;
  ca:	48 bb       	out	0x18, r20	; 24
  cc:	c9 01       	movw	r24, r18
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <main+0x4c>
  d2:	e3 cf       	rjmp	.-58     	; 0x9a <main+0x18>

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
