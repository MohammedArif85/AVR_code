
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000118  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000312  00000000  00000000  000001a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e8  00000000  00000000  000004b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000293  00000000  00000000  000005a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000834  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ce  00000000  00000000  00000854  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000200  00000000  00000000  00000922  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8a 00 	jmp	0x114	; 0x114 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:




int main()
{DDRD=0x00;
  6c:	11 ba       	out	0x11, r1	; 17
 PORTD=0xFF;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	82 bb       	out	0x12, r24	; 18
 DDRA=0b11110000;//1-output 0-input
  72:	80 ef       	ldi	r24, 0xF0	; 240
  74:	8a bb       	out	0x1a, r24	; 26
 PORTA=0b00000000;
  76:	1b ba       	out	0x1b, r1	; 27
 while(1)
 {
   if((PIND&0x01)==0)
   {PORTA=0b10000000;
  78:	70 e8       	ldi	r23, 0x80	; 128
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7a:	20 e9       	ldi	r18, 0x90	; 144
  7c:	31 e0       	ldi	r19, 0x01	; 1
   _delay_ms(50);
   PORTA=0b01000000;
  7e:	60 e4       	ldi	r22, 0x40	; 64
   _delay_ms(50);
   PORTA=0b00100000;
  80:	50 e2       	ldi	r21, 0x20	; 32
   _delay_ms(50);
   PORTA=0b00010000;
  82:	40 e1       	ldi	r20, 0x10	; 16
 PORTD=0xFF;
 DDRA=0b11110000;//1-output 0-input
 PORTA=0b00000000;
 while(1)
 {
   if((PIND&0x01)==0)
  84:	80 99       	sbic	0x10, 0	; 16
  86:	21 c0       	rjmp	.+66     	; 0xca <main+0x5e>
   {PORTA=0b10000000;
  88:	7b bb       	out	0x1b, r23	; 27
  8a:	84 ef       	ldi	r24, 0xF4	; 244
  8c:	91 e0       	ldi	r25, 0x01	; 1
  8e:	f9 01       	movw	r30, r18
  90:	31 97       	sbiw	r30, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <main+0x24>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  94:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  96:	d9 f7       	brne	.-10     	; 0x8e <main+0x22>
   _delay_ms(50);
   PORTA=0b01000000;
  98:	6b bb       	out	0x1b, r22	; 27
  9a:	84 ef       	ldi	r24, 0xF4	; 244
  9c:	91 e0       	ldi	r25, 0x01	; 1
  9e:	f9 01       	movw	r30, r18
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <main+0x34>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  a6:	d9 f7       	brne	.-10     	; 0x9e <main+0x32>
   _delay_ms(50);
   PORTA=0b00100000;
  a8:	5b bb       	out	0x1b, r21	; 27
  aa:	84 ef       	ldi	r24, 0xF4	; 244
  ac:	91 e0       	ldi	r25, 0x01	; 1
  ae:	f9 01       	movw	r30, r18
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  b6:	d9 f7       	brne	.-10     	; 0xae <main+0x42>
   _delay_ms(50);
   PORTA=0b00010000;
  b8:	4b bb       	out	0x1b, r20	; 27
  ba:	84 ef       	ldi	r24, 0xF4	; 244
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	f9 01       	movw	r30, r18
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x54>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c6:	d9 f7       	brne	.-10     	; 0xbe <main+0x52>
  c8:	dd cf       	rjmp	.-70     	; 0x84 <main+0x18>
   _delay_ms(50);
   }
else if((PIND&0x02)==0)
  ca:	81 99       	sbic	0x10, 1	; 16
  cc:	21 c0       	rjmp	.+66     	; 0x110 <main+0xa4>
   {PORTA=0x10;
  ce:	4b bb       	out	0x1b, r20	; 27
  d0:	84 ef       	ldi	r24, 0xF4	; 244
  d2:	91 e0       	ldi	r25, 0x01	; 1
  d4:	f9 01       	movw	r30, r18
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <main+0x6a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  dc:	d9 f7       	brne	.-10     	; 0xd4 <main+0x68>
   _delay_ms(50);
   PORTA=0x20;
  de:	5b bb       	out	0x1b, r21	; 27
  e0:	84 ef       	ldi	r24, 0xF4	; 244
  e2:	91 e0       	ldi	r25, 0x01	; 1
  e4:	f9 01       	movw	r30, r18
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x7a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ec:	d9 f7       	brne	.-10     	; 0xe4 <main+0x78>
   _delay_ms(50);
   PORTA=0x40;
  ee:	6b bb       	out	0x1b, r22	; 27
  f0:	84 ef       	ldi	r24, 0xF4	; 244
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	f9 01       	movw	r30, r18
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x8a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fc:	d9 f7       	brne	.-10     	; 0xf4 <main+0x88>
   _delay_ms(50);
   PORTA=0x80;
  fe:	7b bb       	out	0x1b, r23	; 27
 100:	84 ef       	ldi	r24, 0xF4	; 244
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	f9 01       	movw	r30, r18
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x9a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 10a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 10c:	d9 f7       	brne	.-10     	; 0x104 <main+0x98>
 10e:	ba cf       	rjmp	.-140    	; 0x84 <main+0x18>
   _delay_ms(50);
   }
   else
   {
    PORTA=0x00;
 110:	1b ba       	out	0x1b, r1	; 27
 112:	b8 cf       	rjmp	.-144    	; 0x84 <main+0x18>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
