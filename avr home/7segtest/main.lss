
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000001d4  00000268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00000272  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000272  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000006c  00000000  00000000  00000292  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000261  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000137  00000000  00000000  0000055f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000284  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  0000091c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000e1  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00000a2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00000a75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 90 00 	call	0x120	; 0x120 <main>
  8a:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_9>:
 0b01111111,
 0b00011111
}; 
volatile unsigned char d1,d2,d3,d4,count=0,dot=0,sec=0;
ISR(TIMER0_OVF_vect)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
 count++;
  9e:	80 91 6a 00 	lds	r24, 0x006A
  a2:	8f 5f       	subi	r24, 0xFF	; 255
  a4:	80 93 6a 00 	sts	0x006A, r24
 if(count==61)
  a8:	80 91 6a 00 	lds	r24, 0x006A
  ac:	8d 33       	cpi	r24, 0x3D	; 61
  ae:	91 f5       	brne	.+100    	; 0x114 <__vector_9+0x82>
 {
  count=0;
  b0:	10 92 6a 00 	sts	0x006A, r1
  
  if(dot==0)
  b4:	80 91 6b 00 	lds	r24, 0x006B
  b8:	88 23       	and	r24, r24
  ba:	21 f4       	brne	.+8      	; 0xc4 <__vector_9+0x32>
  {
   dot=0x80;
  bc:	80 e8       	ldi	r24, 0x80	; 128
  be:	80 93 6b 00 	sts	0x006B, r24
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__vector_9+0x36>
  }
  else
  {
   dot=0x00;
  c4:	10 92 6b 00 	sts	0x006B, r1
  }
  
  d1++;
  c8:	80 91 6d 00 	lds	r24, 0x006D
  cc:	8f 5f       	subi	r24, 0xFF	; 255
  ce:	80 93 6d 00 	sts	0x006D, r24
  if(d1>9)
  d2:	80 91 6d 00 	lds	r24, 0x006D
  d6:	8a 30       	cpi	r24, 0x0A	; 10
  d8:	38 f0       	brcs	.+14     	; 0xe8 <__vector_9+0x56>
  {d1=0;
  da:	10 92 6d 00 	sts	0x006D, r1
   d2++;
  de:	80 91 6e 00 	lds	r24, 0x006E
  e2:	8f 5f       	subi	r24, 0xFF	; 255
  e4:	80 93 6e 00 	sts	0x006E, r24
  }
  if(d2>5)
  e8:	80 91 6e 00 	lds	r24, 0x006E
  ec:	86 30       	cpi	r24, 0x06	; 6
  ee:	38 f0       	brcs	.+14     	; 0xfe <__vector_9+0x6c>
  {
   d2=0;
  f0:	10 92 6e 00 	sts	0x006E, r1
   d3++;
  f4:	80 91 70 00 	lds	r24, 0x0070
  f8:	8f 5f       	subi	r24, 0xFF	; 255
  fa:	80 93 70 00 	sts	0x0070, r24
  }
  if(d3>9)
  fe:	80 91 70 00 	lds	r24, 0x0070
 102:	8a 30       	cpi	r24, 0x0A	; 10
 104:	38 f0       	brcs	.+14     	; 0x114 <__vector_9+0x82>
  {
   d3=0;
 106:	10 92 70 00 	sts	0x0070, r1
   d4++;
 10a:	80 91 6f 00 	lds	r24, 0x006F
 10e:	8f 5f       	subi	r24, 0xFF	; 255
 110:	80 93 6f 00 	sts	0x006F, r24
  }
  
 }
}
 114:	8f 91       	pop	r24
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <main>:
int main(void)
{
  DDRB=0x0F;
 120:	8f e0       	ldi	r24, 0x0F	; 15
 122:	87 bb       	out	0x17, r24	; 23
 DDRA=0xFF;
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	8a bb       	out	0x1a, r24	; 26

 PORTA=0x00;
 128:	1b ba       	out	0x1b, r1	; 27
 //selecting FCPU/1024
   TCCR0|=(1<<CS02)|(CS01);
 12a:	83 b7       	in	r24, 0x33	; 51
 12c:	85 60       	ori	r24, 0x05	; 5
 12e:	83 bf       	out	0x33, r24	; 51
   //enable interrupt
   TIMSK|=(1<<TOIE0);
 130:	89 b7       	in	r24, 0x39	; 57
 132:	81 60       	ori	r24, 0x01	; 1
 134:	89 bf       	out	0x39, r24	; 57
   TCNT0=0;
 136:	12 be       	out	0x32, r1	; 50
   
 d1=0;
 138:	10 92 6d 00 	sts	0x006D, r1
 d2=0;
 13c:	10 92 6e 00 	sts	0x006E, r1
 d3=0;
 140:	10 92 70 00 	sts	0x0070, r1
 d4=0;sec=0;
 144:	10 92 6f 00 	sts	0x006F, r1
 148:	10 92 6c 00 	sts	0x006C, r1
 sei();
 14c:	78 94       	sei
 
   while(1)
   { 
    PORTB=0x01;
 14e:	a1 e0       	ldi	r26, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 150:	20 ed       	ldi	r18, 0xD0	; 208
 152:	37 e0       	ldi	r19, 0x07	; 7
	PORTA=segdisp[d1]|dot;
	_delay_ms(1);
    PORTB=0x02;
 154:	72 e0       	ldi	r23, 0x02	; 2
	PORTA=segdisp[d2]|dot;
	_delay_ms(1);
    PORTB=0x04;
 156:	64 e0       	ldi	r22, 0x04	; 4
	PORTA=segdisp[d3]|dot;
	_delay_ms(1);
    PORTB=0x08;
 158:	58 e0       	ldi	r21, 0x08	; 8
	PORTA=segdisp[d4]|dot;
	_delay_ms(1);
    PORTB=0xFF; 
 15a:	4f ef       	ldi	r20, 0xFF	; 255
 d4=0;sec=0;
 sei();
 
   while(1)
   { 
    PORTB=0x01;
 15c:	a8 bb       	out	0x18, r26	; 24
	PORTA=segdisp[d1]|dot;
 15e:	e0 91 6d 00 	lds	r30, 0x006D
 162:	90 91 6b 00 	lds	r25, 0x006B
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	e0 5a       	subi	r30, 0xA0	; 160
 16a:	ff 4f       	sbci	r31, 0xFF	; 255
 16c:	80 81       	ld	r24, Z
 16e:	98 2b       	or	r25, r24
 170:	9b bb       	out	0x1b, r25	; 27
 172:	c9 01       	movw	r24, r18
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <main+0x54>
	_delay_ms(1);
    PORTB=0x02;
 178:	78 bb       	out	0x18, r23	; 24
	PORTA=segdisp[d2]|dot;
 17a:	e0 91 6e 00 	lds	r30, 0x006E
 17e:	90 91 6b 00 	lds	r25, 0x006B
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	e0 5a       	subi	r30, 0xA0	; 160
 186:	ff 4f       	sbci	r31, 0xFF	; 255
 188:	80 81       	ld	r24, Z
 18a:	98 2b       	or	r25, r24
 18c:	9b bb       	out	0x1b, r25	; 27
 18e:	c9 01       	movw	r24, r18
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <main+0x70>
	_delay_ms(1);
    PORTB=0x04;
 194:	68 bb       	out	0x18, r22	; 24
	PORTA=segdisp[d3]|dot;
 196:	e0 91 70 00 	lds	r30, 0x0070
 19a:	90 91 6b 00 	lds	r25, 0x006B
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	e0 5a       	subi	r30, 0xA0	; 160
 1a2:	ff 4f       	sbci	r31, 0xFF	; 255
 1a4:	80 81       	ld	r24, Z
 1a6:	98 2b       	or	r25, r24
 1a8:	9b bb       	out	0x1b, r25	; 27
 1aa:	c9 01       	movw	r24, r18
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0x8c>
	_delay_ms(1);
    PORTB=0x08;
 1b0:	58 bb       	out	0x18, r21	; 24
	PORTA=segdisp[d4]|dot;
 1b2:	e0 91 6f 00 	lds	r30, 0x006F
 1b6:	90 91 6b 00 	lds	r25, 0x006B
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	e0 5a       	subi	r30, 0xA0	; 160
 1be:	ff 4f       	sbci	r31, 0xFF	; 255
 1c0:	80 81       	ld	r24, Z
 1c2:	98 2b       	or	r25, r24
 1c4:	9b bb       	out	0x1b, r25	; 27
 1c6:	c9 01       	movw	r24, r18
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <main+0xa8>
	_delay_ms(1);
    PORTB=0xFF; 
 1cc:	48 bb       	out	0x18, r20	; 24
 1ce:	c6 cf       	rjmp	.-116    	; 0x15c <main+0x3c>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>
